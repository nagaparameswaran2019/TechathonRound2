{"version":3,"file":"kendo.scheduler.timelineview.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","ui","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","encode","htmlEncode","getDate","getMilliseconds","MS_PER_DAY","MS_PER_MINUTE","INVERSE_COLOR_CLASS","BORDER_SIZE_COEFF","NS","EVENT_TEMPLATE","template","ref","title","start","end","format","DATA_HEADER_TEMPLATE","EVENT_WRAPPER_TEMPLATE","task","ariaLabel","resources","tail","isException","isRecurring","showDelete","messages","head","resizable","toInvariantTime","staticDate","Date","setColspan","columnLevel","count","columns","i","length","colspan","TimelineGroupedView","Class","init","view","this","_view","_getTimeSlotByPosition","x","y","groupIndex","groups","timeSlotByPosition","_hideHeaders","timesHeader","find","last","hide","datesHeader","_setColspan","timeColumn","_createRowsLayout","rows","groupHeaderTemplate","_createVerticalColumnsLayout","_createColumnsLayout","_getRowCount","_groupCount","_getGroupsCount","_addContent","dates","columnCount","groupsCount","rowCount","slotTemplate","isVerticalGrouped","html","options","appendRow","tmplDate","content","classes","isToday","idx","workDayStart","workDayEnd","_isWorkDay","rowIdx","groupIdx","_resourceBySlot","_forTimeRange","_addTimeSlotsCollections","groupCount","datesCount","tableRows","interval","isVerticallyGrouped","Math","floor","time","rowMultiplier","group","cellMultiplier","cells","children","cellsPerGroup","cellsPerDay","dateIndex","cellOffset","startTime","cellIndex","_addTimeSlotToCollection","_getVerticalGroupCount","_getVerticalRowCount","eventGroups","maxRowCount","_isVerticallyGrouped","_renderEvent","eventGroup","event","adjustedEvent","range","container","element","_createEventElement","occurrence","appendTo","css","top","height","eventHeight","eventObject","_startTime","_endTime","uid","slotRange","rowIndex","offsetTop","events","_inverseEventColor","addContinuousEvent","isAllDay","_arrangeRows","_verticalCountForLevel","level","_rowCountForLevel","_horizontalCountForLevel","_columnCountForLevel","_updateCurrentVerticalTimeMarker","ranges","currentTime","elementHtml","headerWrap","left","round","innerRect","getTime","timesTableMarker","prependTo","addClass","CURRENT_TIME_MARKER_ARROW_CLASS","_adjustLeftPosition","prev","position","width","scrollHeight","_changeGroup","_prevGroupSlot","slot","isDay","_collection","_nextGroupSlot","first","_verticalSlots","selection","reverse","_verticalMethod","_normalizeVerticalSelection","_horizontalSlots","method","startSlot","endSlot","multiple","result","_isHorizontallyGrouped","_changeVerticalViewPeriod","_changeHorizontalViewPeriod","slots","shift","_changeViewPeriod","_updateDirection","_createMoveHint","hint","rect","snap","right","offsetHeight","inverseColor","_appendMoveHint","_isRtl","scrollWidth","clientWidth","TimelineGroupedByDateView","times","eq","_createDateLayout","subColumns","isMajorTickColumn","isMiddleColumn","isLastSlotColumn","minorTickColumns","workDateIndex","tempStart","minorTickCount","msInterval","majorTick","_dates","startIndex","endIndex","eventObjects","index","currentSlot","_timeSlotCollections","_slots","dateRange","timeSlotRanges","push","firstTimesCell","lastTimesCell","markerTopPosition","timesTableMarkerCss","previous","_changeDate","collections","_getCollections","tempSlot","startEnd","slotIdx","collection","offsetLeft","offsetWidth","scheduler","TimelineView","that","fn","call","_groupedView","_getGroupedView","name","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_isVirtualized","_isGroupedByDate","_getNextEventIndexBySlot","sortedEvents","tempIndex","startDate","_getSelectedSlot","pad","_getSortedEvents","uniqueAllEvents","sort","second","isDaySlot","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","_scrollTo","elementOffset","elementOffsetDir","containerScroll","scrollLeft","containerOffsetDir","rightDistance","remove","_isInDateSlot","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","orientation","currentGroup","utcCurrentTime","toUtcTime","slotByStartDate","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","editable","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","attr","preventDefault","create","_slotByPosition","pageX","pageY","resourceInfo","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","useClickAsTap","browser","edge","filter","tap","_scrolling","location","_editUserEvents","eventElement","target","touch","initialTouch","hasClass","mozilla","webkit","version","msie","scrollTop","ceil","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","today","endTime","showWorkHours","eventMinWidth","columnWidth","text","majorTimeHeaderTemplate","toString","eventTemplate","dateHeaderTemplate","footer","command","defaultRowText","showFullDay","showWorkDay","settings","Template","templateSettings","_render","_startDate","_endDate","_calculateSlotRanges","createLayout","_layout","_content","_footer","_setContentWidth","refreshLayout","th","currentTarget","contentWidth","contentTable","minWidth","calculatedWidth","add","slotStartTime","slotEndTime","slotRanges","rangeStart","rangeEnd","_slotRanges","min","max","action","verticalByDate","msMin","msMax","msMajorInterval","majorTickDivider","timeColumns","groupedView","minorTickSlots","minorTickIndex","className","minorTicks","middleColumn","lastSlotColumn","minorSlotsCount","slice","groupedResources","_groupOrientation","toggleFullDay","currentDate","isWorkDay","columnLevels","rowLevel","rowLevels","day","getDay","append","_addResourceView","addTimeSlotCollection","addDays","_timeSlotGroups","_timeSlotInterval","cell","getTimeSlotCollection","UTC","getFullYear","getMonth","addTimeSlot","visibleEndDate","nextDate","nextDay","previousDate","previousDay","render","_headerColumnCount","data","Query","field","dir","toArray","eventsByResource","_eventsByResource","_renderEvents","_setRowsHeight","_positionEvents","eventsForGroup","eventUid","Array","isArray","eventIndex","_positionEvent","eventBottomOffset","_getBottomRowOffset","verticalGroupCount","rowsCount","rowHeight","timesRow","row","_refreshSlots","minOffset","maxOffset","slotsCollection","lastSlot","offsetRight","refresh","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","value","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","_isInTimeSlot","slotIndex","_adjustEvent","eventStartTime","_time","eventEndTime","adjustedStartDate","adjustedEndDate","clone","isMultiDayEvent","duration","_continuousEvents","isMobile","destroy","resize","eventStartDate","eventEndDate","eventResources","apply","ns","singleDay","_formatEventAriaLabel","angular","elements","dataItem","rectRight","startPosition","endPosition","rectLeft","eventsForSlot","collidingEvents","addEvent","createRows","rowEvents","j","eventLength","_updateEventForSelection","_eventOptionsForMove","_updateEventForResize","set","_updateMoveHint","distance","clonedEvent","eventDuraton","_removeMoveHint","rangeIndex","_moveHint","_updateResizeHint","_removeResizeHint","startRect","_createResizeHint","_resizeHint","toLocalDate","selectionByElement","vertical","collectionIndex","backward","prevGroupSlot","nextGroupSlot","newStart","newEnd","_isInRange","move","key","handled","keys","DOWN","UP","LEFT","RIGHT","off","clearInterval","groupOptions","passedChildren","numberOfChildren","resourceIndex","levels","groupLevel","groupLevelMember","_setResourceValue","TimelineWeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","TimelineWorkWeekView","weekStart","map","indexOf","TimelineMonthView","firstDayOfMonth","lastDayOfMonth","jQuery"],"sources":["kendo.scheduler.timelineview.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.scheduler.view'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"scheduler.timelineview\",\n        name: \"Scheduler Timeline View\",\n        category: \"web\",\n        description: \"The Scheduler Timeline View\",\n        depends: [ \"scheduler.view\" ],\n        hidden: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            setTime = kendo.date.setTime,\n            SchedulerView = ui.SchedulerView,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            getDate = kendo.date.getDate,\n            getMilliseconds = kendo.date.getMilliseconds,\n            MS_PER_DAY = kendo.date.MS_PER_DAY,\n            MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n            CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n            CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n            SCHEDULER_HEADER_WRAP_CLASS = \"k-scheduler-header-wrap\",\n            INVERSE_COLOR_CLASS = \"k-event-inverse\",\n            BORDER_SIZE_COEFF = 0.8666,\n            NS = \".kendoTimelineView\";\n\n        var EVENT_TEMPLATE = kendo.template(function (ref) {\n            var title = ref.title;\n            var start = ref.start;\n            var end = ref.end;\n\n            return '<div>' +\n            \"<div class=\\\"k-event-template k-event-time\\\">\" + (encode(kendo.format(\"{0:t} - {1:t}\", start, end))) + \"</div>\" +\n            \"<div class=\\\"k-event-template\\\">\" + title + \"</div></div>\";\n        }),\n            DATA_HEADER_TEMPLATE = kendo.template(function (ref) {\n                var date = ref.date;\n\n                return (\"<span class='k-link k-nav-day'>\" + (kendo.format('{0:m}', date)) + \"</span>\");\n        }),\n            EVENT_WRAPPER_TEMPLATE = function (task) { return \"<div role=\\\"button\\\" aria-label=\\\"\" + (encode(task.ariaLabel)) + \"\\\" data-\" + (task.ns) + \"uid=\\\"\" + (task.uid) + \"\\\" \" +\n                \"\" + (task.resources[0] ? (\"style=\\\"background-color:\" + (task.resources[0].color) + \"; border-color: \" + (task.resources[0].color) + \"\\\" class=\\\"k-event\\\">\") : 'class=\"k-event\">') +\n                    '<span class=\"k-event-actions\">' +\n                        \"\" + (task.tail ? '<span class=\"k-icon k-i-arrow-60-left\"></span>' : '') +\n                        \"\" + (task.isException() ? '<span class=\"k-icon k-i-non-recurrence\"></span>' :\n                            (task.isRecurring() ? '<span class=\"k-icon k-i-reload\"></span>' : '')) +\n                    '</span>' +\n                    \"\" + (kendo.template(task.template)(task)) +\n                    '<span class=\"k-event-actions\">' +\n                        \"\" + (task.showDelete ? (\"<a href=\\\"#\\\" class=\\\"k-link k-event-delete\\\" title=\\\"\" + (task.messages.destroy) + \"\\\" aria-label=\\\"\" + (task.messages.destroy) + \"\\\"><span class=\\\"k-icon k-i-close\\\"></span></a>\") : '') +\n                        \"\" + (task.head ? '<span class=\"k-icon k-i-arrow-60-right\"></span>' : '') +\n                    '</span>' +\n                    \"\" + (task.resizable && !task.tail ? '<span class=\"k-resize-handle k-resize-w\"></span>' : '') +\n                    \"\" + (task.resizable && !task.head ? '<span class=\"k-resize-handle k-resize-e\"></span>' : '') +\n                '</div>'; };\n\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n\n        function getWorkDays(options) {\n            if (options.workDays && options.workDays.length) {\n                return options.workDays;\n            }\n\n            var workDays = [];\n            var dayIndex = options.workWeekStart % 7;\n            var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n            workDays.push(dayIndex);\n\n            while (workWeekEnd != dayIndex) {\n                if (dayIndex > 6 ) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n\n        function setColspan(columnLevel) {\n            var count = 0;\n            if (columnLevel.columns) {\n                for (var i = 0; i < columnLevel.columns.length; i++) {\n                    count += setColspan(columnLevel.columns[i]);\n                }\n                columnLevel.colspan = count;\n                return count;\n            } else {\n                columnLevel.colspan = 1;\n                return 1;\n            }\n        }\n\n        function collidingEvents(elements, left, right) {\n            var idx,\n                startPosition,\n                overlaps,\n                endPosition;\n\n            for (idx = elements.length - 1; idx >= 0; idx--) {\n                startPosition = elements[idx].rectLeft;\n                endPosition = elements[idx].rectRight;\n\n                overlaps = startPosition <= left && endPosition >= left;\n\n                if (overlaps || (startPosition >= left && endPosition <= right) || (left <= startPosition && right >= startPosition)) {\n                    if (startPosition < left) {\n                        left = startPosition;\n                    }\n\n                    if (endPosition > right) {\n                        right = endPosition;\n                    }\n                }\n            }\n\n            return eventsForSlot(elements, left, right);\n        }\n\n        function eventsForSlot(elements, left, right) {\n            var events = [];\n\n            for (var idx = 0; idx < elements.length; idx++) {\n                var event = {\n                    rectLeft: elements[idx].rectLeft,\n                    rectRight: elements[idx].rectRight\n                };\n\n                if ((event.rectLeft < left && event.rectRight > left) || (event.rectLeft >= left && event.rectRight <= right)) {\n                    events.push(elements[idx]);\n                }\n            }\n\n            return events;\n        }\n\n        var TimelineGroupedView = kendo.Class.extend({\n            init: function(view) {\n                this._view = view;\n            },\n\n            _getTimeSlotByPosition: function(x, y, groupIndex) {\n                var group = this._view.groups[groupIndex];\n\n                return group.timeSlotByPosition(x, y);\n            },\n\n            _hideHeaders: function() {\n                var view = this._view;\n\n                view.timesHeader.find(\"table tr\").last().hide(); /*Chrome fix, use CSS selector*/\n                view.datesHeader.find(\"table tr\").last().hide();\n            },\n\n            _setColspan: function(timeColumn) {\n                setColspan(timeColumn);\n            },\n\n            _createRowsLayout: function(resources, rows, groupHeaderTemplate) {\n                var view = this._view;\n\n                return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n            },\n\n            _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n\n                return columns;\n            },\n\n            _createColumnsLayout: function(resources, columns, groupHeaderTemplate) {\n                var view = this._view;\n\n                return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n            },\n\n            _getRowCount: function() {\n                var view = this._view;\n\n                return view._groupCount();\n            },\n\n            _getGroupsCount: function() {\n                return 1;\n            },\n\n            _addContent: function(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n                var view = this._view;\n                var html = '';\n                var options = view.options;\n\n                var appendRow = function(date) {\n                    var content = \"\";\n                    var classes = \"\";\n                    var tmplDate;\n\n                    var resources = function(groupIndex) {\n                        return function() {\n                            return view._resourceBySlot({ groupIndex: groupIndex });\n                        };\n                    };\n\n                    if (kendo.date.isToday(dates[idx])) {\n                        classes += \"k-today\";\n                    }\n\n                    if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) ||\n                        kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) ||\n                        !view._isWorkDay(dates[idx])) {\n                        classes += \" k-nonwork-hour\";\n                    }\n\n                    content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                    tmplDate = kendo.date.getDate(dates[idx]);\n                    kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                    content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGrouped ? rowIdx : groupIdx) });\n                    content += \"</td>\";\n\n                    return content;\n                };\n\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += '<tr>';\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        for (var idx = 0, length = columnCount; idx < length; idx++) {\n                            html += view._forTimeRange(start, end, appendRow);\n                        }\n                    }\n                    html += \"</tr>\";\n                }\n                return html;\n            },\n\n            _addTimeSlotsCollections: function(groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n                var view = this._view;\n                var rowCount = tableRows.length;\n\n                if (isVerticallyGrouped) {\n                    rowCount = Math.floor(rowCount / groupCount);\n                }\n\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group = view.groups[groupIndex];\n                    var time;\n\n                    if (isVerticallyGrouped) {\n                        rowMultiplier = groupIndex;\n                    }\n\n                    var rowIndex = rowMultiplier * rowCount;\n                    var cellMultiplier = 0;\n\n                    if (!isVerticallyGrouped) {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    var cells = tableRows[rowIndex].children;\n                    var cellsPerGroup = cells.length / (!isVerticallyGrouped ? groupCount : 1);\n                    var cellsPerDay = cellsPerGroup / datesCount;\n\n                    for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                        var cellOffset = dateIndex * cellsPerDay + (cellsPerGroup * cellMultiplier);\n                        time = getMilliseconds(new Date(+view.startTime()));\n\n                        for (var cellIndex = 0; cellIndex < cellsPerDay; cellIndex++) {\n\n                            view._addTimeSlotToCollection(group, cells, cellIndex, cellOffset, dateIndex, time, interval);\n                            time += interval;\n                        }\n                    }\n                }\n            },\n\n            _getVerticalGroupCount: function(groupsCount) {\n\n                return groupsCount;\n            },\n\n            _getVerticalRowCount: function(eventGroups, groupIndex, maxRowCount) {\n                var view = this._view;\n\n                return view._isVerticallyGrouped() ? eventGroups[groupIndex].maxRowCount : maxRowCount;\n            },\n\n            _renderEvent: function(eventGroup, event, adjustedEvent, group, range, container) {\n                var view = this._view;\n                var element;\n\n                element = view._createEventElement(adjustedEvent.occurrence, event, range.head || adjustedEvent.head, range.tail || adjustedEvent.tail);\n                element.appendTo(container).css({ top: 0, height: view.options.eventHeight });\n\n                var eventObject = {\n                    start: adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start,\n                    end: adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end,\n                    element: element,\n                    uid: event.uid,\n                    slotRange: range,\n                    rowIndex: 0,\n                    offsetTop: 0\n                };\n\n                eventGroup.events[event.uid] = eventObject;\n\n                view._inverseEventColor(element);\n                view.addContinuousEvent(group, range, element, event.isAllDay);\n                view._arrangeRows(eventObject, range, eventGroup);\n            },\n\n            _verticalCountForLevel: function(level) {\n                var view = this._view;\n\n                return view._rowCountForLevel(level);\n            },\n\n            _horizontalCountForLevel: function(level) {\n                var view = this._view;\n\n                return view._columnCountForLevel(level);\n            },\n\n            _updateCurrentVerticalTimeMarker: function(ranges, currentTime) {\n                var view = this._view;\n                var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n                var headerWrap = view.datesHeader.find(\".\" + SCHEDULER_HEADER_WRAP_CLASS);\n                var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                var timesTableMarker = $(elementHtml)\n                        .prependTo(headerWrap)\n                        .addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-down\");\n\n                timesTableMarker.css({\n                    left: view._adjustLeftPosition(left - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2)),\n                    top: headerWrap.find(\"tr\").last().prev().position().top\n                });\n\n                $(elementHtml).prependTo(view.content).css({\n                    left: view._adjustLeftPosition(left),\n                    width: \"1px\",\n                    height: view.content[0].scrollHeight - 1,\n                    top: 0\n                });\n            },\n\n            _changeGroup: function() {\n                return undefined$1;\n            },\n\n            _prevGroupSlot: function(slot, group, isDay) {\n                var view = this._view;\n\n                if (view._isVerticallyGrouped()) {\n                    return slot;\n                } else {\n                    var collection = group._collection(0, isDay);\n                    return collection.last();\n                }\n            },\n\n            _nextGroupSlot: function(slot, group, isDay) {\n                var view = this._view;\n\n                if (view._isVerticallyGrouped()) {\n                    return slot;\n                } else {\n                    var collection = group._collection(0, isDay);\n                    return collection.first();\n                }\n            },\n\n            _verticalSlots: function(selection, reverse) {\n                 var view = this._view;\n\n                 return view._changeGroup(selection, reverse);\n            },\n\n             _verticalMethod: function(reverse) {\n\n                  return reverse ? \"leftSlot\" : \"rightSlot\";\n             },\n\n             _normalizeVerticalSelection: function() {\n                 return undefined$1;\n             },\n\n             _horizontalSlots: function(selection, group, method, startSlot, endSlot, multiple, reverse) {\n                var view = this._view;\n                var result = {};\n\n                result.startSlot = group[method](startSlot);\n                result.endSlot = group[method](endSlot);\n\n                if (!multiple && view._isHorizontallyGrouped() && (!result.startSlot || !result.endSlot)) {\n                    result.startSlot = result.endSlot = view._changeGroup(selection, reverse);\n                }\n\n                return result;\n            },\n\n            _changeVerticalViewPeriod: function() {\n                return false;\n            },\n\n            _changeHorizontalViewPeriod: function(slots, shift, selection, reverse) {\n                var view = this._view;\n\n                if ((!slots.startSlot || !slots.endSlot ) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                    return true;\n                }\n                return false;\n            },\n\n            _updateDirection: function(selection, ranges, shift, reverse) {\n                var view = this._view;\n\n                view._updateDirection(selection, ranges, shift, reverse, true);\n            },\n\n             _createMoveHint: function(range, adjustedEvent) {\n                    var view = this._view;\n                    var startSlot = range.start;\n\n                    var hint = view._createEventElement(adjustedEvent.occurrence ,adjustedEvent.occurrence, false, false);\n\n                    hint.addClass(\"k-event-drag-hint\");\n\n                    var rect = range.innerRect(adjustedEvent.occurrence.start, adjustedEvent.occurrence.end, view.options.snap);\n                    var width = rect.right - rect.left;\n\n                    if (width < 0) {\n                        width = 0;\n                    }\n\n                    var left = view._adjustLeftPosition(rect.left);\n\n                    var css = {\n                        left: left,\n                        top: startSlot.offsetTop,\n                        height: startSlot.offsetHeight,\n                        width: width\n                    };\n\n                    hint.css(css);\n\n                    if (adjustedEvent.occurrence.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n\n                    view._appendMoveHint(hint);\n             },\n\n             _adjustLeftPosition: function(left) {\n                var view = this._view;\n\n                if (view._isRtl) {\n                    left -= (view.content[0].scrollWidth - view.content[0].clientWidth);\n                }\n\n                return left;\n             }\n        });\n\n        var TimelineGroupedByDateView = kendo.Class.extend({\n            init: function(view) {\n                this._view = view;\n            },\n\n            _getTimeSlotByPosition: function(x, y, groupIndex) {\n                var group = this._view.groups[groupIndex];\n\n                return group.timeSlotByPosition(x, y, true);\n            },\n\n            _hideHeaders: function() {\n                var view = this._view;\n\n                if (!view._isVerticallyGrouped()) {\n                    view.timesHeader.find(\"table tr\").eq(2).hide();\n                    view.datesHeader.find(\"table tr\").eq(2).hide();\n                } else {\n                            view.times.find(\".k-last\").hide();\n                }\n            },\n            _setColspan: function() {},\n\n            _createRowsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n                var view = this._view;\n\n                return view._createDateLayout(columns, null, true);\n            },\n\n            _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate) {\n                var view = this._view;\n\n                return view._createColumnsLayout(resources, null, groupHeaderTemplate);\n            },\n\n            _createColumnsLayout: function(resources, columns, groupHeaderTemplate, subColumns) {\n                var view = this._view;\n\n                return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n            },\n\n            _getRowCount: function(level) {\n                var view = this._view;\n\n                return view._rowCountForLevel(level);\n            },\n\n            _getGroupsCount: function() {\n                var view = this._view;\n\n                return view._groupCount();\n            },\n\n            _addContent: function(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n                var view = this._view;\n                var html = '';\n                var options = view.options;\n\n                var appendRow = function(date, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, groupIdx) {\n                    var content = \"\";\n                    var classes = \"\";\n                    var tmplDate;\n                    var workDateIndex = view._isVerticallyGrouped() ? dateIndex : idx;\n\n                    var resources = function(groupIndex) {\n                        return function() {\n                            return view._resourceBySlot({ groupIndex: groupIndex });\n                        };\n                    };\n\n                    if (kendo.date.isToday(dates[idx])) {\n                        classes += \"k-today\";\n                    }\n\n                    if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) ||\n                        kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) ||\n                        !view._isWorkDay(dates[workDateIndex])) {\n                        classes += \" k-nonwork-hour\";\n                    }\n\n                    content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                    tmplDate = kendo.date.getDate(dates[idx]);\n                    kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                    content += slotTemplate({ date: tmplDate, resources: resources(groupIdx) });\n                    content += \"</td>\";\n\n                    return content;\n                };\n\n                var tempStart = new Date(start),\n                    minorTickCount = view.options.minorTickCount,\n                    msMajorInterval = view.options.majorTick * MS_PER_MINUTE,\n                    msInterval = msMajorInterval / minorTickCount || 1,\n                    dateIndex;\n\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += '<tr>';\n\n                     if ((rowIdx % (rowCount / view._dates.length)) === 0) {\n                       dateIndex = (rowIdx / (rowCount / view._dates.length));\n                       tempStart = new Date(view._dates[dateIndex]);\n                       kendo.date.setTime(tempStart, kendo.date.getMilliseconds(start));\n                      }\n\n                    for (var idx = 0, length = columnCount; idx < length; idx++) {\n\n                        html += view._forTimeRange(tempStart, end, appendRow, isVerticalGrouped, groupsCount);\n\n                        if (isVerticalGrouped) {\n                        setTime(tempStart, msInterval, false);\n                            break;\n                        }\n                    }\n                   html += \"</tr>\";\n                }\n\n                return html;\n            },\n\n            _addTimeSlotsCollections: function(groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n                var view = this._view;\n                var rowCount = tableRows.length;\n\n                 if (isVerticallyGrouped) {\n                    rowCount = rowCount / datesCount;\n                 }\n\n                for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                    var rowMultiplier = 0;\n                    var time;\n\n                    if (isVerticallyGrouped) {\n                        rowMultiplier = dateIndex;\n                    }\n\n                    var rowIndex = rowMultiplier * rowCount;\n                    var cellMultiplier = 0;\n                    var cells = tableRows[rowIndex].children;\n                    var cellsPerGroup = isVerticallyGrouped ? rowCount : cells.length / (datesCount * groupCount);\n                    var cellsPerDay = cells.length / datesCount;\n                    var cellOffset;\n\n                    time = getMilliseconds(new Date(+view.startTime()));\n\n                    for (var cellIndex = 0; cellIndex < cellsPerGroup; cellIndex++) {\n                        if (!isVerticallyGrouped) {\n                            cellOffset = (dateIndex * cellsPerDay) + (groupCount * cellIndex);\n                            cellMultiplier++;\n                        } else {\n                            cellOffset = 0;\n                            cells = tableRows[cellIndex + (cellsPerGroup * dateIndex)].children;\n                        }\n\n                        for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                            var group = view.groups[groupIndex];\n\n                            view._addTimeSlotToCollection(group, cells, groupIndex, cellOffset, dateIndex, time, interval);\n                        }\n                        time += interval;\n                    }\n                 }\n            },\n\n            _getVerticalGroupCount: function() {\n                var view = this._view;\n\n                return view.content.find(\"tr\").length;\n            },\n\n            _getVerticalRowCount: function(eventGroups, groupIndex, maxRowCount) {\n\n                return maxRowCount;\n            },\n\n            _renderEvent: function(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex) {\n                var view = this._view;\n                var element;\n                var eventObjects = [];\n\n                for (var i = range.start.index; i <= range.end.index; i++) {\n                    element = view._createEventElement(adjustedEvent.occurrence, event, i !== endIndex, i !== startIndex);\n                    element.appendTo(container).css({ top: 0, height: view.options.eventHeight });\n                    var currentSlot = group._timeSlotCollections[0]._slots[i];\n                    var dateRange = group.timeSlotRanges(currentSlot.start, currentSlot.end, false)[0];\n\n                        var eventObject = {\n                        start: i === startIndex ? adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start : currentSlot.start,\n                        end: i === endIndex ? adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end : currentSlot.end,\n                        element: element,\n                        uid: event.uid,\n                        slotRange: dateRange,\n                        rowIndex: 0,\n                        offsetTop: 0\n                    };\n\n                    eventGroup.events[event.uid] = eventObject;\n                    eventObjects.push(eventObject);\n\n                    view.addContinuousEvent(group, dateRange, element, event.isAllDay);\n                    view._arrangeRows(eventObject, dateRange, eventGroup);\n                }\n                eventGroup.events[event.uid] = eventObjects;\n            },\n\n            _verticalCountForLevel: function(level) {\n                var view = this._view;\n\n                return view._columnCountForLevel(level);\n            },\n\n            _horizontalCountForLevel: function(level, columnLevel) {\n                var view = this._view;\n\n                return view._columnCountForLevel(columnLevel) / view._columnCountForLevel(2);\n            },\n\n            _updateCurrentVerticalTimeMarker: function(ranges,currentTime) {\n                var view = this._view;\n                var firstTimesCell = view.times.find(\"tr\").first().find(\"th\").first();\n                var lastTimesCell = view.times.find(\"tr\").first().find(\"th\").last();\n                var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n                var timesTableMarker = $(elementHtml).prependTo(view.times);\n                var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n                var timesTableMarkerCss = {};\n\n                if (this._isRtl) {\n                    timesTableMarkerCss.right = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                    timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n                } else {\n                    timesTableMarkerCss.left = lastTimesCell.position().left;\n                    timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n                }\n\n                timesTableMarkerCss.top = markerTopPosition - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n\n                timesTableMarker.css(timesTableMarkerCss);\n\n                $(elementHtml).prependTo(view.content).css({\n                    top: markerTopPosition,\n                    height: \"1px\",\n                    right: \"1px\",\n                    width: view.content[0].scrollWidth,\n                    left: 0\n                });\n            },\n\n            _changeGroup: function(selection, previous, slot) {\n                 var view = this._view;\n\n                 if (!slot) {\n                    selection.groupIndex = previous ? view.groups.length - 1 : 0;\n                 }\n            },\n\n             _prevGroupSlot: function(slot) {\n                  return slot;\n            },\n\n            _nextGroupSlot: function(slot) {\n                  return slot;\n            },\n\n            _changeDate: function(selection, reverse, slot) {\n                var view = this._view;\n                var group = view.groups[selection.groupIndex];\n                var collections, index;\n\n                if (reverse) {\n                      collections = group._getCollections(false);\n                      index = slot.index - 1;\n\n                      if (index >= 0) {\n                          return collections[0]._slots[index];\n                      }\n                  } else {\n                      collections = group._getCollections(false);\n                      index = slot.index + 1;\n\n                      if (collections[0] && collections[0]._slots[index]) {\n                          return collections[0]._slots[index];\n                      }\n                   }\n            },\n\n            _verticalSlots: function(selection, reverse, slot) {\n                return this._changeDate(selection, reverse, slot);\n            },\n\n            _verticalMethod: function(reverse, multiple) {\n                if (multiple) {\n                   return reverse ? \"upSlot\" : \"downSlot\";\n                } else {\n                   return reverse ? \"leftSlot\" : \"rightSlot\";\n                }\n            },\n\n            _normalizeVerticalSelection: function(selection, ranges, reverse, multiple) {\n                var view = this._view;\n\n                if (!multiple) {\n                    return view._normalizeVerticalSelection(selection, ranges, reverse);\n                }\n\n                return undefined$1;\n            },\n\n            _horizontalSlots: function(selection, group, method, startSlot, endSlot, multiple, reverse) {\n                 var view = this._view;\n                 var tempSlot = view._changeGroup(selection, reverse);\n                 var result = {};\n\n                if (!tempSlot) {\n                    if (!view._isVerticallyGrouped()) {\n                        result.startSlot = group[method](startSlot);\n                        result.endSlot = group[method](endSlot);\n                    }\n\n                } else {\n                    result.startSlot = result.endSlot = tempSlot;\n                }\n\n                return result;\n            },\n\n            _changeVerticalViewPeriod: function(slots, shift, selection, reverse) {\n                var view = this._view;\n\n                if ((!slots.startSlot || !slots.endSlot) && !shift &&\n                    view._changeViewPeriod(selection, reverse, view._isVerticallyGrouped())) {\n                    return true;\n                }\n                return false;\n            },\n\n            _changeHorizontalViewPeriod: function(slots, shift, selection, reverse) {\n               var view = this._view;\n\n               if ( view._isVerticallyGrouped()) {\n                   return false;\n               }\n\n               if ((!slots.startSlot || !slots.endSlot ) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                    return true;\n                }\n                return false;\n            },\n\n            _updateDirection: function(selection, ranges, shift, reverse) {\n                var view = this._view;\n\n                view._updateDirection(selection, ranges, shift, reverse, !view._isVerticallyGrouped());\n            },\n\n             _createMoveHint: function(range, adjustedEvent) {\n                    var view = this._view;\n                    var startSlot = range.start;\n                    var startEnd = range.end;\n\n                    for (var slotIdx = startSlot.index; slotIdx <= startEnd.index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n                        var hint = view._createEventElement(adjustedEvent.occurrence ,adjustedEvent.occurrence, false, false);\n\n                        hint.addClass(\"k-event-drag-hint\");\n\n                        var css = {\n                            left: slot.offsetLeft + 2,\n                            top: slot.offsetTop,\n                            height: view.options.eventHeight,\n                            width: slot.offsetWidth\n                        };\n\n                        hint.css(css);\n\n                        if (adjustedEvent.occurrence.inverseColor) {\n                            hint.addClass(INVERSE_COLOR_CLASS);\n                        }\n\n                        view._appendMoveHint(hint);\n                    }\n             },\n\n             _adjustLeftPosition: function(left) {\n                 var view = this._view;\n\n                if (view._isRtl && !view._isVerticallyGrouped()) {\n                    left -= (view.content[0].scrollWidth - view.content[0].offsetWidth);\n                }\n\n                return left;\n             }\n     });\n\n        kendo.ui.scheduler.TimelineGroupedView = TimelineGroupedView;\n        kendo.ui.scheduler.TimelineGroupedByDateView = TimelineGroupedByDateView;\n\n        var TimelineView = SchedulerView.extend({\n            init: function(element, options) {\n                var that = this;\n\n                SchedulerView.fn.init.call(that, element, options);\n\n                that._groupedView = that._getGroupedView();\n\n                that.title = that.options.title || that.options.name;\n\n                that._workDays = getWorkDays(that.options);\n\n                that._templates();\n\n                that._editable();\n\n                that.calculateDateRange();\n\n                that._groups();\n\n                that._currentTime(true);\n            },\n            name: \"timeline\",\n\n            _isVirtualized: function() {\n                return false;\n            },\n\n            _getGroupedView: function() {\n\n                if (this._isGroupedByDate()) {\n                       return new kendo.ui.scheduler.TimelineGroupedByDateView(this);\n                } else {\n                       return new kendo.ui.scheduler.TimelineGroupedView(this);\n                }\n            },\n\n            _getNextEventIndexBySlot: function(slot, sortedEvents, groupIndex) {\n               if (this._isVerticallyGrouped()) {\n                   return kendo.ui.SchedulerView.fn._getNextEventIndexBySlot.call(this, slot, sortedEvents, groupIndex);\n               }\n\n                var tempIndex = 0;\n\n                for (var i = 0; i < sortedEvents.length; i++) {\n                    if (slot.startDate() > sortedEvents[i].start.startDate()) {\n                        tempIndex++;\n                        continue;\n                    }\n\n                    if (slot.startDate().getTime() === sortedEvents[i].start.startDate().getTime() &&\n                     groupIndex > sortedEvents[i].start.groupIndex) {\n                          tempIndex++;\n                          continue;\n                    }\n\n                     break;\n\n                }\n                return tempIndex;\n            },\n\n            _getSelectedSlot: function(slot, sortedEvents, event, idx, pad, prev) {\n                if (this._isVerticallyGrouped()) {\n                   return kendo.ui.SchedulerView.fn._getSelectedSlot.call(this, slot, sortedEvents, event, idx, pad, prev);\n                }\n\n                return slot;\n            },\n\n            _getSortedEvents: function(uniqueAllEvents) {\n                if (this._isVerticallyGrouped()) {\n                   return kendo.ui.SchedulerView.fn._getSortedEvents.call(this, uniqueAllEvents);\n                }\n\n                return uniqueAllEvents.sort(function(first, second) {\n                    var result = first.start.startDate().getTime() - second.start.startDate().getTime();\n\n                    if (result === 0) {\n                        if (first.start.isDaySlot && !second.start.isDaySlot) {\n                                result = -1;\n                        }\n\n                        if (!first.start.isDaySlot && second.start.isDaySlot) {\n                                result = 1;\n                        }\n                    }\n\n                    if (result === 0) {\n                        result = first.start.groupIndex - second.start.groupIndex;\n                    }\n\n                    if (result === 0) {\n                        result = $(first.element).index() - $(second.element).index();\n                    }\n\n                    return result;\n                });\n            },\n\n            _currentTimeMarkerUpdater: function() {\n                this._updateCurrentTimeMarker(new Date());\n            },\n\n            _scrollTo: function(element, container) {\n                SchedulerView.fn._scrollTo.call(this, element, container);\n\n                var elementOffset = element.offsetLeft,\n                    elementOffsetDir = element.offsetWidth,\n                    containerScroll = container.scrollLeft,\n                    containerOffsetDir = container.clientWidth,\n                    rightDistance = elementOffset + elementOffsetDir,\n                    result = 0;\n\n                    if (containerScroll > elementOffset) {\n                        result = elementOffset;\n                    } else if (rightDistance > (containerScroll + containerOffsetDir)) {\n                        if (elementOffsetDir <= containerOffsetDir) {\n                            result = (rightDistance - containerOffsetDir);\n                        } else {\n                            result = elementOffset;\n                        }\n                    } else {\n                        result = containerScroll;\n                    }\n                    container.scrollLeft = result;\n            },\n\n            _updateCurrentTimeMarker: function(currentTime) {\n                var options = this.options;\n\n                this.datesHeader.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n                this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n                this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS).remove();\n\n                if (!this._isInDateSlot({ start: currentTime, end: currentTime })) {\n                    return;\n                }\n\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n\n                var groupsCount = !options.group || options.group.orientation == \"vertical\" ? 1 : this.groups.length;\n\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n\n                    if (!currentGroup) {\n                        return;\n                    }\n\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                    if (ranges.length === 0) {\n                        return;\n                    }\n\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n\n                    if (slotElement) {\n\n                        if (this._isVerticallyGrouped()) {\n                            this._groupedView._updateCurrentVerticalTimeMarker(ranges,currentTime);\n                        } else {\n                            var elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n                            var headerWrap = this.datesHeader.find(\".\" + SCHEDULER_HEADER_WRAP_CLASS);\n                            var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                            var timesTableMarker = $(elementHtml)\n                                    .prependTo(headerWrap)\n                                    .addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-down\");\n\n                            timesTableMarker.css({\n                                left: this._adjustLeftPosition(left - (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2)),\n                                top: headerWrap.find(\"tr\").last().prev().position().top\n                            });\n\n                            $(elementHtml).prependTo(this.content).css({\n                                left: this._adjustLeftPosition(left),\n                                width: \"1px\",\n                                height: this.content[0].scrollHeight - 1,\n                                top: 0\n                            });\n                        }\n                    }\n                }\n            },\n\n            _adjustLeftPosition: function(left) {\n                return this._groupedView._adjustLeftPosition(left);\n            },\n\n            _currentTime: function(setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                    that._currentTimeMarkerUpdater();\n\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                    }\n                }\n            },\n\n            _editable: function() {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n\n            _mouseEditable: function() {\n                var that = this;\n                that.element.on(\"click\" + NS, \".k-event a:has(.k-i-close)\", function(e) {\n                    that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n\n                if (that.options.editable.create !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-scheduler-content td\", function(e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                        }\n\n                        e.preventDefault();\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                        that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                        e.preventDefault();\n                    });\n                }\n            },\n\n            _touchEditable: function() {\n                var that = this;\n                var threshold = 0;\n\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-scheduler-content td\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                            var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-event\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var eventElement = $(e.target).closest(\".k-event\");\n                            var touchElement = $(e.touch.initialTouch);\n\n                            if (touchElement.hasClass(\"k-i-close\")) {\n                                that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                            } else if (!eventElement.hasClass(\"k-event-active\")) {\n                                that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n\n            _slotByPosition: function(x, y) {\n                var slot;\n                var content = this.content;\n                var offset = content.offset();\n                var groupIndex;\n\n                x -= offset.left;\n                y -= offset.top;\n\n                if (this._isRtl) {\n                    var browser = kendo.support.browser;\n\n                    if (browser.mozilla || (browser.webkit && browser.version >= 85)) {\n                         x += (content[0].scrollWidth - content[0].offsetWidth);\n                         x += content[0].scrollLeft;\n                    } else if (browser.msie) {\n                         x -= kendo.scrollLeft(content);\n                         x += content[0].scrollWidth - content[0].offsetWidth;\n                    } else if (browser.webkit) {\n                         x += content[0].scrollLeft;\n                    }\n                } else {\n                    x += content[0].scrollLeft;\n                }\n\n                y += content[0].scrollTop;\n\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n\n                     slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n\n                     if (slot) {\n                         return slot;\n                     }\n                }\n\n                return null;\n            },\n\n            options: {\n                name: \"TimelineView\",\n                title: \"Timeline\",\n                selectedDateFormat: \"{0:D}\",\n                selectedShortDateFormat: \"{0:d}\",\n                selectedMobileDateFormat: \"{0:MMM dd}\",\n                date: kendo.date.today(),\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                showWorkHours: false,\n                minorTickCount: 2,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                majorTick: 60,\n                eventHeight: 25,\n                eventMinWidth: 0,\n                columnWidth: 100,\n                groupHeaderTemplate: function (ref) {\n                    var text = ref.text;\n\n                    return text;\n        },\n                majorTimeHeaderTemplate: function (ref) {\n                    var date = ref.date;\n\n                    return kendo.toString(date, 't');\n        },\n                slotTemplate: function () { return \"&nbsp;\"; },\n                eventTemplate: EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                footer: {\n                    command: \"workDay\"\n                },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                },\n                messages: {\n                    defaultRowText: \"All events\",\n                    showFullDay: \"Show full day\",\n                    showWorkDay: \"Show business hours\"\n                }\n            },\n\n            events: [\"remove\", \"add\", \"edit\"],\n\n            _templates: function() {\n                var options = this.options,\n                    settings = extend({}, kendo.Template, options.templateSettings);\n\n                this.eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n\n            _render: function(dates) {\n                var that = this;\n\n                dates = dates || [];\n\n                that._dates = dates;\n\n                that._startDate = dates[0];\n\n                that._endDate = dates[(dates.length - 1) || 0];\n\n                that._calculateSlotRanges();\n\n                that.createLayout(that._layout(dates));\n\n                that._content(dates);\n\n                that._footer();\n\n                that._setContentWidth();\n\n                that.refreshLayout();\n\n                that.datesHeader.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                    var th = $(e.currentTarget).closest(\"th\");\n\n                    var slot = that._slotByPosition(th.offset().left, that.content.offset().top);\n\n                    that.trigger(\"navigate\", { view: \"timeline\", date: slot.startDate() });\n                });\n\n                that._groupedView._hideHeaders();\n            },\n\n            _setContentWidth: function() {\n                var content = this.content;\n                var contentWidth = content.width();\n                var contentTable = this.content.find(\"table\");\n                var columnCount = contentTable.find(\"tr\").first().children().length;\n\n                var minWidth = 100;\n                var calculatedWidth = columnCount * this.options.columnWidth;\n\n                if (contentWidth < calculatedWidth) {\n                    minWidth = Math.ceil((calculatedWidth / contentWidth) * 100);\n                }\n\n                contentTable.add(this.datesHeader.find(\"table\"))\n                    .css(\"width\", minWidth + \"%\");\n            },\n\n            _calculateSlotRanges: function() {\n                var dates = this._dates;\n                var slotStartTime = this.startTime();\n                var slotEndTime = this.endTime();\n\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n\n                if (slotEndTime === slotStartTime) {\n                    slotEndTime += MS_PER_DAY - 1;\n                } else if (slotEndTime < slotStartTime) {\n                    slotEndTime += MS_PER_DAY;\n                }\n\n                var slotRanges = [];\n                for (var i = 0; i < dates.length; i++) {\n                    var rangeStart = getDate(dates[i]);\n                    setTime(rangeStart, slotStartTime);\n\n                    var rangeEnd = getDate(dates[i]);\n                    setTime(rangeEnd, slotEndTime);\n\n                    slotRanges.push({\n                        start: kendo.date.toUtcTime(rangeStart),\n                        end: kendo.date.toUtcTime(rangeEnd)\n                    });\n                }\n\n                this._slotRanges = slotRanges;\n            },\n\n            _forTimeRange: function(min, max, action, verticalByDate, groupsCount) {\n                min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n                max = toInvariantTime(max);\n\n                var that = this,\n                    msMin = getMilliseconds(min),\n                    msMax = getMilliseconds(max),\n                    minorTickCount = that.options.minorTickCount,\n                    msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                    msInterval = msMajorInterval / minorTickCount || 1,\n                    start = new Date(+min),\n                    idx = 0, length,\n                    html = \"\";\n\n                length = MS_PER_DAY / msInterval;\n\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n\n                    length = ((msMax - msMin) / msInterval);\n                }\n\n                length = verticalByDate ? 1 : Math.round(length);\n\n                if (groupsCount) {\n                    length = length * groupsCount;\n                }\n\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval);\n                    var isMajorTickColumn = majorTickDivider === 0;\n                    var isMiddleColumn = majorTickDivider < minorTickCount - 1;\n                    var isLastSlotColumn = majorTickDivider === minorTickCount - 1;\n                    var minorTickColumns = minorTickCount;\n\n                    if (length % minorTickCount !== 0) {\n                        var isLastMajorSlot = (length - (idx + 1)) < minorTickCount;\n                        if (isMajorTickColumn && isLastMajorSlot) {\n                            minorTickColumns = length % minorTickCount;\n                        }\n                    }\n\n                    html += action(start, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, idx % groupsCount);\n\n                    if (!verticalByDate) {\n                        if (groupsCount) {\n                            if ((idx % groupsCount) === groupsCount - 1) {\n                                setTime(start, msInterval, false);\n                            }\n                        } else {\n                            setTime(start, msInterval, false);\n                        }\n                    }\n                }\n\n                return html;\n            },\n\n            _layout: function(dates) {\n                var timeColumns = [];\n                var columns = [];\n                var that = this;\n                var rows = [{ text: that.options.messages.defaultRowText }];\n                var groupedView = that._groupedView;\n\n                var minorTickSlots = [];\n                for (var minorTickIndex = 0; minorTickIndex < that.options.minorTickCount; minorTickIndex++) {\n                    minorTickSlots.push({\n                        text: \"&#8203;\",\n                        className: \"k-last\",\n                        minorTicks: true\n                    });\n                }\n\n                this._forTimeRange(that.startTime(), that.endTime(), function(date, majorTick, middleColumn, lastSlotColumn, minorSlotsCount) {\n                    var template = that.majorTimeHeaderTemplate;\n\n                    if (majorTick) {\n                        var timeColumn = {\n                            text: template({ date: date }),\n                            className: lastSlotColumn ? \"k-slot-cell\" : \"\",\n                            columns: minorTickSlots.slice(0, minorSlotsCount)\n                        };\n\n                        groupedView._setColspan(timeColumn);\n\n                        timeColumns.push(timeColumn);\n                    }\n                });\n\n                for (var idx = 0; idx < dates.length; idx++) {\n                    columns.push({\n                        text: that.dateHeaderTemplate({ date: dates[idx] }),\n                        className: \"k-slot-cell\",\n                        columns: timeColumns.slice(0)\n                    });\n                }\n\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (this._groupOrientation() === \"vertical\") {\n                        rows = groupedView._createRowsLayout(resources, null, this.groupHeaderTemplate, columns);\n                        columns = groupedView._createVerticalColumnsLayout(resources, null, this.groupHeaderTemplate, columns);\n\n                    } else {\n                        columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                    }\n                }\n\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n\n            _footer: function() {\n                var options = this.options;\n\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-scheduler-footer k-toolbar\" role=\"toolbar\">';\n\n                    var command = options.footer.command;\n\n                    if (this._isMobile()) {\n                        html += '<span class=\"k-scheduler-today\"><a tabindex=\"-1\" href=\"#\" class=\"k-link\">';\n                        html += options.messages.today + '</a></span>';\n                    }\n\n                    if (command && command === \"workDay\") {\n                        if (this._isMobile()) {\n                            html += '<span class=\"k-scheduler-fullday\"><a tabindex=\"-1\" href=\"#\" class=\"k-link\">';\n                            html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></span>';\n                        } else {\n                            html += '<button tabindex=\"-1\" type=\"button\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-scheduler-fullday\">';\n                                html += '<span class=\"k-button-icon k-icon k-i-clock\"></span>';\n                                html += '<span class=\"k-button-text\">';\n                                    html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay);\n                                html += '</span>';\n                            html += '</button>';\n                        }\n                    }\n\n                    html += \"</div>\";\n\n                    this.footer = $(html).appendTo(this.element);\n\n                    var that = this;\n\n                    this.footer.on(\"click\" + NS, \".k-scheduler-fullday\", function(e) {\n                        e.preventDefault();\n                        that.toggleFullDay();\n                    });\n\n                    this.footer.on(\"click\" + NS, \".k-scheduler-today\", function(e) {\n                        e.preventDefault();\n                        var timezone = that.options.timezone;\n                        var action = \"today\";\n                        var currentDate = new Date();\n                        var date;\n\n                        if (timezone) {\n                            var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                            date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                        } else {\n                            date = currentDate;\n                        }\n\n                        that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n                    });\n                }\n            },\n\n            toggleFullDay: function() {\n                var options = this.options;\n\n                this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n            },\n\n            _columnCountForLevel: function(level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n\n            _rowCountForLevel: function(level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n\n            _isWorkDay: function(date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n\n            _content: function(dates) {\n                var that = this;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGrouped = false;\n\n                if (resources.length) {\n                    isVerticalGrouped = that._groupOrientation() === \"vertical\";\n\n                    if (isVerticalGrouped) {\n                        rowCount = that._groupedView._getRowCount(this.rowLevels.length - 1);\n                        groupsCount = that._groupedView._getGroupsCount();\n                    } else {\n                        groupsCount = that._groupCount();\n                    }\n                }\n\n                html += '<tbody>';\n                html += that._groupedView._addContent(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped);\n                html += '</tbody>';\n\n                this.content.find(\"table\").append(html);\n            },\n\n            _groups: function() {\n                var groupCount = this._groupCount();\n                var dates = this._dates;\n                var columnCount = dates.length;\n\n                this.groups = [];\n\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n\n                    var start = dates[0];\n                    var end = dates[(dates.length - 1) || 0];\n\n                    var startTime = getMilliseconds(this.startTime());\n                    var endTime = getMilliseconds(this.endTime());\n\n                    if (startTime !== 0 && endTime <= startTime) {\n                        start = getDate(start);\n                        setTime(start, startTime);\n\n                        end = getDate(end);\n                        setTime(end, endTime);\n                    }\n\n                    view.addTimeSlotCollection(start, kendo.date.addDays(end, 1));\n                }\n\n                this._timeSlotGroups(groupCount, columnCount);\n            },\n\n            _isHorizontallyGrouped: function() {\n                return this.groupedResources.length && this._groupOrientation() === \"horizontal\";\n            },\n\n            _timeSlotGroups: function(groupCount, datesCount) {\n                var interval = this._timeSlotInterval();\n                var isVerticallyGrouped = this._isVerticallyGrouped();\n                var tableRows = this.content.find(\"tr\");\n\n                this._groupedView._addTimeSlotsCollections(groupCount, datesCount, tableRows, interval, isVerticallyGrouped);\n\n            },\n\n            _addTimeSlotToCollection: function(group, cells, cellIndex, cellOffset, dateIndex, time, interval) {\n                  var cell = cells[cellIndex + cellOffset];\n                  var collection = group.getTimeSlotCollection(0);\n                  var currentDate = this._dates[dateIndex];\n                  var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                  var start = currentTime + time;\n                  var end = start + interval;\n\n                  collection.addTimeSlot(cell, start, end, true);\n            },\n\n            startDate: function() {\n                return this._startDate;\n            },\n\n            endDate: function() {\n                return this._endDate;\n            },\n\n            visibleEndDate: function() {\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var endDate = this.endDate();\n\n                if (startTime !== 0 && endTime <= startTime) {\n                    endDate = kendo.date.addDays(endDate, 1);\n                }\n\n                return endDate;\n            },\n\n            startTime: function() {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n\n            endTime: function() {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n\n            _timeSlotInterval: function() {\n                var options = this.options;\n                return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n            },\n\n            nextDate: function() {\n                return kendo.date.nextDay(this.endDate());\n            },\n\n            previousDate: function() {\n                return kendo.date.previousDay(this.startDate());\n            },\n\n            calculateDateRange: function() {\n                this._render([this.options.date]);\n            },\n\n            render: function(events) {\n                this._headerColumnCount = 0;\n\n                this._groups();\n\n                this.element.find(\".k-event\").remove();\n\n                events = new kendo.data.Query(events)\n                    .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                    .toArray();\n\n                var eventsByResource = [];\n\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n                var eventGroups = [];\n                var maxRowCount = 0;\n\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    var eventGroup = {\n                        groupIndex: groupIndex,\n                        maxRowCount: 0,\n                        events: {}\n                    };\n\n                    eventGroups.push(eventGroup);\n\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex, eventGroup);\n\n                    if (maxRowCount < eventGroup.maxRowCount) {\n                        maxRowCount = eventGroup.maxRowCount;\n                    }\n                }\n\n                this._setRowsHeight(eventGroups, eventsByResource.length, maxRowCount);\n\n                this._positionEvents(eventGroups, eventsByResource.length);\n\n                this._currentTime(false);\n\n                this.trigger(\"activate\");\n            },\n\n            _positionEvents: function(eventGroups, groupsCount) {\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var eventsForGroup = eventGroups[groupIndex].events;\n                    for (var eventUid in eventsForGroup) {\n                        var eventObject = eventsForGroup[eventUid];\n                        if (Array.isArray(eventObject)) {\n                            for (var eventIndex = 0; eventIndex < eventObject.length; eventIndex++) {\n                                this._positionEvent(eventObject[eventIndex]);\n                            }\n                        } else {\n                            this._positionEvent(eventObject);\n                        }\n                    }\n                }\n            },\n\n            _setRowsHeight: function(eventGroups, groupsCount, maxRowCount) {\n                var eventHeight = this.options.eventHeight;\n                var eventBottomOffset = this._getBottomRowOffset();\n                var groupedView = this._groupedView;\n                var verticalGroupCount = groupedView._getVerticalGroupCount(groupsCount);\n\n                groupsCount = this._isVerticallyGrouped() ? verticalGroupCount : 1;\n\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var rowsCount = groupedView._getVerticalRowCount(eventGroups, groupIndex, maxRowCount);\n\n                    rowsCount = rowsCount ? rowsCount : 1;\n\n                    var rowHeight = ((eventHeight + 2) * rowsCount) + eventBottomOffset;\n                    var timesRow = $(this.times.find(\"tr\")[groupIndex]);\n                    var row = $(this.content.find(\"tr\")[groupIndex]);\n\n                    timesRow.height(rowHeight);\n                    row.height(rowHeight);\n                }\n\n                this._setContentWidth();\n                this.refreshLayout();\n                this._refreshSlots();\n            },\n\n            _getBottomRowOffset: function() {\n                var eventBottomOffset = this.options.eventHeight * 0.50;\n                var isMobile = this._isMobile();\n                var minOffset;\n                var maxOffset;\n\n                if (isMobile) {\n                    minOffset = 30;\n                    maxOffset = 60;\n                } else {\n                    minOffset = 15;\n                    maxOffset = 30;\n                }\n\n                if (eventBottomOffset > maxOffset) {\n                    eventBottomOffset = maxOffset;\n                } else if (eventBottomOffset < minOffset) {\n                    eventBottomOffset = minOffset;\n                }\n\n                return eventBottomOffset;\n            },\n\n            _positionEvent: function(eventObject) {\n                var eventHeight = this.options.eventHeight;\n                var eventOffset = 2;\n                var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n                var left = this._adjustLeftPosition(rect.left);\n                var width = rect.right - rect.left;\n\n                if (width < 0) {\n                    width = 0;\n                }\n\n                if (width < this.options.eventMinWidth) {\n                    var slotsCollection = eventObject.slotRange.collection;\n                    var lastSlot = slotsCollection._slots[slotsCollection._slots.length - 1];\n                    var offsetRight = lastSlot.offsetLeft + lastSlot.offsetWidth;\n\n                    width = this.options.eventMinWidth;\n\n                    if (offsetRight < left + width) {\n                        width = offsetRight - rect.left;\n                    }\n                }\n\n                eventObject.element.css({\n                    top: eventObject.slotRange.start.offsetTop + eventObject.rowIndex * (eventHeight + eventOffset) + \"px\",\n                    left: left,\n                    width: width\n                });\n            },\n\n            _refreshSlots: function() {\n                for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    this.groups[groupIndex].refresh();\n                }\n            },\n\n            _eventsByResource: function(events, resources, result, parentValue) {\n                var resource = resources[0];\n\n                if (resource) {\n                    var view = resource.dataSource.view();\n\n                    view = view.filter(function(item) {\n                        var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                        return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                    });\n\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n\n            _isInDateSlot: function(event) {\n                var startTime = event.start;\n                var endTime = event.end;\n                var rangeStart = getDate(this._startDate);\n                var rangeEnd = kendo.date.addDays(getDate(this.visibleEndDate()), 1);\n\n                if (startTime < rangeEnd && rangeStart <= endTime) {\n                    return true;\n                }\n                return false;\n            },\n\n            _isInTimeSlot: function(event) {\n                var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n                var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n\n                var slotRanges = this._slotRanges;\n\n                if (startTime === endTime) {\n                    endTime = endTime + 1;\n                }\n\n                for (var slotIndex = 0; slotIndex < slotRanges.length; slotIndex++) {\n                    if (startTime < slotRanges[slotIndex].end && slotRanges[slotIndex].start < endTime) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n\n            _adjustEvent: function(event) {\n                var start = event.start;\n                var end = event.end;\n                var eventStartTime = event._time(\"start\");\n                var eventEndTime = event._time(\"end\");\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var adjustedStartDate = null;\n                var adjustedEndDate = null;\n                var occurrence;\n                var head = false;\n                var tail = false;\n\n                if (event.isAllDay) {\n                    start = getDate(start);\n                    eventStartTime = 0;\n\n                    end = getDate(end);\n                    eventEndTime = MS_PER_DAY;\n                    adjustedEndDate = kendo.date.addDays(end, 1);\n                }\n\n                if (endTime === 0) {\n                    endTime = MS_PER_DAY;\n                }\n\n                if (endTime <= startTime) {\n                    if (eventStartTime < startTime && eventStartTime >= endTime) {\n                        adjustedStartDate = getDate(start);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    }\n\n                    if (eventEndTime > endTime && eventEndTime <= startTime) {\n                        adjustedEndDate = getDate(end);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    }\n                } else {\n                    if (startTime > eventStartTime) {\n                        adjustedStartDate = getDate(start);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    } else if (endTime <= eventStartTime) {\n                        adjustedStartDate = getDate(start);\n                        adjustedStartDate = kendo.date.addDays(adjustedStartDate, 1);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    }\n\n                    if (endTime < eventEndTime) {\n                        adjustedEndDate = getDate(end);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    } else if (startTime > eventEndTime) {\n                        adjustedEndDate = getDate(end);\n                        adjustedEndDate = kendo.date.addDays(adjustedEndDate,-1);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    }\n                }\n\n                occurrence = event.clone({\n                    start: adjustedStartDate ? adjustedStartDate : start,\n                    end: adjustedEndDate ? adjustedEndDate : end,\n                    _startTime: adjustedStartDate ? kendo.date.toUtcTime(adjustedStartDate) : event._startTime,\n                    _endTime: adjustedEndDate ? kendo.date.toUtcTime(adjustedEndDate) : event._endTime,\n                    isAllDay: false\n                });\n\n                return {\n                    occurrence: occurrence,\n                    head: head,\n                    tail: tail\n                };\n            },\n\n            _renderEvents: function(events, groupIndex, eventGroup) {\n                var event;\n                var idx;\n                var length;\n\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                        var container = this.content;\n\n                        if (isMultiDayEvent || this._isInTimeSlot(event)) {\n                            var adjustedEvent = this._adjustEvent(event);\n                            var group = this.groups[groupIndex];\n\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n\n                            if (this._isInTimeSlot(adjustedEvent.occurrence)) {\n                                var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                                var range = ranges[0];\n                                var startIndex = range.start.index;\n                                var endIndex = range.end.index;\n\n                                this._groupedView._renderEvent(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex);\n                            }\n                        }\n                    }\n                }\n            },\n\n            addContinuousEvent: function(group, range, element, isAllDay) {\n                var events = group._continuousEvents;\n\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: range.start,\n                    end: range.end\n                });\n            },\n\n            _createEventElement: function(occurrence, event, head, tail) {\n                var template = this.eventTemplate;\n                var editable = this.options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var eventStartTime = event._time(\"start\");\n                var eventEndTime = event._time(\"end\");\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n\n                var resources = this.eventResources(event);\n\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n                }\n\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n                }\n\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: false,\n                    messages: this.options.messages,\n                    ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay),\n                    template: this.options.eventTemplate\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n\n                var element = $(template(data));\n\n                this.angular(\"compile\", function() {\n                    return {\n                        elements: element,\n                        data: [ { dataItem: data } ]\n                    };\n                });\n\n                return element;\n            },\n\n            _arrangeRows: function(eventObject, slotRange, eventGroup) {\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n\n                var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n                var rectRight = rect.right + this.options.eventMinWidth;\n\n                var events = collidingEvents(slotRange.events(), rect.left, rectRight);\n\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    rectLeft: rect.left,\n                    rectRight: rectRight,\n                    element: eventObject.element,\n                    uid: eventObject.uid\n                });\n\n                events.push({\n                    start: startIndex,\n                    end: endIndex,\n                    uid: eventObject.uid\n                });\n\n                var rows = SchedulerView.createRows(events);\n\n                if (eventGroup.maxRowCount < rows.length) {\n                    eventGroup.maxRowCount = rows.length;\n                }\n\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        eventGroup.events[rowEvents[j].uid].rowIndex = idx;\n                    }\n                }\n            },\n\n            _groupCount: function() {\n                var resources = this.groupedResources;\n                var groupedView = this._groupedView;\n\n                if (resources.length) {\n                    if (this._groupOrientation() === \"vertical\") {\n                        return groupedView._verticalCountForLevel(resources.length - 1);\n                    } else {\n                        return groupedView._horizontalCountForLevel(resources.length - 1, this.columnLevels.length - 1);\n                    }\n                }\n                return 1;\n            },\n\n            _updateEventForSelection: function(event) {\n                var adjustedEvent = this._adjustEvent(event.clone());\n                return adjustedEvent.occurrence;\n            },\n\n            _eventOptionsForMove: function(event) {\n                if (event.isAllDay) {\n                    return { isAllDay: false };\n                }\n\n                return {};\n            },\n\n            _updateEventForResize: function(event) {\n                if (event.isAllDay) {\n                    event.set(\"isAllDay\", false);\n                }\n            },\n\n            _updateMoveHint: function(event, groupIndex, distance) {\n                var group = this.groups[groupIndex];\n\n                var clonedEvent = event.clone({ start: event.start, end: event.end });\n\n                var eventDuraton = clonedEvent.duration();\n                clonedEvent.start = new Date(clonedEvent.start.getTime() + distance);\n                clonedEvent.end = new Date(+clonedEvent.start + eventDuraton);\n\n                this._removeMoveHint(event.uid);\n\n                if (this._isInDateSlot(clonedEvent)) {\n                    if (clonedEvent.isAllDay || clonedEvent.duration() >= MS_PER_DAY || this._isInTimeSlot(clonedEvent)) {\n                        var adjustedEvent = this._adjustEvent(clonedEvent);\n                        var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n\n                        for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                            this._groupedView._createMoveHint(ranges[rangeIndex], adjustedEvent);\n                        }\n                    }\n                }\n            },\n\n           _appendMoveHint: function(hint) {\n                hint.appendTo(this.content);\n\n                this._moveHint = this._moveHint.add(hint);\n           },\n\n            _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, false, false);\n\n                this._removeResizeHint();\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n\n                    var startRect = range.innerRect(startTime, endTime, false);\n                    startRect.top = start.offsetTop;\n\n                    var width = startRect.right - startRect.left;\n\n                    if (width < 0) {\n                        for (var i = 0; i < range.events().length; i++) {\n                            if (range.events()[i].uid === event.uid) {\n                                width = range.events()[i].rectRight - startRect.left;\n                                break;\n                            }\n                        }\n                    }\n\n                    var height = range.endSlot().offsetTop + start.offsetHeight - startRect.top;\n\n                    var left = this._adjustLeftPosition(startRect.left);\n\n                    var hint = SchedulerView.fn._createResizeHint.call(this,\n                        left,\n                        startRect.top,\n                        width,\n                        height\n                    );\n\n                    this._resizeHint = this._resizeHint.add(hint);\n                }\n\n                var format = \"t\";\n                var container = this.content;\n\n                this._resizeHint.appendTo(container);\n\n                this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n                this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n                this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n\n            selectionByElement: function(cell) {\n                var offset = cell.offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n\n            _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple && !vertical) {\n                    if (startSlot.index === endSlot.index &&\n                        startSlot.collectionIndex === endSlot.collectionIndex) {\n                        selection.backward = reverse;\n                    }\n                }\n            },\n\n            _changeGroup: function(selection, previous) {\n                var method = previous ? \"prevGroupSlot\" : \"nextGroupSlot\";\n\n                var slot = this[method](selection.start, selection.groupIndex, false);\n\n                if (slot) {\n                    selection.groupIndex += previous ? -1 : 1;\n                }\n\n                this._groupedView._changeGroup(selection, previous, slot);\n                return slot;\n            },\n\n            prevGroupSlot: function(date, groupIndex, isDay) {\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n\n                if (groupIndex <= 0) {\n                    return;\n                }\n\n                return this._groupedView._prevGroupSlot(slot, group, isDay);\n            },\n\n            nextGroupSlot: function(date, groupIndex, isDay) {\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n\n                if (groupIndex >= this.groups.length - 1) {\n                    return;\n                }\n\n                return this._groupedView._nextGroupSlot(slot, group, isDay);\n            },\n\n            _verticalSlots: function(selection, ranges, multiple, reverse) {\n                var groupedView = this._groupedView;\n                var method = groupedView._verticalMethod(reverse, multiple);\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var group = this.groups[selection.groupIndex];\n                var slot = groupedView._normalizeVerticalSelection(selection, ranges, reverse, multiple);\n\n                if (slot) {\n                    startSlot = endSlot = slot;\n                }\n\n                startSlot = group[method](startSlot);\n                endSlot = group[method](endSlot);\n\n                if (!multiple && this._isVerticallyGrouped() && (!startSlot || !endSlot)) {\n                    startSlot = endSlot = groupedView._verticalSlots(selection, reverse, slot);\n                }\n\n                return {\n                    startSlot: startSlot,\n                    endSlot: endSlot\n                };\n            },\n\n            _horizontalSlots: function(selection, ranges, multiple, reverse) {\n                var method = reverse ? \"upSlot\" : \"downSlot\";\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var group = this.groups[selection.groupIndex];\n                var result = {};\n\n                if (!multiple) {\n                    result = this._groupedView._horizontalSlots(selection, group, method, startSlot, endSlot, multiple, reverse);\n                } else {\n                    result.startSlot = group[method](startSlot);\n                    result.endSlot = group[method](endSlot);\n\n                    if (!multiple && this._isHorizontallyGrouped() && (!startSlot || !endSlot)) {\n                        result.startSlot = result.endSlot = this._changeGroup(selection, reverse);\n                    }\n                }\n\n                return result;\n            },\n\n            _changeViewPeriod: function(selection, reverse) {\n                var date = reverse ? this.previousDate() : this.nextDate();\n                var start = selection.start;\n                var end = selection.end;\n                var newStart, newEnd;\n\n                newStart = new Date(date);\n                newEnd = new Date(date);\n\n                if (this._isInRange(newStart, newEnd)) {\n                    return false;\n                }\n                selection.start = newStart;\n                selection.end = newEnd;\n\n                if (this._isHorizontallyGrouped()) {\n                   selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                }\n\n                var duration = end - start;\n\n                if (reverse) {\n                    end = getMilliseconds(this.endTime());\n                    end = end === 0 ? MS_PER_DAY : end;\n\n                    setTime(selection.start, end - duration);\n                    setTime(selection.end, end);\n                } else {\n                    start = getMilliseconds(this.startTime());\n\n                    setTime(selection.start, start);\n                    setTime(selection.end, start + duration);\n                }\n\n                selection.events = [];\n\n                return true;\n            },\n\n            move: function(selection, key, shift) {\n                var handled = false;\n                var group = this.groups[selection.groupIndex];\n                var keys = kendo.keys;\n                var groupedView = this._groupedView;\n                var ranges = group.ranges(selection.start, selection.end, false, false);\n                var startSlot, endSlot, reverse, slots;\n\n                if (key === keys.DOWN || key === keys.UP) {\n                    handled = true;\n                    reverse = key === keys.UP;\n\n                    groupedView._updateDirection(selection, ranges, shift, reverse);\n\n                    slots = this._verticalSlots(selection, ranges, shift, reverse);\n\n                    if (groupedView._changeVerticalViewPeriod(slots, shift, selection, reverse)) {\n                        return handled;\n                    }\n                } else if (key === keys.LEFT || key === keys.RIGHT) {\n                    handled = true;\n                    reverse = key === keys.LEFT;\n\n                    this._updateDirection(selection, ranges, shift, reverse, false);\n\n                    slots = this._horizontalSlots(selection, ranges, shift, reverse);\n\n                    if (groupedView._changeHorizontalViewPeriod(slots, shift, selection, reverse)) {\n                         return handled;\n                    }\n                }\n\n               if (handled) {\n                   startSlot = slots.startSlot;\n                   endSlot = slots.endSlot;\n\n                   if (shift) {\n                       var backward = selection.backward;\n\n                       if (backward && startSlot) {\n                           selection.start = startSlot.startDate();\n                       } else if (!backward && endSlot) {\n                           selection.end = endSlot.endDate();\n                       }\n                   } else if (startSlot && endSlot) {\n                       selection.start = startSlot.startDate();\n                       selection.end = endSlot.endDate();\n                   }\n\n                   selection.events = [];\n               }\n\n                return handled;\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that.element) {\n                    that.element.off(NS);\n                }\n\n                if (that.footer) {\n                    that.footer.remove();\n                }\n\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n\n                SchedulerView.fn.destroy.call(this);\n\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                    }\n\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n\n            _resourceBySlot: function(slot) {\n                var resources = this.groupedResources;\n                var result = {},\n                groupOptions = this.options.group;\n\n                if (resources.length && groupOptions.orientation === \"horizontal\" && groupOptions.date) {\n                    var resourceIndex = slot.groupIndex,\n                        levels = this.columnLevels,\n                        groupLevel = levels[levels.length - 1],\n                        resource = resources[resources.length - 1],\n                        groupLevelMember = groupLevel[resourceIndex],\n                        passedChildren, numberOfChildren, j, i;\n\n                    this._setResourceValue(groupLevelMember, resource, result);\n\n                    for (j = levels.length - 2; j >= 3; j--) {\n                        groupLevel = levels[j];\n                        resource = resources[j - 3];\n                        passedChildren = 0;\n\n                        for (i = 0; i < groupLevel.length; i++) {\n                            groupLevelMember = groupLevel[i];\n                            numberOfChildren = groupLevelMember.columns.length;\n\n                            if (numberOfChildren > resourceIndex - passedChildren) {\n                                this._setResourceValue(groupLevelMember, resource, result);\n\n                                i = groupLevel.length;\n                            } else {\n                                passedChildren += numberOfChildren;\n                            }\n                        }\n                    }\n\n                    return result;\n                } else {\n                    return SchedulerView.fn._resourceBySlot.call(this, slot);\n                }\n            }\n        });\n\n        extend(true, ui, {\n            TimelineView: TimelineView,\n            TimelineWeekView: TimelineView.extend({\n                options: {\n                    name: \"TimelineWeekView\",\n                    title: \"Timeline Week\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\",\n                    selectedMobileDateFormat: \"{0:MMM dd} - {1:dd}\",\n                    majorTick: 120\n                },\n                name: \"timelineWeek\",\n                calculateDateRange: function() {\n                    var selectedDate = this.options.date,\n                        start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                        idx, length,\n                        dates = [];\n\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            TimelineWorkWeekView: TimelineView.extend({\n                options: {\n                    name: \"TimelineWorkWeekView\",\n                    title: \"Timeline Work Week\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\",\n                    selectedMobileDateFormat: \"{0:MMM dd} - {1:dd}\",\n                    majorTick: 120\n                },\n                name: \"timelineWorkWeek\",\n                nextDate: function() {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.endDate()), this.calendarInfo().firstDay, 1);\n\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function() {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function() {\n                    var options = this.options,\n                        selectedDate = options.date,\n                        dayOfWeek = kendo.date.dayOfWeek,\n                        weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                        start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                        end = dayOfWeek(start, options.workWeekEnd, 1),\n                        dates = [],\n                        workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                            return dayOfWeek(weekStart, day, 1).getTime();\n                        }) : null;\n\n                    if (workDays) {\n                        start = weekStart;\n                        end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                    }\n\n                    while (start <= end) {\n                        if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                            dates.push(start);\n                        } else if (!workDays) {\n                            dates.push(start);\n                        }\n\n                        start = kendo.date.nextDay(start);\n                    }\n\n                    this._render(dates);\n                }\n            }),\n            TimelineMonthView: TimelineView.extend({\n                options: {\n                    name: \"TimelineMonthView\",\n                    title: \"Timeline Month\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\",\n                    workDayStart: new Date(1980, 1, 1, 0, 0, 0),\n                    workDayEnd: new Date(1980, 1, 1, 23, 59, 59),\n                    footer: false,\n                    majorTick: 1440,\n                    minorTickCount: 1\n                },\n                name: \"timelineMonth\",\n                calculateDateRange: function() {\n                    var selectedDate = this.options.date,\n                        start = kendo.date.firstDayOfMonth(selectedDate),\n                        end = kendo.date.lastDayOfMonth(selectedDate),\n                        idx, length,\n                        dates = [];\n\n                    for (idx = 0, length = end.getDate(); idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n\n    })(window.kendo.jQuery);\n\n}));\n"]}