{"version":3,"file":"kendo.filemanager.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","extend","deferred","Deferred","Class","Command","init","options","this","filemanager","CreateFolderCommand","fn","call","exec","that","commandStack","_commandStack","dataSource","_viewDataSource","removeProxy","_remove","bind","_item","_createNewModel","push","item","toJSON","fail","add","pushDestroy","RenameCommand","target","viewItem","_view","widgetComponent","dataItem","edit","_renameTreeViewItem","uid","data","treeView","getByUid","realItem","get","id","_prompt","type","defaultInput","name","done","newName","set","DeleteCommand","itemsToRemove","items","getSelected","is","length","_confirm","removeItems","_itemsToRemove","Array","isArray","_removeItem","itemToRemove","splice","then","remove","CopyCommand","targetDataSource","children","i","fileManagerNewItem","MoveCommand","promises","cloning","promise","_delete","whenAll","always","SortCommand","sortOptions","defaultSortOption","dir","field","sort","folderSortOption","SearchCommand","filter","operator","value","ChangeViewCommand","view","resize","OpenDialogCommand","dialog","open","console","warn","format","TogglePaneCommand","pane","resizable","getResizable","toggle","wrapper","find","handle","_resizeDraggable","CommandStack","_stack","_keys","guid","next","key","keys","resolve","command","reject","empty","ui","FileManagerCommand","commands","jQuery","Observable","encode","htmlEncode","SELECT","CHANGE","OPEN","KEYDOWN","KEYDOWNACTION","NS","fileManagerDraggables","fileManagerDragOrigin","Component","widget","element","Error","_bindEvents","_binding","_bound","ev","trigger","preventDefault","_setDSOptions","dataSourceOptions","_initDragAndDrop","dropFilter","draggable","kendoDraggable","hint","_hint","cursorOffset","top","left","holdToDrag","ignore","hold","_hold","userEvents","minHold","droptarget","kendoDropTargetArea","drop","_onDrop","dragenter","dropTarget","addClass","dragleave","removeClass","currentTarget","selectable","clear","select","cancel","selectedItems","messages","isDirectory","targetId","itemIds","refresh","setDataSource","destroy","ViewComponent","ViewComponents","registerViewComponent","componentName","component","getViewComponent","ListView","explicitOptions","defaultOptions","ariaLabel","kendoKeydown","_kendoKeydown","listView","isLocalBinding","layout","flex","direction","wrap","support","mobileOS","template","ref","extension","getFileGroup","editTemplate","navigatable","_select","on","_dblClick","_mousedown","_keydown","_keydownAction","sender","isDirty","_modelFromElement","editable","dirty","_closeEditable","dataItems","entries","keyCode","ESC","node","closest","which","ENTER","preventKendoKeydown","_handleEnterKey","current","_triggerOpen","entry","addFolder","selected","off","TreeView","dataTextField","_refreshDataSource","action","parentNode","treeEl","activeDescendant","attr","map","hasChildren","findByUid","_progress","each","index","append","_shouldFocus","focus","existingItem","_nextVisible","removeAttr","_navigate","_expand","entryId","path","noop","selectedItem","reload","read","Grid","_setupColumns","grid","mode","confirmation","sortable","columns","title","nameField","dateCreatedField","sizeField","size","getFileSizeMessage","table","_toggleFocusable","saveRow","F2","setTimeout","_editContainer","_tryCancel","cancelChanges","val","state","addBack","toggleClass","container","model","_destroyEditable","_displayRow","addRow","editRow","Node","HierarchicalDataSource","DataSource","schemas","fields","defaultValue","hasDirectories","created","createdUtc","modified","modifiedUtc","FileEntry","getter","isFunction","isDirectoryObject","_initChildren","transport","parameterMap","FileManagerDataSource","_childrenOptions","parent","e","collection","_updateChildrenField","isNew","_defaultId","fileEntry","serverFiltering","_hierarchicalFilter","schema","modelBase","LocalTransport","_attachBubbleHandlers","insert","result","_cleanDestroyed","_hasDirectories","_destroyed","create","_dataSource","observableFileManagerData","array","fetch","_data","ContextMenu","ACTION","FileManagerContextMenu","_overrideTemplates","_restrictDefaultItems","_extendItems","_onSelect","_onOpen","templates","sprite","spriteCssClass","defaultItems","rename","text","delete","events","concat","isPlainObject","Object","_extendItem","isEmptyObject","args","DataBoundWidget","outerHeight","NAVIGATE","ERROR","CLOSE","DATABINDING","DATABOUND","DROP","EXECUTE","COMMAND","DOT","fileManagerStyles","fileManagerTemplateStyles","FileManager","_outerHeight","header","navigation","contentContainer","content","preview","toolbar","treeview","breadcrumb","list","upload","uploadDialog","splitBar","splitBarHorizontal","splitBarHover","splitBarIcon","splitBarNavigation","splitBarPreview","filePreview","fileInfo","fileName","fileMeta","metaLabel","metaValue","deepExtend","_wrapper","_renderHeader","_renderContentContainer","_initContextMenu","_renderNavigation","_renderContent","_renderPreview","_initUploadDialog","_resizable","_attachKeyDown","notify","height","initialView","contextMenu","uploadUrl","views","dialogs","width","moveConfirm","closable","deleteConfirm","renamePrompt","previewPane","metaFields","noFileTemplate","styles","noFileSelected","singleFileTemplate","selection","Date","toString","multipleFilesTemplate","createFolder","sortDirection","sortDirectionAsc","sortDirectionDesc","sortField","typeField","dateModifiedField","gridView","search","details","detailsChecked","detailsUnchecked","listLabel","gridLabel","treeLabel","okText","close","defaultTools","rules","remote","buttons","showText","icon","togglable","group","menuButtons","changeView","spacer","componentOptions","overflow","checked","unchecked","commandOn","placeholder","F10","first","typeSortOrder","nameSortOrder","autoSync","_errorHandler","unbind","_changeHandler","_error","_change","xhr","status","statusText","_resizeHandler","onResize","_initToolbar","_tabIndex","menuOptions","executeCommand","_cacheFocus","_initTreeView","_initBreadcrumb","_initView","_isToolEnabled","_initUpload","hide","previewContainer","_setPreviewPaneContent","previewTemplate","previewPaneMessages","previewPaneOptions","html","toolbarElement","toolbarOptions","tools","_processTools","parentMessages","ToolBar","_toolbarClick","forEach","t","hidden","b","toolName","found","treeViewElement","_load","_drop","indexOf","DELETE","confirm","kendoConfirm","_restoreFocus","prompt","kendoPrompt","activeElement","document","popup","visible","hasClass","_focusElement","_viewType","viewWrapper","breadcrumbElement","breadcrumbOptions","change","_breadcrumbChange","Breadcrumb","substring","shift","uploadInstance","dialogMessages","dialogElement","dialogOptions","modal","actions","_clearUploadFilesList","primary","_shouldInitUpload","Dialog","_toggleUploadDropZone","shouldInit","async","saveUrl","uploadElement","uploadOptions","autoUpload","dropZone","Upload","_sendUploadPathParameter","_success","clearAllFiles","zone","setOptions","source","_createResizableSplitBar","cssClass","hover","_initResizableNavigation","contentWrapperWidth","navigationWrapperWidth","contentWrapper","navigationWrapper","insertAfter","end","kendoResizable","start","delta","x","initialDelta","isRtl","getKendoResizable","_initResizablePreview","previewWrapperWidth","previewWrapper","insertBefore","_open","_cancel","el","join","commandName","commandOptions","navigate","load","sync","res","response","_navigateToParent","loaded","parentNodePath","_buildBreadcrumbPath","reverse","_adjustDimensions","gridSelector","listViewSelector","totalHeight","toolbarHeight","breadcrumbHeight","_resize","getSize","dimensions","_path","replace","isRoot","_sort","unbindResize","plugin"],"sources":["kendo.filemanager.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.listview', 'kendo.treeview', 'kendo.data', 'kendo.menu', 'kendo.toolbar', 'kendo.breadcrumb', 'kendo.upload', 'kendo.dialog', 'kendo.resizable', 'kendo.switch', 'kendo.textbox'], factory) :\n    factory();\n})((function () {\n    (function($, undefined$1) {\n            var kendo = window.kendo,\n                extend = $.extend,\n                deferred = $.Deferred,\n                Class = kendo.Class;\n\n            var Command = Class.extend({\n                init: function(options) {\n                    this.options = options;\n                    this.filemanager = options.filemanager;\n                }\n            });\n\n            var CreateFolderCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager._viewDataSource || filemanager.dataSource,\n                        removeProxy = that._remove.bind(that);\n\n                    that._item = dataSource._createNewModel();\n\n                    commandStack.push({ item: that._item.toJSON() }).fail(removeProxy);\n                    dataSource.add(that._item);\n                },\n                _remove: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        dataSource = filemanager._viewDataSource || filemanager.dataSource;\n\n                    dataSource.pushDestroy(that._item);\n                }\n            });\n\n            var RenameCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        target = that.options.target,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        viewItem = filemanager._view.widgetComponent.dataItem(target);\n\n                    if (target && viewItem) {\n                        commandStack.push({ target: target, item: viewItem });\n                        that.filemanager._view.edit(target);\n                    } else {\n                        that._renameTreeViewItem(target);\n                    }\n                },\n                _renameTreeViewItem: function(target) {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        uid = target.data(\"uid\"),\n                        item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid),\n                        realItem = that.filemanager.dataSource.get(item.id);\n\n                    that.filemanager._prompt({\n                        type: \"rename\",\n                        defaultInput: realItem.name,\n                        target: target\n                    }).done(function(newName) {\n                        commandStack.push({ target: target, item: realItem });\n                        realItem.set(\"name\", newName);\n                    });\n                }\n            });\n\n            var DeleteCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        target = that.options.target,\n                        filemanager = that.filemanager,\n                        items = filemanager.getSelected(),\n                        viewItem = that.filemanager._view.widgetComponent.dataItem(target),\n                        itemsToRemove;\n\n                    if (target && target.is(\".k-selected\") && items && items.length) {\n                        itemsToRemove = items;\n                    } else if (target && viewItem) {\n                        itemsToRemove = viewItem;\n                    } else if (target) {\n                        var uid = target.data(\"uid\");\n                        var item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid);\n                        var realItem = that.filemanager.dataSource.get(item.id);\n\n                        itemsToRemove = realItem;\n                    }\n\n                    filemanager._confirm({\n                        type: \"delete\",\n                        target: target\n                    })\n                    .done(function() {\n                        that.removeItems(itemsToRemove);\n                    });\n                },\n                removeItems: function(items) {\n                    var that = this;\n\n                    that._itemsToRemove = Array.isArray(items) ? items : [items];\n\n                    that._removeItem();\n                },\n                _removeItem: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager.dataSource,\n                        itemToRemove = !!that._itemsToRemove.length && that._itemsToRemove.splice(0,1)[0];\n\n                    if (itemToRemove) {\n                        commandStack.push({ item: itemToRemove })\n                            .then(that._removeItem.bind(that), that._removeItem.bind(that));\n\n                        dataSource.remove(itemToRemove);\n                    }\n                }\n            });\n\n            var CopyCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                    filemanager = that.filemanager,\n                    dataSource = filemanager.dataSource,\n                    commandStack = filemanager._commandStack,\n                    items = that.options.items,\n                    target = dataSource.get(that.options.target),\n                    targetDataSource = target.children;\n\n                    for (var i = 0; i < items.length; i++) {\n                        var item = dataSource.get(items[i]).toJSON();\n                        item.fileManagerNewItem = true;\n                        commandStack.push({ item: item, target: target });\n                        targetDataSource.add(item);\n                    }\n                }\n            });\n\n            var MoveCommand = Command.extend({\n                init: function(options) {\n                    var that = this;\n                    Command.fn.init.call(that, options);\n                    that._itemsToRemove = [];\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager.dataSource,\n                        items = that.options.items,\n                        target = dataSource.get(that.options.target),\n                        targetDataSource = target.children,\n                        promises = [];\n\n                    for (var i = 0; i < items.length; i++) {\n                        var item = dataSource.get(items[i]);\n                        var cloning = item.toJSON();\n                        cloning.fileManagerNewItem = true;\n\n                        var promise = commandStack.push({ item: item, target: target })\n                            .then(that._delete.bind(that));\n\n                            promises.push(promise);\n                            targetDataSource.add(cloning);\n                    }\n\n                    kendo.whenAll(promises).always(that._removeItem.bind(that));\n                },\n                _delete: function(data) {\n                    var that = this;\n                    that._itemsToRemove.push(data.item);\n                },\n                _removeItem: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager.dataSource,\n                        itemToRemove = !!that._itemsToRemove.length && that._itemsToRemove.splice(0,1)[0];\n\n                    if (itemToRemove) {\n                        commandStack.push({ item: itemToRemove })\n                            .then(that._removeItem.bind(that), that._removeItem.bind(that));\n\n                        dataSource.remove(itemToRemove);\n                    }\n                }\n            });\n\n            var SortCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        filemanager = that.filemanager,\n                        sortOptions = filemanager.defaultSortOption;\n\n                    extend(sortOptions, {\n                        dir: options.dir,\n                        field: options.field\n                    });\n\n                    filemanager._view.widgetComponent.dataSource.sort([ filemanager.folderSortOption, sortOptions ]);\n                }\n            });\n\n            var SearchCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        filemanager = that.filemanager,\n                        filter = {\n                            field: options.field,\n                            operator: options.operator,\n                            value: options.value\n                        };\n\n                    filemanager._view.widgetComponent.dataSource.filter(filter);\n                }\n            });\n\n            var ChangeViewCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        filemanager = that.filemanager;\n\n                    filemanager.view(options.value);\n                    filemanager.resize(true);\n                }\n            });\n\n            var OpenDialogCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        dialog = filemanager[that.options.type];\n\n                    if (dialog) {\n                        dialog.open();\n                    } else {\n                        window.console.warn(kendo.format(\"The {0} dialog is not available!\", that.options.type));\n                    }\n                }\n            });\n\n            var TogglePaneCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        pane = filemanager[that.options.type],\n                        resizable = that.getResizable();\n\n                    if (pane) {\n                        pane.toggle();\n\n                        if (resizable) {\n                            filemanager.wrapper\n                                .find(resizable.options.handle)\n                                .toggle();\n                        }\n                    }\n                },\n                getResizable: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        type = that.options.type;\n\n                    if (!filemanager._resizeDraggable) {\n                        return;\n                    }\n\n                    return filemanager._resizeDraggable[type];\n                }\n            });\n\n            var CommandStack = Class.extend({\n                init: function() {\n                    var that = this;\n\n                    that._stack = {};\n                    that._keys = [];\n                },\n                push: function(data) {\n                    var that = this,\n                        guid = kendo.guid();\n\n                    that._keys.push(guid);\n                    that._stack[guid] = {\n                        guid: guid,\n                        data: data,\n                        deferred: deferred()\n                    };\n\n                    return that._stack[guid].deferred;\n                },\n                next: function() {\n                    var that = this,\n                        key = that.keys().splice(0,1),\n                        nextCommand = that._stack[key];\n\n                    return nextCommand;\n                },\n                resolve: function(command) {\n                    var that = this;\n                    delete that._stack[command.guid];\n                    command.deferred.resolve(command.data);\n                },\n                reject: function(command) {\n                    var that = this;\n                    delete that._stack[command.guid];\n                    command.deferred.reject(command.data);\n                },\n                keys: function() {\n                    return this._keys;\n                },\n                empty: function() {\n                    return this.keys().length === 0;\n                }\n            });\n\n            extend(kendo.ui, {\n                filemanager: {\n                    FileManagerCommand: Command,\n                    CommandStack: CommandStack,\n                    commands: {\n                        CreateFolderCommand: CreateFolderCommand,\n                        RenameCommand: RenameCommand,\n                        DeleteCommand: DeleteCommand,\n                        MoveCommand: MoveCommand,\n                        CopyCommand: CopyCommand,\n                        SortCommand: SortCommand,\n                        SearchCommand: SearchCommand,\n                        ChangeViewCommand: ChangeViewCommand,\n                        OpenDialogCommand: OpenDialogCommand,\n                        TogglePaneCommand: TogglePaneCommand\n                    }\n                }\n            });\n\n        })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Observable = kendo.Observable,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            keys = kendo.keys,\n\n            NAVIGATE = \"navigate\",\n            SELECT = \"select\",\n            EXPAND = \"expand\",\n            CHANGE = \"change\",\n            OPEN = \"open\",\n            LOAD = \"load\",\n            KEYDOWN = \"keydown\",\n            KEYDOWNACTION = \"keydownAction\",\n\n            NS = \".kendoFileManagerViewComponent\",\n\n            fileManagerDraggables = [],\n            fileManagerDragOrigin = null;\n\n        var registerViewComponent = function(componentName, component) {\n            ui.filemanager.ViewComponents[componentName] = component;\n        };\n\n        var getViewComponent = function(componentName) {\n            return ui.filemanager.ViewComponents[componentName] || null;\n        };\n\n        var Component = Observable.extend({\n            init: function(widget, element, options) {\n                var that = this;\n\n                that.element = element;\n                that.options = options;\n\n                if (widget) {\n                    that.widgetComponent = new widget(element, options);\n                } else {\n                    throw new Error(\"The widget for the ViewComponent is not available! Please add the corresponding scripts!\");\n                }\n\n                Observable.fn.init.call(that);\n            },\n\n            _bindEvents: function() {\n                this.widgetComponent.bind(\"dataBinding\", this._binding.bind(this));\n                this.widgetComponent.bind(\"dataBound\", this._bound.bind(this));\n            },\n\n            _binding: function(ev) {\n                if (this.trigger(\"dataBinding\", ev)) {\n                    ev.preventDefault();\n                }\n            },\n\n            _bound: function() {\n                this.trigger(\"dataBound\");\n            },\n\n            _setDSOptions: function(options, dataSourceOptions) {\n                if (!options.dataSource && dataSourceOptions) {\n                    options.dataSource = dataSourceOptions;\n                }\n            },\n\n            _initDragAndDrop: function(element, filter) {\n                var that = this;\n\n                filter = filter || that.options.dropFilter;\n                element = element || that.element;\n\n                that.draggable = element.kendoDraggable({\n                    filter: filter,\n                    hint: that._hint.bind(that),\n                    cursorOffset: { top: -10, left: -50 },\n                    holdToDrag: true,\n                    ignore: \"input, .k-focusable\",\n                    hold: that._hold.bind(that)\n                }).data(\"kendoDraggable\");\n\n                that.draggable.userEvents.minHold = 150;\n\n                that.droptarget = element.kendoDropTargetArea({\n                    filter: filter,\n                    drop: that._onDrop.bind(that),\n                    dragenter: function(ev) {\n                        ev.dropTarget.addClass(\"k-filemanager-drop-target\");\n                    },\n                    dragleave: function(ev) {\n                        ev.dropTarget.removeClass(\"k-filemanager-drop-target\");\n                    }\n                }).data(\"kendoDraggable\");\n            },\n\n            _hold: function(ev) {\n                var that = this,\n                    target = ev.currentTarget;\n\n                if (!target.is(\".k-selected\")) {\n                    if (that.widgetComponent.selectable) {\n                        that.widgetComponent.selectable.clear();\n                    }\n                    that.widgetComponent.select(target);\n                }\n\n                if (that.widgetComponent.selectable) {\n                    that.widgetComponent.selectable.userEvents.cancel();\n                }\n            },\n\n            _hint: function(target) {\n                var that = this,\n                    item = that.widgetComponent.dataItem(target),\n                    selectedItems = that.widgetComponent.select();\n\n                fileManagerDragOrigin = that.widgetComponent;\n                fileManagerDraggables = selectedItems;\n\n                if (selectedItems.length > 1) {\n                    return kendo.format(\"<div class='k-filemanager-drag-hint'><span class='k-icon k-i-{0}'></span> <span>{1} {2}</span></div>\", \"file\", selectedItems.length, that.options.messages.items);\n                }\n\n                return kendo.format(\"<div class='k-filemanager-drag-hint'><span class='k-icon k-i-{0}'></span> <span>{1}</span></div>\", (item.isDirectory ? \"folder\" : \"file\"), item.name);\n            },\n\n            _onDrop: function(ev) {\n                var that = this,\n                    target = that.widgetComponent.dataItem(ev.dropTarget),\n                    targetId = target.id,\n                    itemIds = [];\n\n                if (!target.isDirectory) {\n                    return;\n                }\n\n                for (var i = 0; i < fileManagerDraggables.length; i++) {\n                    var id = fileManagerDragOrigin.dataItem(fileManagerDraggables[i]).id;\n                    itemIds.push(id);\n                }\n\n                this.trigger(\"drop\",{ target: targetId, items: itemIds });\n            },\n\n            getSelected: function() {\n                throw new Error(\"Not Implemented!\");\n            },\n\n            refresh: function(dataSource) {\n                this.widgetComponent.setDataSource(dataSource);\n            },\n\n            destroy: function() {\n                kendo.destroy(this.element);\n            }\n        });\n\n        extend(kendo.ui.filemanager, {\n                ViewComponent: Component,\n                ViewComponents: {},\n                registerViewComponent: registerViewComponent,\n                getViewComponent: getViewComponent\n            }\n        );\n\n        var ListView = Component.extend({\n            init: function(element, options, explicitOptions) {\n                var that = this,\n                    dataSourceOptions = explicitOptions.dataSource,\n                    messages = explicitOptions.messages;\n\n                options = extend({}, that.defaultOptions, options, {\n                    messages: messages,\n                    ariaLabel: explicitOptions.ariaLabel\n                });\n\n                that._setDSOptions(options, dataSourceOptions);\n                options.kendoKeydown = options.kendoKeydown || that._kendoKeydown.bind(that);\n\n                Component.fn.init.call(this, ui.ListView, element, options);\n\n                that.listView = that.widgetComponent;\n                that._bindEvents();\n\n                if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n\n            defaultOptions: {\n                layout: \"flex\",\n                flex: {\n                    direction: \"row\",\n                    wrap: \"wrap\"\n                },\n                selectable: kendo.support.mobileOS ? \"row\" : \"multiple\",\n                template: function (ref) {\n                            var name = ref.name;\n                            var extension = ref.extension;\n                            var isDirectory = ref.isDirectory;\n\n                            return \"<div class='k-listview-item' title='\" + (encode(name)) + (encode(extension)) + \"'>\" +\n                            \"<div class='k-file-preview'><span class='k-file-icon k-icon k-i-\" + (!isDirectory ? kendo.getFileGroup(extension, true) : 'folder') + \"'></span></div>\" +\n                            \"<div class='k-file-name file-name'>\" + (encode(name)) + (encode(extension)) + \"</div>\" +\n                        \"</div>\";\n        },\n                editTemplate: function (ref) {\n                                var extension = ref.extension;\n                                var isDirectory = ref.isDirectory;\n\n                                return \"<div class='k-listview-item'>\" +\n                                \"<div class='k-file-preview'><span class='k-file-icon k-icon k-i-\" + (!isDirectory ? kendo.getFileGroup(extension, true) : 'folder') + \"'></span></div>\" +\n                                \"<div class='k-file-name'><span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input type='text' class='k-input-inner' data-bind='value:name' name='name' required='required' /><span></div>\" +\n                            \"</div>\";\n        },\n                dropFilter: \".k-listview-item\",\n                navigatable: true\n            },\n\n            _bindEvents: function() {\n                var that = this,\n                    listView = that.listView;\n\n                listView.bind(CHANGE, that._select.bind(that));\n                listView.element.on(\"dblclick\" + NS, that._dblClick.bind(that));\n                listView.element.on(\"mousedown\" + NS, \".k-listview-item:not(.k-edit-item)\", that._mousedown.bind(that));\n                listView.element.on(KEYDOWN + NS, \".k-edit-item\", that._keydown.bind(that));\n                listView.element.on(KEYDOWN + NS, that._keydownAction.bind(that));\n\n                listView.bind(\"edit\", function(ev) {\n                    var sender = ev.sender;\n                    var input = ev.item.find(\"input\");\n\n                    input.on(\"blur\", function() {\n                        var isDirty = sender._modelFromElement(sender.editable.element).dirty;\n                        sender._closeEditable();\n                        if (!isDirty) {\n                            that.trigger(\"cancel\");\n                        }\n                    });\n                });\n\n                listView.bind(\"cancel\", function() {\n                    that.trigger(\"cancel\");\n                });\n\n                Component.fn._bindEvents.call(this);\n            },\n\n            _select: function() {\n                var that = this,\n                    dataItems = that.getSelected();\n\n                that.trigger(SELECT, { entries: dataItems });\n            },\n\n            _keydown: function(ev) {\n                var that = this;\n                if (ev.keyCode === kendo.keys.ESC) {\n                    that.listView._closeEditable();\n                    that.trigger(\"cancel\");\n                }\n            },\n\n            _keydownAction: function(ev) {\n                var that = this,\n                    target = $(ev.target).find(\".k-focus\");\n\n                if (target.length && !target.is(\".k-edit-item\")) {\n                    that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n                }\n            },\n\n            _mousedown: function(ev) {\n                var that = this,\n                    node = $(ev.target).closest(\".k-listview-item\");\n\n                if (ev.which === 3 && !node.is(\".k-selected\")) {\n                    that.listView.selectable.clear();\n                    that.listView.select(node);\n                }\n            },\n\n            _kendoKeydown: function(ev) {\n                var that = this;\n\n                if (ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                    that._handleEnterKey(ev);\n                }\n            },\n\n            _handleEnterKey: function(ev) {\n                var that = this,\n                    target = $(ev.target),\n                    node = that.listView.current();\n\n                if (that.widgetComponent.editable && target.is(\"input\")) {\n                    // Force blur to update item and close editable (cross browser)\n                    target.trigger(\"blur\");\n                } else if (!that.widgetComponent.editable) {\n                    that._triggerOpen(node);\n                }\n\n                ev.preventKendoKeydown = true;\n            },\n\n            _dblClick: function(ev) {\n                var that = this,\n                    node = $(ev.target).closest(\".k-listview-item\");\n\n                that._triggerOpen(node);\n            },\n\n            _triggerOpen: function(node) {\n                var that = this;\n\n                if (node.is(\".k-edit-item\")) {\n                    return;\n                }\n\n                var item = that.listView.dataItem(node);\n\n                if (item) {\n                    that.trigger(OPEN, { entry: item });\n                }\n            },\n\n            addFolder: function() {\n                this.listView.add();\n            },\n\n            edit: function(target) {\n                var that = this,\n                    selected = that.listView.select();\n\n                that.listView.edit(target || selected);\n            },\n\n            getSelected: function() {\n                var that = this,\n                items = that.listView.select(),\n                dataItems = [];\n\n                for (var i = 0; i < items.length; i++) {\n                    var item = that.listView.dataItem(items[i]);\n\n                    if (item) {\n                        dataItems.push(item);\n                    }\n                }\n\n                return dataItems;\n            },\n\n            destroy: function() {\n                this.listView.element.off(NS);\n                Component.fn.destroy.call(this);\n            }\n        });\n\n        ui.filemanager.registerViewComponent(\"list\", ListView);\n\n        var TreeView = Component.extend({\n            init: function(element, options, explicitOptions) {\n                var that = this,\n                    messages = explicitOptions.messages;\n\n                options = extend({}, that.defaultOptions, options, {\n                    messages: messages\n                });\n\n                Component.fn.init.call(this, ui.TreeView, element, options);\n\n                that.treeView = that.widgetComponent;\n                that._bindEvents();\n\n                if (explicitOptions.draggable !== false && !explicitOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n\n            defaultOptions: {\n                dataTextField: \"name\",\n                dropFilter: \".k-item\"\n            },\n\n            _refreshDataSource: function(ev) {\n                var that = this,\n                    treeView = that.treeView,\n                    action = ev.action,\n                    node = ev.node,\n                    parentNode = null,\n                    treeEl = treeView.element,\n                    activeDescendant = treeEl.attr(\"aria-activedescendant\"),\n                    items = ev.items.filter(function(item) {\n                        return item.isDirectory;\n                    }).map(function(item) {\n                        return extend({}, item.toJSON(), {\n                            id: item.id || kendo.guid(),\n                            hasChildren: item.hasChildren,\n                            items: []\n                        });\n                    });\n\n                if (node) {\n                    parentNode = treeView.findByUid(treeView.dataSource.get(node.id).uid);\n                    treeView._progress(parentNode, false);\n                }\n\n                if (!items.length) {\n                    return;\n                }\n\n                if (action == \"itemloaded\" || (parentNode && action === \"sync\")) {\n                    parentNode.find(\".k-item\").each(function(index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items, parentNode);\n\n                    if (that._shouldFocus) {\n                        treeView.current(parentNode);\n                        treeView.focus();\n                    }\n                } else if (action == \"remove\") {\n                    this._remove(items[0].id);\n                } else if (action == \"itemchange\") {\n                    var existingItem = treeView.dataSource.get(items[0].id);\n\n                    if (existingItem) {\n                        existingItem.set(ev.field, items[0][ev.field]);\n                    } else {\n                        treeView.append(items[0], parentNode);\n                    }\n                } else if (!treeView.dataSource.data().length) {\n                    treeView.append(items);\n                } else if (action === \"sync\" || (action === undefined$1 && !parentNode)) {\n                    treeView.items().each(function(index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items);\n\n                    if (that._shouldFocus) {\n                        treeView.current(treeView._nextVisible($()));\n                        treeView.focus();\n                    }\n                }\n\n                if (!!activeDescendant && treeEl.find(\"#\" + activeDescendant).length === 0) {\n                    treeEl.removeAttr(\"aria-activedescendant\");\n                }\n            },\n\n            _remove: function(id) {\n                var that = this,\n                    treeView = that.treeView,\n                    dataSource = treeView.dataSource,\n                    item = dataSource.get(id),\n                    node;\n\n                if (item) {\n                    node = treeView.findByUid(item.uid);\n                    treeView.remove(node);\n                }\n            },\n\n            _bindEvents: function() {\n                var that = this;\n\n                that.treeView.bind(SELECT, that._navigate.bind(that));\n                that.treeView.bind(EXPAND, that._expand.bind(that));\n                that.treeView.element.on(KEYDOWN, that._keydownAction.bind(that));\n            },\n\n            _keydownAction: function(ev) {\n                var that = this,\n                    target = $(ev.target).find(\".k-focus\").closest(\".k-item\");\n\n                that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n            },\n\n            _expand: function(ev) {\n                var that = this,\n                    treeView = that.treeView,\n                    entry = treeView.dataItem(ev.node);\n\n                ev.preventDefault();\n                that.trigger(LOAD, { entryId: entry.id });\n            },\n\n            _navigate: function(ev) {\n                var that = this,\n                    node = ev.node,\n                    entry = that.treeView.dataItem(node),\n                    path = entry.id;\n\n                ev.preventDefault();\n\n                that.trigger(NAVIGATE, { path: path, entry: entry.toJSON() });\n            },\n\n            _hold: $.noop,\n\n            getSelected: function() {\n                var that = this,\n                    selectedItem = that.treeView.element.find(\".k-selected\").closest(\".k-item\"),\n                    item = that.treeView.dataItem(selectedItem);\n\n                return item;\n            },\n\n            refresh: function(id) {\n                var that = this,\n                    treeView = that.treeView,\n                    entry = treeView.dataSource.get(id),\n                    node = entry && treeView.findByUid(entry.uid);\n\n                if (entry && node) {\n                    treeView.element.find(\".k-selected\").removeClass(\"k-selected\");\n                    node.find(\"> div .k-in\").removeClass(\"k-hover\").addClass(\"k-selected\");\n                }\n            },\n\n            reload: function() {\n                this.treeView.dataSource.read();\n            }\n        });\n\n        ui.filemanager.registerViewComponent(\"tree\", TreeView);\n\n        if (kendo.ui.Grid) {\n            var Grid = Component.extend({\n                init: function(element, options, explicitOptions) {\n                    var that = this,\n                        dataSourceOptions = explicitOptions.dataSource,\n                        messages = explicitOptions.messages;\n\n                    options = extend({}, that.defaultOptions, options, {\n                        messages: messages\n                    });\n\n                    that._setDSOptions(options, dataSourceOptions);\n                    that._setupColumns(options, messages);\n                    options.kendoKeydown = options.kendoKeydown || that._kendoKeydown.bind(that);\n\n                    Component.fn.init.call(this, ui.Grid, element, options);\n\n                    that.grid = that.widgetComponent;\n                    that._bindEvents();\n\n                    if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                        that._initDragAndDrop();\n                    }\n\n                    if (explicitOptions.ariaLabel) {\n                        that.element.find(\"[role=grid]\").attr(\"aria-label\", explicitOptions.ariaLabel);\n                    }\n                },\n\n                defaultOptions: {\n                    selectable: kendo.support.mobileOS ? \"row\" : \"multiple\",\n                    editable: {\n                        mode: \"inline\",\n                        confirmation: false\n                    },\n                    sortable: true,\n                    dropFilter: \"tr:not(.k-grid-edit-row)\",\n                    navigatable: true\n                },\n\n                _setupColumns: function(options, messages) {\n                    if (!options.columns) {\n                        options.columns = [\n                            { field: \"name\", title: messages.nameField || \"Name\", template: function(item) {\n                                var icon = !item.isDirectory ? kendo.getFileGroup(item.extension, true) : \"folder\";\n\n                                var template = \"<div class='file-group-icon'>\" +\n                                                    \"<span class='k-icon k-i-\" + icon + \"'></span>\" +\n                                                \"</div>\" +\n                                                \"<div class='file-name'>\" + kendo.htmlEncode(item.name + item.extension) + \"<div>\";\n\n                                return template;\n                            } },\n                            { field: \"created\", title: messages.dateCreatedField , format: \"{0:G}\" },\n                            { field: \"size\", title: messages.sizeField, template: function(item) {\n                                if (item.size > 0) {\n                                    return kendo.getFileSizeMessage(item.size);\n                                } else {\n                                    return \"\";\n                                }\n                            } }\n                        ];\n                    }\n                },\n\n                _bindEvents: function() {\n                    var that = this,\n                        grid = that.grid;\n\n                    grid.bind(CHANGE, that._select.bind(that));\n                    grid.table.on(\"dblclick\" + NS, that._dblClick.bind(that));\n                    grid.table.on(\"mousedown\" + NS, \"tr:not(.k-grid-edit-row)\", that._mousedown.bind(that));\n                    grid.table.on(KEYDOWN + NS, \".k-grid-edit-row\", that._keydown.bind(that));\n                    grid.table.on(KEYDOWN + NS, that._keydownAction.bind(that));\n\n                    grid.bind(\"edit\", function() {\n                        that._toggleFocusable(true);\n                    });\n\n                    grid.bind(\"cancel\", function() {\n                        that.trigger(\"cancel\");\n                    });\n\n                    grid.saveRow = $.noop;\n\n                    Component.fn._bindEvents.call(this);\n                },\n\n                _kendoKeydown: function(ev) {\n                    var that = this,\n                        current = that.grid.current(),\n                        node = current ? current.closest(\"tr[data-uid]\") : null;\n\n                    if (node && ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                        that._triggerOpen(node);\n                        ev.preventKendoKeydown = true;\n                    }\n\n                    if (ev.keyCode === keys.F2) {\n                        ev.preventKendoKeydown = true;\n                    }\n                },\n\n                _keydownAction: function(ev) {\n                    var that = this,\n                        target = $(ev.target).find(\".k-focus\").closest(\"tr\");\n\n                    if (target.length && !target.is(\".k-grid-edit-row\")) {\n                        that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n                    }\n                },\n\n                _keydown: function(ev) {\n                    var that = this,\n                        grid = that.grid;\n\n                    if (!$(ev.target).closest(\".k-grid-edit-row\").length) {\n                        return;\n                    }\n\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        setTimeout(function() {\n                            var editorContainer = that.grid._editContainer || $();\n\n                            // force blur event for inputs\n                            editorContainer.find(\"input\").trigger(\"blur\");\n\n                            that._closeEditable();\n                        });\n\n                        that._tryCancel();\n                    }\n\n                    if (ev.keyCode === kendo.keys.ESC) {\n                        grid.cancelChanges();\n                        that.trigger(\"cancel\");\n                    }\n                },\n\n                _mousedown: function(ev) {\n                    var that = this,\n                        node = $(ev.target).closest(\"tr[data-uid]\");\n\n                    if (ev.which === 1 && that.grid.editable) {\n                        setTimeout(function() {\n                            that._closeEditable();\n                        });\n\n                        that._tryCancel();\n                    }\n\n                    if (ev.which === 3 && !node.is(\".k-selected\")) {\n                        that.grid.selectable.clear();\n                        that.grid.select(node);\n                    }\n                },\n\n                _tryCancel: function() {\n                    var that = this,\n                        grid = that.grid,\n                        container;\n\n                    if (grid.editable) {\n                        container = grid._editContainer;\n                        if (!container.find(\"input\").val()) {\n                            grid.cancelChanges();\n                        }\n                    }\n\n                    setTimeout(function() {\n                        that._toggleFocusable(false);\n                    });\n\n                },\n\n                _toggleFocusable: function(state) {\n                    var that = this,\n                        grid = that.grid;\n\n                    grid.table.find(\"tr,td\").children().addBack().toggleClass(\"k-focusable\", state);\n                },\n\n                _closeEditable: function() {\n                    var that = this,\n                        container;\n\n                    if (that.grid.editable && !that.grid.editable.options.model.dirty) {\n                        container = that.grid._editContainer;\n                        that.grid._destroyEditable();\n                        that.grid._displayRow(container);\n                        that.trigger(\"cancel\");\n                    }\n                },\n\n                _select: function() {\n                    var that = this,\n                        dataItems = that.getSelected();\n\n                    that.trigger(SELECT, { entries: dataItems });\n                },\n\n                _dblClick: function(ev) {\n                    var that = this,\n                        node = $(ev.target).closest(\"tr[data-uid]\");\n\n                    that._triggerOpen(node);\n                },\n\n                _triggerOpen: function(node) {\n                    var that = this;\n\n                    if (node.is(\".k-grid-edit-row\")) {\n                        return;\n                    }\n\n                    var item = that.grid.dataItem(node);\n\n                    if (item) {\n                        that.trigger(OPEN, { entry: item });\n                    }\n                },\n\n                getSelected: function() {\n                    var that = this,\n                    items = that.grid.select(),\n                    dataItems = [];\n\n                    for (var i = 0; i < items.length; i++) {\n                        dataItems.push(that.grid.dataItem(items[i]));\n                    }\n\n                    return dataItems;\n                },\n\n                addFolder: function() {\n                    this.grid.addRow();\n                },\n\n                edit: function(target) {\n                    var that = this,\n                        selected = that.grid.select();\n\n                    that.grid.editRow(target || selected);\n                },\n\n                destroy: function() {\n                    this.grid.table.off(NS);\n                    this.grid.element.off(NS);\n                    Component.fn.destroy.call(this);\n                }\n            });\n\n            ui.filemanager.registerViewComponent(\"grid\", Grid);\n        }\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            data = kendo.data,\n            Node = data.Node,\n            HierarchicalDataSource = data.HierarchicalDataSource,\n            DataSource = data.DataSource;\n\n        extend(true, kendo.data, {\n            schemas: {\n                \"filemanager\": {\n                    data: function(data) {\n                        return data.items || data || [];\n                    },\n                    model: {\n                        id: \"path\",\n                        hasChildren: \"hasDirectories\",\n                        fields: {\n                            name: { editable: true, type: \"string\", defaultValue: \"New Folder\" },\n                            size: { editable: false, type: \"number\" },\n                            path: { editable: false, type: \"string\" },\n                            extension: { editable: false, type: \"string\" },\n                            isDirectory: { editable: false, defaultValue: true, type: \"boolean\" },\n                            hasDirectories: { editable: false, defaultValue: false, type: \"boolean\" },\n                            created: { type: \"date\", editable: false },\n                            createdUtc: { type: \"date\", editable: false },\n                            modified: { type: \"date\", editable: false },\n                            modifiedUtc: { type: \"date\", editable: false }\n                        }\n                    }\n                }\n            }\n        });\n\n        var FileEntry = Node.define({\n            init: function(value) {\n                var that = this,\n                    isDirectory = this.isDirectory;\n\n                Node.fn.init.call(this, value);\n\n                if (typeof isDirectory === \"string\") {\n                isDirectory = kendo.getter(isDirectory);\n                }\n\n                if (kendo.isFunction(isDirectory)) {\n                    var isDirectoryObject = isDirectory.call(that, that);\n\n                    if (isDirectoryObject && isDirectoryObject.length === 0) {\n                        that.isDirectory = false;\n                    } else {\n                        that.isDirectory = !!isDirectoryObject;\n                    }\n                }\n\n                if (that.isDirectory) {\n                    that._initChildren();\n                }\n            },\n            _initChildren: function() {\n                var that = this;\n                var children, transport, parameterMap;\n\n                if (!(that.children instanceof kendo.data.FileManagerDataSource)) {\n                    children = that.children = new kendo.data.FileManagerDataSource(that._childrenOptions);\n\n                    transport = children.transport;\n                    parameterMap = transport.parameterMap;\n\n                    transport.parameterMap = function(data, type) {\n                        if (type === \"read\" || type === \"create\") {\n                            data.target = that.id;\n                        }\n\n                        if (parameterMap) {\n                            data = parameterMap.call(that, data, type);\n                        }\n\n                        return data;\n                    };\n\n                    children.parent = function() {\n                        return that;\n                    };\n\n                    children.bind(\"change\", function(e) {\n                        e.node = e.node || that;\n                        that.trigger(\"change\", e);\n                    });\n\n                    children.bind(\"error\", function(e) {\n                        var collection = that.parent();\n\n                        if (collection) {\n                            e.node = e.node || that;\n                            collection.trigger(\"error\", e);\n                        }\n                    });\n\n                    that._updateChildrenField();\n                }\n            },\n            isNew: function() {\n                if (this.fileManagerNewItem) {\n                    delete this.fileManagerNewItem;\n                    return true;\n                }\n\n                return this.id === this._defaultId;\n            }\n        });\n\n\n        var FileManagerDataSource = HierarchicalDataSource.extend({\n            init: function(options) {\n                var fileEntry = FileEntry.define({\n                    children: options\n                });\n\n                if (options.filter && !options.serverFiltering) {\n                    this._hierarchicalFilter = options.filter;\n                    options.filter = null;\n                }\n\n                DataSource.fn.init.call(this, $.extend(true, {}, { schema: { modelBase: fileEntry, model: fileEntry } }, options));\n\n                this.isLocalBinding = this.transport instanceof kendo.data.LocalTransport;\n\n                this._attachBubbleHandlers();\n            },\n            insert: function(index, model) {\n                var parentNode = this.parent();\n\n                if (parentNode && parentNode._initChildren) {\n                    if (model && model.isDirectory) {\n                        parentNode.hasDirectories = true;\n                    }\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n\n                return DataSource.fn.insert.call(this, index, model);\n            },\n            remove: function(node) {\n                var that = this,\n                    parentNode = node.parentNode(),\n                    dataSource = that,\n                    result;\n\n                if (parentNode && parentNode._initChildren) {\n                    dataSource = parentNode.children;\n                }\n\n                that._cleanDestroyed(node);\n\n                result = DataSource.fn.remove.call(dataSource, node);\n\n                if (parentNode && (dataSource.data() && !dataSource.data().length)) {\n                    parentNode.hasChildren = false;\n                } else if (parentNode && !this._hasDirectories(parentNode)) {\n                    parentNode.hasDirectories = false;\n                }\n\n                return result;\n            },\n            _cleanDestroyed: function(node) {\n                var that = this,\n                    dataSource = that;\n\n                if (node.parentNode && node.parentNode()) {\n                    node = node.parentNode();\n                    dataSource = node.children;\n                    dataSource._destroyed = [];\n                    that._cleanDestroyed(node);\n                } else {\n                    dataSource._destroyed = [];\n                }\n            },\n            _hasDirectories: function(node) {\n                var result;\n\n                if (!node.children.data()) {\n                    return false;\n                }\n\n                result = node.children.data().filter(function(item) {\n                    return item.isDirectory;\n                });\n\n                return !!result.length;\n            }\n        });\n\n        FileManagerDataSource.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            if (data && data._dataSource) {\n                return data._dataSource;\n            }\n\n            dataSource.data = data;\n\n            return dataSource instanceof FileManagerDataSource ? dataSource : new FileManagerDataSource(dataSource);\n        };\n\n        kendo.observableFileManagerData = function(array) {\n            var dataSource = FileManagerDataSource.create({\n                data: array,\n                schema: kendo.data.schemas.filemanager\n            });\n\n            dataSource.fetch();\n\n            dataSource._data._dataSource = dataSource;\n\n            return dataSource._data;\n        };\n\n        extend(kendo.data, {\n            FileManagerDataSource: FileManagerDataSource,\n            FileEntry: FileEntry\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            template = kendo.template,\n            ContextMenu = kendo.ui.ContextMenu,\n\n            ACTION = \"action\";\n\n        var FileManagerContextMenu = ContextMenu.extend({\n            init: function(element, options) {\n                var that = this;\n\n                ContextMenu.fn.init.call(that, element, options);\n\n                that._overrideTemplates();\n                that._restrictDefaultItems();\n                that._extendItems();\n\n                that.bind(\"select\", that._onSelect.bind(that));\n                that.bind(\"open\", that._onOpen.bind(that));\n            },\n\n            _overrideTemplates: function() {\n                this.templates.sprite = template(function (spriteCssClass) { return (\"\" + (spriteCssClass ? (\"<span class=\\\"\" + spriteCssClass + \"\\\"></span>\") : '')); });\n            },\n\n            _restrictDefaultItems: function() {\n                var that = this;\n\n                if (that.options.isLocalBinding) {\n                    that.defaultItems = {};\n                }\n            },\n\n            defaultItems: {\n                \"rename\": { text: \"Rename\", spriteCssClass: \"k-icon k-i-edit\", command: \"RenameCommand\" },\n                \"delete\": { text: \"Delete\", spriteCssClass: \"k-icon k-i-delete\", command: \"DeleteCommand\" }\n            },\n\n            events: ContextMenu.fn.events.concat([\n                ACTION\n            ]),\n\n            _extendItems: function() {\n                var that = this,\n                    items = that.options.items,\n                    item, isBuiltInTool;\n\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n\n                        if ($.isPlainObject(item) ) {\n                            that._extendItem(item);\n                            that.append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._extendItem(item);\n                            that.append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._extendItem(item);\n                        that.append(item);\n                    }\n                }\n            },\n\n            _extendItem: function(item) {\n                var that = this,\n                    messages = that.options.messages;\n\n                extend(item, {\n                    text: messages[item.text],\n                    spriteCssClass: item.spriteCssClass || \"\",\n                    attr: {\n                        \"data-command\": item.command\n                    }\n                });\n            },\n\n            _onSelect: function(ev) {\n                var command = $(ev.item).data(\"command\");\n                var target = $(ev.target);\n\n                if (!command) {\n                    return;\n                }\n\n                this.action({\n                    command: command,\n                    options: { target: target }\n                });\n            },\n\n            _onOpen: function(ev) {\n                var menu = ev.sender,\n                    items = menu.options.items;\n\n                if (!items && $.isEmptyObject(this.defaultItems)) {\n                    ev.preventDefault();\n                }\n            },\n\n            action: function(args) {\n                this.trigger(ACTION, args);\n            }\n        });\n\n        extend(kendo.ui.filemanager, {\n            ContextMenu: FileManagerContextMenu\n        });\n\n        })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"filemanager\",\n        name: \"FileManager\",\n        category: \"web\",\n        description: \"The FileManager widget displays offers file management functionality.\",\n        depends: [ \"core\", \"data\", \"listview\", \"toolbar\", \"breadcrumb\", \"menu\", \"treeview\", \"upload\", \"dialog\", \"switch\", \"resizable\", \"selectable\", \"editable\", \"textbox\" ],\n        features: [{\n            id: \"filemanager-grid-view\",\n            name: \"GridView\",\n            description: \"Support for GridView\",\n            depends: [ \"grid\" ]\n        }]\n    };\n\n    (function($, undefined$1) {\n        var ui = kendo.ui,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            isPlainObject = $.isPlainObject,\n            isArray = Array.isArray,\n            DataBoundWidget = ui.DataBoundWidget,\n            template = kendo.template,\n            outerHeight = kendo._outerHeight,\n            ns = \".kendoFileManager\",\n\n            NAVIGATE = \"navigate\",\n            SELECT = \"select\",\n            OPEN = \"open\",\n            ERROR = \"error\",\n            CHANGE = \"change\",\n            UPLOAD = \"upload\",\n            SUCCESS = \"success\",\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            CLOSE = \"close\",\n            HIDE = \"hide\",\n            LOAD = \"load\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            DROP = \"drop\",\n            EXECUTE = \"execute\",\n            COMMAND = \"command\",\n            KEYDOWNACTION = \"keydownAction\",\n            CANCEL = \"cancel\",\n\n            TREE_TYPE = \"tree\",\n            DOT = \".\";\n\n        var fileManagerStyles = {\n            wrapper: \"k-widget k-filemanager\",\n            header: \"k-filemanager-header\",\n            navigation: \"k-filemanager-navigation\",\n            contentContainer: \"k-filemanager-content-container\",\n            content: \"k-filemanager-content\",\n            preview: \"k-filemanager-preview\",\n            toolbar: \"k-filemanager-toolbar\",\n            treeview: \"k-filemanager-treeview\",\n            breadcrumb: \"k-filemanager-breadcrumb\",\n            view: \"k-filemanager-view\",\n            grid: \"k-filemanager-grid\",\n            list: \"k-filemanager-listview\",\n            upload: \"k-filemanager-upload\",\n            uploadDialog: \"k-filemanager-upload-dialog\",\n            splitBar: \"k-splitbar\",\n            splitBarHorizontal: \"k-splitbar-horizontal k-splitbar-draggable-horizontal\",\n            splitBarHover: \"k-splitbar-horizontal-hover\",\n            splitBarIcon: \"k-icon k-resize-handle\",\n            splitBarNavigation: \"k-filemanager-splitbar-navigation\",\n            splitBarPreview: \"k-filemanager-splitbar-preview\",\n            resizable: \"k-filemanager-resizable\"\n        };\n\n        var fileManagerTemplateStyles = {\n            filePreview: \"k-file-preview\",\n            fileInfo: \"k-file-info\",\n            fileName: \"k-file-name\",\n            fileMeta: \"k-file-meta\",\n            metaLabel: \"k-file-meta-label\",\n            metaValue: \"k-file-meta-value\",\n            extension: \"k-file-type\",\n            size: \"k-file-size\",\n            created: \"k-file-created\",\n            modified: \"k-file-modified\"\n        };\n\n        var viewTypes = {\n            grid: \"grid\",\n            list: \"list\"\n        };\n\n        var NO_FILE_PREVIEW_TEMPLATE = function (ref) {\n                 var styles = ref.styles;\n                 var messages = ref.messages;\n\n                 return \"<div class=\\\"\" + (encode(styles.fileInfo)) + \"\\\">\" +\n                \"<div class=\\\"\" + (encode(styles.filePreview)) + \"\\\">\" +\n                    '<span class=\"k-file-icon k-icon k-i-none\"></span>' +\n                '</div>' +\n                \"<span class=\\\"\" + (encode(styles.fileName)) + \"\\\" k-no-file-selected>\" + (encode(messages.noFileSelected)) + \"</span>\" +\n            '</div>';\n        };\n\n        var SINGLE_FILES_PREVIEW_TEMPLATE = function (ref) {\n            var styles = ref.styles;\n            var selection = ref.selection;\n            var metaFields = ref.metaFields;\n            var messages = ref.messages;\n\n            var result = '';\n            result +=\n            \"<div class=\\\"\" + (encode(styles.fileInfo)) + \"\\\">\" +\n                \"<div class=\\\"\" + (encode(styles.filePreview)) + \"\\\">\" +\n                    \"<span class=\\\"k-file-icon k-icon k-i-\" + (!selection[0].isDirectory ? encode(kendo.getFileGroup(selection[0].extension, true)) : \"folder\") + \"\\\"></span>\" +\n                '</div>' +\n                \"<span class=\\\"\" + (encode(styles.fileName)) + \"\\\">\" + (encode(selection[0].name)) + \"</span>\";\n            if (metaFields) {\n                result += \"<dl class=\\\"\" + (encode(styles.fileMeta)) + \"\\\">\";\n                    for (var i = 0; i < metaFields.length; i += 1) {\n                        var field = metaFields[i];\n                        result +=\n                        \"<dt class=\\\"\" + (encode(styles.metaLabel)) + \"\\\">\" + (encode(messages[field])) + \": </dt>\" +\n                        \"<dd class=\\\"\" + (encode(styles.metaValue)) + \" \" + (encode(styles[field])) + \"\\\">\";\n                        if (field == \"size\") {\n                            result += \" \" + (encode(kendo.getFileSizeMessage(selection[0][field])));\n                        } else if (selection[0][field] instanceof Date) {\n                            result += \" \" + (encode(kendo.toString(selection[0][field], \"G\")));\n                        } else if (field == \"extension\") {\n                            result += \" \" + (encode( !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension) : \"folder\"));\n                        } else {\n                            result += \" \" + (encode(selection[0][field]));\n                        }\n\n                        result += '</dd>' +\n                        '<dd class=\"k-line-break\"></dd>';\n                    }\n\n                    result += '</dl>';\n            }\n\n            result += '</div>';\n            return result;\n        };\n\n        var MULTIPLE_FILES_PREVIEW_TEMPLATE = function (ref) {\n                var styles = ref.styles;\n                var selection = ref.selection;\n                var messages = ref.messages;\n\n                return \"<div class=\\\"\" + (encode(styles.fileInfo)) + \"\\\">\" +\n                \"<div class=\\\"\" + (encode(styles.filePreview)) + \"\\\">\" +\n                    '<span class=\"k-file-icon k-icon k-i-file\"></span>' +\n                '</div>' +\n                \"span class=\\\"\" + (encode(styles.fileName)) + \"\\\">\" +\n                    (encode(selection.length)) + \" \" +\n                    \"\" + (encode(messages.items)) +\n                '</span>' +\n            '</div>';\n        };\n\n        var FileManager = DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                DataBoundWidget.fn.init.call(that, element, options);\n\n                that.options = kendo.deepExtend({}, that.options, options);\n\n                that.defaultSortOption = { field: \"name\", dir: \"asc\" };\n                that.folderSortOption = { field: \"isDirectory\", dir: \"desc\" };\n\n                that._commandStack = new ui.filemanager.CommandStack();\n\n                that._dataSource();\n\n                that._wrapper();\n\n                that._renderHeader();\n\n                that._renderContentContainer();\n\n                that._initContextMenu();\n\n                that._renderNavigation();\n\n                that._renderContent();\n\n                that._renderPreview();\n\n                that._initUploadDialog();\n\n                that._resizable();\n\n                that._attachKeyDown();\n\n                that.resize();\n\n                kendo.notify(that, kendo.ui);\n            },\n\n            options: {\n                name: \"FileManager\",\n                height: 500,\n                resizable: true,\n                initialView: viewTypes.list,\n                toolbar: {\n                    resizable: true\n                },\n                contextMenu: {},\n                upload: {},\n                uploadUrl: \"\",\n                views: {},\n                breadcrumb: {},\n                draggable: true,\n                dialogs: {\n                    upload: {\n                        width: 530\n                    },\n                    moveConfirm: {\n                        width: 350,\n                        closable: true\n                    },\n                    deleteConfirm: {\n                        width: 360,\n                        closable: true\n                    },\n                    renamePrompt: {\n                        width: 350,\n                        closable: true\n                    }\n                },\n                previewPane: {\n                    metaFields: [\"extension\", \"size\", \"created\", \"modified\"],\n                    noFileTemplate: NO_FILE_PREVIEW_TEMPLATE,\n                    singleFileTemplate: SINGLE_FILES_PREVIEW_TEMPLATE,\n                    multipleFilesTemplate: MULTIPLE_FILES_PREVIEW_TEMPLATE\n                },\n                messages: {\n                    toolbar: {\n                        createFolder: \"New Folder\",\n                        upload: \"Upload\",\n                        sortDirection: \"Sort Direction\",\n                        sortDirectionAsc: \"Sort Direction Ascending\",\n                        sortDirectionDesc: \"Sort Direction Descending\",\n                        sortField: \"Sort By\",\n                        nameField: \"Name\",\n                        sizeField: \"File Size\",\n                        typeField: \"Type\",\n                        dateModifiedField: \"Date Modified\",\n                        dateCreatedField: \"Date Created\",\n                        listView: \"List View\",\n                        gridView: \"Grid View\",\n                        search: \"Search\",\n                        details: \"View Details\",\n                        detailsChecked: \"On\",\n                        detailsUnchecked: \"Off\",\n                        \"delete\": \"Delete\",\n                        rename: \"Rename\"\n                    },\n                    views: {\n                        nameField: \"Name\",\n                        sizeField: \"File Size\",\n                        typeField: \"Type\",\n                        dateModifiedField: \"Date Modified\",\n                        dateCreatedField: \"Date Created\",\n                        items: \"items\",\n                        listLabel: \"FileManager ListView\",\n                        gridLabel: \"FileManager Grid\",\n                        treeLabel: \"FileManager TreeView\"\n                    },\n                    dialogs: {\n                        upload: {\n                            title: \"Upload Files\",\n                            clear: \"Clear List\",\n                            done: \"Done\"\n                        },\n                        moveConfirm: {\n                            title: \"Confirm\",\n                            content: \"<p style='text-align: center;'>Do you want to move or copy?</p>\",\n                            okText: \"Copy\",\n                            cancel: \"Move\",\n                            close: \"close\"\n                        },\n                        deleteConfirm: {\n                            title: \"Confirm\",\n                            content: \"<p style='text-align: center;'>Are you sure you want to delete the selected file(s)?</br>You cannot undo this action.</p>\",\n                            okText: \"Delete\",\n                            cancel: \"Cancel\",\n                            close: \"close\"\n                        },\n                        renamePrompt: {\n                            title: \"Prompt\",\n                            content: \"<p style='text-align: center;'>Enter new name for the file.</p>\",\n                            okText: \"Rename\",\n                            cancel: \"Cancel\",\n                            close: \"close\"\n                        }\n                    },\n                    previewPane: {\n                        noFileSelected: \"No File Selected\",\n                        extension: \"Type\",\n                        size: \"Size\",\n                        created: \"Date Created\",\n                        createdUtc: \"Date Created UTC\",\n                        modified: \"Date Modified\",\n                        modifiedUtc: \"Date Modified UTC\",\n                        items: \"items\"\n                    }\n                }\n            },\n\n            events: [\n                NAVIGATE,\n                SELECT,\n                OPEN,\n                DATABINDING,\n                DATABOUND,\n                ERROR,\n                DROP,\n                EXECUTE,\n                COMMAND\n            ],\n\n            defaultTools: {\n                createFolder: { type: \"button\", name: \"createFolder\", command: \"CreateFolderCommand\", rules: { remote: true } },\n                upload: { type: \"button\", name: \"upload\", command: \"OpenDialogCommand\", options: \"{ \\\"type\\\": \\\"uploadDialog\\\" }\", rules: { remote: true } },\n                sortDirection: {\n                    type: \"buttonGroup\",\n                    buttons: [\n                        { name: \"sortDirectionAsc\", showText: \"overflow\", icon: \"sort-asc-sm\", togglable: true, group: \"sortDirection\", command: \"SortCommand\", options: \"{ \\\"dir\\\": \\\"asc\\\" }\", selected: true },\n                        { name: \"sortDirectionDesc\", showText: \"overflow\", icon: \"sort-desc-sm\", togglable: true, group: \"sortDirection\", command: \"SortCommand\", options: \"{ \\\"dir\\\": \\\"desc\\\" }\" }\n                    ]\n                },\n                sortField: {\n                    type: \"splitButton\",\n                    name: \"sortField\",\n                    command: \"SortCommand\",\n                    menuButtons: [\n                        { name: \"nameField\", options: \"{\\\"field\\\": \\\"name\\\"}\", command: \"SortCommand\" },\n                        { name: \"typeField\", options: \"{\\\"field\\\": \\\"extension\\\"}\", command: \"SortCommand\" },\n                        { name: \"sizeField\", options: \"{\\\"field\\\": \\\"size\\\"}\", command: \"SortCommand\" },\n                        { name: \"dateCreatedField\", options: \"{\\\"field\\\": \\\"createdUtc\\\"}\", command: \"SortCommand\" },\n                        { name: \"dateModifiedField\", options: \"{\\\"field\\\": \\\"modifiedUtc\\\"}\", command: \"SortCommand\" }\n                    ]\n                },\n                changeView: {\n                    type: \"buttonGroup\",\n                    buttons: [\n                        { name: \"gridView\", showText: \"overflow\", icon: \"grid-layout\", togglable: true, group: \"changeView\", command: \"ChangeViewCommand\", options: \"grid\" },\n                        { name: \"listView\", showText: \"overflow\", icon: \"grid\", togglable: true, group: \"changeView\", command: \"ChangeViewCommand\", options: \"list\" }\n                    ]\n                },\n                spacer: { type: \"spacer\" },\n                details: {\n                    type: \"component\",\n                    name: \"details\",\n                    items: [{\n                        template: function(data) {\n                            return \"<label for='details-toggle'>\" + data.componentOptions.messages.text + \"</label>\";\n                        },\n                        overflow: \"never\",\n                        componentOptions: {\n                            messages: {\n                                text: \"details\"\n                            }\n                        }\n                    },\n                    {\n                        name: \"details\",\n                        command: \"TogglePaneCommand\",\n                        options: \"{ \\\"type\\\": \\\"preview\\\" }\",\n                        overflow: \"never\",\n                        element: \"<input id='details-toggle' class='k-filemanager-details-toggle' />\",\n                        component: \"Switch\",\n                        componentOptions: {\n                            messages: {\n                                checked: \"detailsChecked\",\n                                unchecked: \"detailsUnchecked\"\n                            },\n                            commandOn: \"change\"\n                        }\n                    }]\n                },\n                search: {\n                    type: \"component\",\n                    name: \"search\",\n                    command: \"SearchCommand\",\n                    options: \"{ \\\"field\\\": \\\"name\\\", \\\"operator\\\": \\\"startswith\\\" }\",\n                    overflow: \"never\",\n                    component: \"TextBox\",\n                    componentOptions: {\n                        placeholder: \"Search\",\n                        icon: \"search\",\n                        commandOn: \"input\"\n                    }\n                }\n            },\n\n            _attachKeyDown: function() {\n                var that = this;\n\n                that.wrapper.on(\"keydown\" + ns, function (e) {\n                    if (e.keyCode === kendo.keys.F10) {\n                        e.preventDefault();\n                        that.toolbar.element.find(\"[tabindex=0]\").first().trigger(\"focus\");\n                    }\n                });\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    options = that.options,\n                    dataSourceOptions = options.dataSource || {},\n                    typeSortOrder = that.folderSortOption,\n                    nameSortOrder = that.defaultSortOption,\n                    dataSource;\n\n                if (!(dataSourceOptions instanceof kendo.data.FileManagerDataSource)) {\n                    if (isArray(dataSourceOptions)) {\n                        dataSource = {\n                            data: dataSourceOptions,\n                            autoSync: false,\n                            sort: [typeSortOrder, nameSortOrder]\n                         };\n                    } else {\n                        dataSource = extend(true, dataSourceOptions, {\n                            autoSync: false,\n                            sort: [typeSortOrder, nameSortOrder]\n                        });\n                    }\n\n                    if (dataSourceOptions && isPlainObject(dataSourceOptions.schema)) {\n                        dataSource.schema = dataSourceOptions.schema;\n                    } else if (isPlainObject(kendo.data.schemas.filemanager)) {\n                        dataSource.schema = kendo.data.schemas.filemanager;\n                    }\n                } else {\n                    dataSource = dataSourceOptions;\n                }\n\n                if (that.dataSource && that._errorHandler) {\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                } else {\n                    that._errorHandler = that._error.bind(that);\n                    that._changeHandler = that._change.bind(that);\n                }\n\n                that.dataSource = kendo.data.FileManagerDataSource.create(dataSource)\n                    .bind(ERROR, that._errorHandler)\n                    .bind(CHANGE, that._changeHandler);\n            },\n\n            _error: function(ev) {\n                if (!this.trigger(ERROR, ev)) {\n                    window.console.warn('Error! The requested URL returned ' + ev.xhr.status + ' - ' + ev.xhr.statusText);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    width = options.width,\n                    height = options.height;\n\n                that.wrapper = that.element\n                    .addClass(fileManagerStyles.wrapper);\n\n                if (width) {\n                    that.wrapper.width(width);\n                }\n\n                if (height) {\n                    that.wrapper.height(height);\n                }\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize(true);\n                });\n            },\n\n            _renderHeader: function() {\n                var that = this,\n                    options = that.options;\n\n                if (options.toolbar) {\n                    that.header = $(\"<div />\").addClass(fileManagerStyles.header);\n                }\n\n                that.wrapper.append(that.header);\n\n                if (options.toolbar) {\n                    that._initToolbar();\n                    that.toolbar._tabIndex();\n                }\n            },\n\n            _renderContentContainer: function() {\n                var that = this,\n                    container = $(\"<div />\").addClass(fileManagerStyles.contentContainer);\n\n                that.contentContainer = container;\n\n                that.wrapper.append(that.contentContainer);\n            },\n\n            _initContextMenu: function() {\n                var that = this,\n                    options = that.options,\n                    menuOptions = extend({}, options.contextMenu, {\n                        filemanager: that,\n                        messages: options.messages.toolbar,\n                        target: that.contentContainer,\n                        filter: \"[data-uid]\",\n                        action: that.executeCommand.bind(that),\n                        isLocalBinding: that.dataSource.isLocalBinding\n                    });\n\n                if (options.contextMenu === false) {\n                    return;\n                }\n\n                that.contextMenu = new ui.filemanager.ContextMenu(\"<ul></ul>\", menuOptions);\n\n                that.contextMenu.bind(OPEN, that._cacheFocus.bind(that));\n            },\n\n            _renderNavigation: function() {\n                var that = this;\n\n                that.navigation = $(\"<div />\").addClass(fileManagerStyles.navigation);\n                that.navigation.append(that._initTreeView().element);\n\n                that.contentContainer.append(that.navigation);\n            },\n\n            _renderContent: function() {\n                var that = this,\n                    options = that.options,\n                    toolbar = that.toolbar;\n\n                that.content = $(\"<div />\").addClass(fileManagerStyles.content);\n\n                if (options.breadcrumb) {\n                    that.content.append(that._initBreadcrumb().element);\n                }\n\n                that.content.append(that._initView());\n\n                if (!toolbar || !that._isToolEnabled(that.defaultTools.upload.name)) {\n                    that.content.append(that._initUpload().wrapper.hide());\n                }\n\n                that.contentContainer.append(that.content);\n            },\n\n            _renderPreview: function() {\n                var that = this,\n                    enablePreview = that.options.previewPane;\n\n                if (!enablePreview) {\n                   return;\n                }\n\n                that.preview = $(\"<div />\").addClass(fileManagerStyles.preview);\n                that.previewContainer = $(\"<div />\").addClass(fileManagerStyles.previewContainer);\n                that.preview.append(that.previewContainer);\n\n                that._setPreviewPaneContent();\n\n                that.contentContainer.append(that.preview.hide());\n            },\n\n            _setPreviewPaneContent: function() {\n                var that = this,\n                    options = that.options,\n                    previewPaneMessages = options.messages.previewPane,\n                    previewPaneOptions = options.previewPane,\n                    selection = that.getSelected(),\n                    previewTemplate;\n\n                if (!selection) {\n                    previewTemplate = template(previewPaneOptions.noFileTemplate)({\n                        styles: fileManagerTemplateStyles,\n                        messages: previewPaneMessages\n                    });\n\n                    that.previewContainer.html(previewTemplate);\n                    return;\n                }\n\n                previewTemplate = selection.length === 1 ?\n                    previewPaneOptions.singleFileTemplate :\n                    previewPaneOptions.multipleFilesTemplate;\n\n                previewTemplate = template(previewTemplate)({\n                    styles: fileManagerTemplateStyles,\n                    messages: previewPaneMessages,\n                    selection: selection,\n                    metaFields: previewPaneOptions.metaFields\n                });\n\n                that.previewContainer.html(previewTemplate);\n            },\n\n            _initToolbar: function() {\n                var that = this,\n                    options = that.options,\n                    toolbarElement = $(\"<div />\").addClass(fileManagerStyles.toolbar),\n                    toolbarOptions = extend({}, options.toolbar),\n                    tools = toolbarOptions.items ? toolbarOptions.items : Object.keys(that.defaultTools);\n\n                tools = that._processTools(tools);\n                toolbarOptions.tools = tools;\n                toolbarOptions.defaultTools = that.defaultTools;\n                toolbarOptions.parentMessages = that.options.messages.toolbar;\n\n                that.header.append(toolbarElement);\n                that.toolbar = new kendo.ui.ToolBar(toolbarElement, toolbarOptions);\n                that.options.toolbar = that.toolbar.options;\n\n                that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n                that.toolbar.bind(CLOSE, that._toolbarClick.bind(that));\n                that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n\n                return that.toolbar;\n            },\n\n            _processTools: function(tools) {\n                var that = this;\n\n                tools.forEach(function (t) {\n                    var rules = t.rules || that.defaultTools[t] ? that.defaultTools[t].rules : null;\n\n                    if (rules && rules.remote && that.dataSource.isLocalBinding) {\n                        if (t.rules) {\n                            t.hidden = true;\n                        } else {\n                            that.defaultTools[t].hidden = true;\n                        }\n                    }\n\n                    if (t.name === \"changeView\") {\n                        that.defaultTools[t.name].buttons.forEach(function (b, i) {\n                            if (b.options === that.options.initialView) {\n                                that.defaultTools[t.name].buttons[i].selected = true;\n                            }\n                        });\n                    } else if (t.buttons && t.buttons[0].group === \"changeView\") {\n                        t.buttons.forEach(function (b, i) {\n                            if (b.options === that.options.initialView) {\n                                t.buttons[i].selected = true;\n                            }\n                        });\n                    }\n                });\n\n                return tools;\n            },\n\n            _toolbarClick: function(ev) {\n                var command = $(ev.target).data(\"command\"),\n                    options = $(ev.target).data(\"options\");\n\n                options = extend({}, options, { value: $(ev.target).val() });\n\n                if (!command) {\n                    return;\n                }\n\n                this.executeCommand({\n                    command: command,\n                    options: options\n                });\n            },\n\n            _isToolEnabled: function(toolName) {\n                var that = this,\n                    options = that.options.toolbar,\n                    items = options.items || that.defaultTools,\n                    found = false;\n\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].name == toolName) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                return items[toolName] || found;\n            },\n\n            _initTreeView: function() {\n                var that = this,\n                    treeViewElement = $(\"<div />\").addClass(fileManagerStyles.treeview),\n                    options = that.options.views[TREE_TYPE],\n                    explicitOptions = extend(true, {}, {\n                        dataSource: that.options.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable,\n                        isLocalBinding: that.dataSource.isLocalBinding\n                    });\n\n                that.treeView = new ui.filemanager.ViewComponents[TREE_TYPE](treeViewElement, options, explicitOptions);\n\n                that.treeView.bind(NAVIGATE, that._navigate.bind(that))\n                             .bind(LOAD, that._load.bind(that))\n                             .bind(DROP, that._drop.bind(that))\n                             .bind(KEYDOWNACTION, that._keydownAction.bind(that));\n\n                return that.treeView;\n            },\n\n            _drop: function(ev) {\n                var that = this;\n\n                if (!that.trigger(DROP, ev) && ev.items.indexOf(ev.target) < 0) {\n                    that._confirm({\n                        type: \"move\",\n                        target: ev.target\n                    }).done(function() {\n                        that.executeCommand({ command: \"CopyCommand\", options: ev });\n                    }).fail(function() {\n                        that.executeCommand({ command: \"MoveCommand\", options: ev });\n                    });\n                }\n            },\n\n            _keydownAction: function(ev) {\n                var that = this,\n                    keyCode = ev.keyCode,\n                    keys = kendo.keys;\n\n                if (keyCode === keys.DELETE) {\n                    that.executeCommand({ command: \"DeleteCommand\", options: { target: ev.target } });\n                }\n\n                if (keyCode === keys.F2) {\n                    that.executeCommand({ command: \"RenameCommand\", options: { target: ev.target } });\n                }\n            },\n\n            _confirm: function(options) {\n                var that = this,\n                    messages = that.options.messages.dialogs[options.type + \"Confirm\"];\n\n                var confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages\n                }, that.options.dialogs[options.type + \"Confirm\"])).data(\"kendoConfirm\");\n\n                confirm.bind(OPEN, that._cacheFocus.bind(that));\n                confirm.bind(HIDE, that._restoreFocus.bind(that, options.target));\n\n                confirm.open();\n\n                confirm.wrapper.removeClass(\"k-confirm\");\n\n                return confirm.result;\n            },\n\n            _prompt: function(options) {\n                var that = this,\n                    messages = this.options.messages.dialogs[options.type + \"Prompt\"];\n\n                var prompt = $(\"<div></div>\").kendoPrompt(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages,\n                    value: options.defaultInput\n                },this.options.dialogs[options.type + \"Prompt\"])).data(\"kendoPrompt\");\n\n                prompt.bind(OPEN, that._cacheFocus.bind(that));\n                prompt.bind(CLOSE, that._restoreFocus.bind(that, options.target));\n\n                prompt.open();\n\n                prompt.wrapper.removeClass(\"k-prompt\");\n\n                return prompt.result;\n            },\n\n            _cacheFocus: function() {\n                var that = this,\n                    activeElement = $(document.activeElement),\n                    view = that.view(),\n                    treeView = that.treeView.widgetComponent;\n\n                if (that.contextMenu && that.contextMenu.popup.visible()) {\n                    return;\n                }\n\n                that.treeView._shouldFocus = false;\n\n                if ((treeView.current() && treeView.current().find(\".k-focus\").length) ||\n                    activeElement.hasClass(fileManagerStyles.treeview)) {\n                    that.treeView._shouldFocus = true;\n                    view._focusElement = activeElement;\n                    return;\n                }\n\n                view._focusElement = activeElement.hasClass(fileManagerStyles[that._viewType]) ?\n                    activeElement :\n                    null;\n            },\n\n            _restoreFocus: function(target) {\n                var that = this,\n                    view = that.view();\n\n                if (!target) {\n                    return;\n                }\n\n                if (view._focusElement) {\n                    view._focusElement.trigger(\"focus\");\n                } else if (target.closest && target.closest(\":kendoFocusable\").length) {\n                    target.closest(\":kendoFocusable\").trigger(\"focus\");\n                }\n            },\n\n            _initView: function() {\n                var that = this,\n                    viewWrapper = $(\"<div />\").addClass(fileManagerStyles.view),\n                    initialView = that.options.initialView;\n\n                that.viewWrapper = viewWrapper;\n                that.viewWrapper.append(that.view(initialView));\n\n                return viewWrapper;\n            },\n\n            _initBreadcrumb: function() {\n                var that = this,\n                    options = that.options,\n                    breadcrumbElement = $(\"<nav />\").addClass(fileManagerStyles.breadcrumb),\n                    breadcrumbOptions = extend({}, {\n                        items: [\n                            { type: \"rootitem\", text: \"\" }\n                        ],\n                        change: that._breadcrumbChange.bind(that)\n                    }, options.breadcrumb);\n\n                that.breadcrumb = new ui.Breadcrumb(breadcrumbElement, breadcrumbOptions);\n\n                return that.breadcrumb;\n            },\n\n            _breadcrumbChange: function(ev) {\n                var entry = ev.sender.items().filter(function(item) {\n                    return item.path === ev.value.substring(1);\n                }).shift();\n\n                this._navigate({ path: entry ? entry.id : \"\" });\n            },\n\n            _initUploadDialog: function() {\n                var that = this,\n                    options = that.options,\n                    dialogMessages = options.messages.dialogs.upload,\n                    dialogElement = $(\"<div />\"),\n                    dialogOptions = extend({}, {\n                        title: dialogMessages.title,\n                        modal: true,\n                        visible: false,\n                        width: 500,\n                        actions: [\n                            { text: function () { return dialogMessages.clear; }, action: that._clearUploadFilesList.bind(that) },\n                            { text: function () { return dialogMessages.done; }, primary: true }\n                        ],\n                        messages: dialogMessages\n                    }, options.dialogs.upload),\n                    uploadInstance;\n\n                if (!that._shouldInitUpload()) {\n                    return;\n                }\n\n                uploadInstance = that._initUpload();\n\n                that.uploadDialog = new ui.Dialog(dialogElement, dialogOptions);\n                that.uploadDialog.wrapper.addClass(fileManagerStyles.uploadDialog);\n                that.uploadDialog.element.append(uploadInstance.wrapper);\n\n                that.uploadDialog.bind(OPEN, that._toggleUploadDropZone.bind(that, \"\"));\n                that.uploadDialog.bind(CLOSE, that._toggleUploadDropZone.bind(that, that.viewWrapper));\n\n                return that.uploadDialog;\n            },\n\n            _shouldInitUpload: function() {\n                var that = this,\n                    options = that.options,\n                    shouldInit = false;\n\n                if ((options.uploadUrl || (options.upload.async && options.upload.async.saveUrl)) &&\n                    options.upload !== false) {\n                        shouldInit = true;\n                }\n\n                return shouldInit;\n            },\n\n            _initUpload: function() {\n                var that = this,\n                    options = that.options,\n                    uploadElement = $(\"<input type='file' name='file'/>\").addClass(fileManagerStyles.upload),\n                    uploadOptions = extend(true, {\n                        async: {\n                             autoUpload: true,\n                             saveUrl: options.uploadUrl\n                        },\n                        dropZone: that.viewWrapper\n                    }, options.upload);\n\n                that.upload = new ui.Upload(uploadElement[0], uploadOptions);\n\n                that.upload.bind(UPLOAD, that._sendUploadPathParameter.bind(that));\n                that.upload.bind(SUCCESS, that._success.bind(that));\n\n                return that.upload;\n            },\n\n            _sendUploadPathParameter: function(ev) {\n                ev.data = extend(ev.data, { path: this.path() });\n            },\n\n            _success: function() {\n                this._view.widgetComponent.dataSource.read();\n            },\n\n            _clearUploadFilesList: function() {\n                var that = this,\n                    upload = that.upload;\n\n                if (upload) {\n                    upload.clearAllFiles();\n                }\n            },\n\n            _toggleUploadDropZone: function(zone) {\n                var that = this,\n                    upload = that.upload;\n\n                if (upload) {\n                    upload.setOptions({ dropZone: zone });\n                }\n            },\n\n            _binding: function(ev) {\n                if (this.trigger(DATABINDING, { source: \"view\", action: ev.action, items: ev.items, index: ev.index })) {\n                    ev.preventDefault();\n                }\n            },\n\n            _bound: function() {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(DATABOUND);\n            },\n\n            _createResizableSplitBar: function(cssClass) {\n                var splitBar = $(\"<div />\")\n                        .addClass(fileManagerStyles.splitBar)\n                        .addClass(fileManagerStyles.splitBarHorizontal)\n                        .addClass(cssClass),\n                    icon = $(\"<span />\").addClass(fileManagerStyles.splitBarIcon);\n\n                splitBar.append(icon);\n\n                splitBar.hover(function() {\n                    $(this).toggleClass(fileManagerStyles.splitBarHover);\n                });\n\n                return splitBar;\n            },\n\n            _initResizableNavigation: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarNavigation),\n                    contentWrapper = wrapper.find(DOT + fileManagerStyles.content),\n                    navigationWrapper = wrapper.find(DOT + fileManagerStyles.navigation),\n                    contentWrapperWidth,\n                    navigationWrapperWidth;\n\n                splitBar.insertAfter(navigationWrapper);\n\n                that._resizeDraggable.navigation = that.wrapper.find(splitBar)\n                    .end()\n                    .kendoResizable({\n                        handle: DOT + fileManagerStyles.splitBarNavigation,\n                        start: function() {\n                            contentWrapperWidth = contentWrapper.width();\n                            navigationWrapperWidth = navigationWrapper.width();\n                        },\n                        resize: function(e) {\n                            var delta = e.x.initialDelta;\n\n                            if (kendo.support.isRtl(wrapper)) {\n                                delta *= -1;\n                            }\n\n                            if (navigationWrapperWidth + delta < -2 || contentWrapperWidth - delta < -2) {\n                                return;\n                            }\n\n                            navigationWrapper.width(navigationWrapperWidth + delta);\n                        }\n                    }).getKendoResizable();\n            },\n\n            _initResizablePreview: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarPreview),\n                    contentWrapper = wrapper.find(DOT + fileManagerStyles.content),\n                    previewWrapper = wrapper.find(DOT + fileManagerStyles.preview),\n                    contentWrapperWidth,\n                    previewWrapperWidth;\n\n                if (!that.options.previewPane) {\n                    return;\n                }\n\n                splitBar.insertBefore(previewWrapper).hide();\n\n                that._resizeDraggable.preview = wrapper.find(splitBar)\n                    .end()\n                    .kendoResizable({\n                        handle: DOT + fileManagerStyles.splitBarPreview,\n                        start: function() {\n                            contentWrapperWidth = contentWrapper.width();\n                            previewWrapperWidth = previewWrapper.width();\n                        },\n                        resize: function(e) {\n                            var delta = e.x.initialDelta;\n\n                            if (kendo.support.isRtl(wrapper)) {\n                                delta *= -1;\n                            }\n\n                            if (previewWrapperWidth - delta < -2 || contentWrapperWidth + delta < -2) {\n                                return;\n                            }\n\n                            previewWrapper.width(previewWrapperWidth - delta);\n                        }\n                    }).getKendoResizable();\n            },\n\n            _resizable: function() {\n                var that = this,\n                    options = that.options;\n\n                that._resizeDraggable = {};\n\n                if (!options.resizable) {\n                    return;\n                }\n\n                that.wrapper.addClass(fileManagerStyles.resizable);\n\n                that._initResizableNavigation();\n\n                that._initResizablePreview();\n            },\n\n            view: function(type) {\n                var that = this,\n                    element = $('<div></div>'),\n                    options = that.options.views[type],\n                    explicitOptions = extend(true, {}, {\n                        dataSource: that._viewDataSource || that.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable,\n                        ariaLabel: that.options.messages.views[type + \"Label\"]\n                    });\n\n                if (type === undefined$1) {\n                    return that._view;\n                }\n\n                if (!ui.filemanager.ViewComponents[type]) {\n                    throw new Error(kendo.format(\"There is no {0} ViewComponent registered!\", type));\n                }\n\n                if (that._view && that._view.destroy) {\n                    that._view.destroy();\n                    that.viewWrapper.empty();\n                }\n\n                that._viewType = type;\n                that._view = new ui.filemanager.ViewComponents[type](element, options, explicitOptions);\n\n                that._view.bind(SELECT, that._select.bind(that));\n                that._view.bind(OPEN, that._open.bind(that));\n                that._view.bind(DATABINDING, that._binding.bind(that));\n                that._view.bind(DATABOUND, that._bound.bind(that));\n                that._view.bind(DROP, that._drop.bind(that));\n                that._view.bind(KEYDOWNACTION, that._keydownAction.bind(that));\n                that._view.bind(CANCEL, that._cancel.bind(that));\n\n                that._view.element.addClass(fileManagerStyles[type]);\n\n                that.viewWrapper\n                    .removeClass(\n                        Object.keys(ui.filemanager.ViewComponents).map(function(el) {\n                            return fileManagerStyles.view + \"-\" + el;\n                        }).join(\" \")\n                    )\n                    .addClass(fileManagerStyles.view + \"-\" + type);\n\n                that.viewWrapper.append(that._view.element);\n            },\n\n            executeCommand: function(args) {\n                var commandName = args.command,\n                    commandOptions = extend({ filemanager: this }, isPlainObject(args.options) ? args.options : { value: args.options }),\n                    command = new ui.filemanager.commands[commandName](commandOptions);\n\n                if (!this.trigger(EXECUTE, args)) {\n                    return command.exec();\n                }\n            },\n\n            _navigate: function(ev) {\n                var that = this,\n                    path = ev.path;\n\n                if (!that.trigger(NAVIGATE, { path: path })) {\n                    that.navigate(path);\n                }\n            },\n\n            _load: function(ev) {\n                var entry = this.dataSource.get(ev.entryId);\n                entry.load();\n            },\n\n            _select: function(ev) {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n\n                this.trigger(SELECT, { entries: ev.entries });\n            },\n\n            _open: function(ev) {\n                var that = this,\n                    entry = ev.entry;\n\n                that.trigger(OPEN, { entry: entry });\n\n                if (entry.isDirectory) {\n                    that._navigate({ path: entry.id });\n                }\n            },\n\n            _cancel: function() {\n                var that = this,\n                    commandStack = that._commandStack,\n                    command = commandStack.next();\n\n                commandStack.reject(command);\n                that.trigger(COMMAND, { status: \"cancel\", action: \"itemchange\", data: command.data });\n            },\n\n            _change: function(ev) {\n                var that = this,\n                    commandStack = that._commandStack,\n                    targetDataSource = ev.node ? ev.node.children : that.dataSource;\n\n                if (that.trigger(DATABINDING, { source: \"tree\", action: ev.action, items: ev.items, index: ev.index })) {\n                    return;\n                }\n\n                that.treeView._refreshDataSource(ev);\n\n                if (ev.action === \"remove\" || ev.action === \"itemchange\" || ev.action === \"add\") {\n                    if (commandStack.empty()) {\n                        targetDataSource.sync();\n                    } else {\n                        var command = commandStack.next();\n\n                        targetDataSource.sync().then(function(res) {\n                            commandStack.resolve(command);\n                            that.trigger(COMMAND, { status: \"success\", action: ev.action, data: command.data, response: res });\n                        }).fail(function(res) {\n                            commandStack.reject(command);\n                            that.trigger(COMMAND, { status: \"fail\", action: ev.action, data: command.data, response: res });\n                        });\n                    }\n                }\n\n                if (ev.action === \"remove\" && that._viewDataSource && that._viewDataSource.parent() && ev.items[0] === that._viewDataSource.parent()) {\n                    that._navigateToParent(ev.items[0]);\n                }\n\n                if (ev.action == \"itemchange\" && that._viewDataSource && that._viewDataSource.parent() && that.path().indexOf(ev.items[0].id) >= 0) {\n                    that._navigateToParent(ev.items[0]);\n                }\n\n                if (ev.action === \"itemchange\") {\n                    ev.items[0].loaded(false);\n                }\n            },\n\n            _navigateToParent: function(item) {\n                var that = this;\n                var parent = item.parentNode();\n                var parentNodePath = parent ? parent.id : \"\";\n                that._navigate({ path: parentNodePath });\n            },\n\n            _buildBreadcrumbPath: function(entry) {\n                var that = this,\n                    breadcrumb = that.breadcrumb,\n                    items = [];\n\n                while (entry) {\n                    items.push({\n                        id: entry.id,\n                        text: entry.name,\n                        path: entry.path\n                    });\n\n                    entry = entry.parentNode && entry.parentNode();\n                }\n\n                items.push({ type: \"rootItem\", id: \"\", text: \"\" });\n\n                breadcrumb.items(items.reverse());\n            },\n\n            _adjustDimensions: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    gridSelector = DOT + fileManagerStyles.grid,\n                    listViewSelector = DOT + fileManagerStyles.list,\n                    contentContainer = DOT + fileManagerStyles.contentContainer,\n                    totalHeight = wrapper.height(),\n                    toolbarHeight = 0,\n                    breadcrumbHeight = 0;\n\n                if (that.toolbar) {\n                    toolbarHeight = outerHeight(that.toolbar.wrapper);\n                }\n\n                if (that.breadcrumb) {\n                    breadcrumbHeight = outerHeight(that.breadcrumb.wrapper);\n                }\n\n                if (that.options.height !== \"auto\") {\n                    wrapper\n                        .find([gridSelector].join(\",\"))\n                        .height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n\n                    wrapper\n                        .find(listViewSelector)\n                        .parent()\n                        .height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n\n                    wrapper\n                        .find(contentContainer)\n                        .height(totalHeight - toolbarHeight);\n                }\n            },\n\n            _resize: function() {\n                this._adjustDimensions();\n                kendo.resize(this.element.children());\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                    that.header.empty();\n                    that._initToolbar();\n                    that.toolbar._tabIndex();\n                }\n\n                if (that.treeView) {\n                    that.treeView.destroy();\n                    that.navigation.empty();\n                    that.navigation.append(that._initTreeView().element);\n                }\n\n                if (that._view) {\n                    that.view(that._viewType || that.options.initialView);\n                }\n\n                that._initContextMenu();\n\n            },\n\n            refresh: function() {\n                var that = this,\n                    dataSource = that._viewDataSource || that.dataSource;\n\n                dataSource.read();\n            },\n\n            getSize: function() {\n                return kendo.dimensions(this.wrapper);\n            },\n\n            getSelected: function() {\n                var that = this,\n                    items = that._view.getSelected(),\n                    treeView = that.treeView;\n\n                if (items && items.length) {\n                    return items;\n                }\n\n                var item = treeView.getSelected();\n\n                if (item) {\n                    return [ that.dataSource.get(item.id) ];\n                }\n            },\n\n            path: function() {\n                return this._path || \"\";\n            },\n\n            navigate: function(path) {\n                var that = this,\n                    dataSource = that.dataSource,\n                    entry = dataSource.get(path.replace(/^\\//, \"\")),\n                    view = that._view,\n                    treeView = that.treeView,\n                    breadcrumb = that.breadcrumb,\n                    isRoot = path === \"\" || path === \"/\";\n\n                if (!entry && !isRoot) {\n                    window.console.warn('Error! Could not navigate to the folder at the requested path(' + path + '). Make sure that the parent folder of the target folder has already been loaded.');\n                    return;\n                }\n\n                that._path = path;\n\n                if (that.trigger(DATABINDING, { source: \"navigation\", action: \"rebind\", items: [entry] })) {\n                    return;\n                }\n\n                if (breadcrumb) {\n                    that._buildBreadcrumbPath(entry);\n                }\n\n                if (isRoot) {\n                    dataSource.sort([ that.folderSortOption, that.defaultSortOption ]);\n                    that._viewDataSource = dataSource;\n                    view.refresh(that._viewDataSource);\n                    treeView.treeView.select($());\n\n                    if (that.options.previewPane) {\n                        that._setPreviewPaneContent();\n                    }\n\n                    return;\n                }\n\n                if (entry.loaded && !entry.loaded()) {\n                    entry.load();\n                }\n\n                if (view) {\n                    that._viewDataSource = entry.children;\n                    that._viewDataSource._sort = [ that.folderSortOption, that.defaultSortOption ];\n                    view.refresh(that._viewDataSource);\n                }\n\n                if (treeView) {\n                    treeView.refresh(entry.id);\n                }\n\n                if (that.options.previewPane) {\n                    that._setPreviewPaneContent();\n                }\n            },\n\n            items: function() {\n                var that = this;\n\n                return that.treeView.widgetComponent.items().add(that._view.widgetComponent.items());\n            },\n\n            destroy: function() {\n                var that = this;\n\n                DataBoundWidget.fn.destroy.call(that);\n\n                that.dataSource\n                    .unbind(ERROR, that._errorHandler)\n                    .unbind(CHANGE, that._changeHandler);\n\n                if (that._resizeDraggable.navigation) {\n                    that._resizeDraggable.navigation.destroy();\n                    that._resizeDraggable.navigation = null;\n                }\n\n                if (that._resizeDraggable.preview) {\n                    that._resizeDraggable.preview.destroy();\n                    that._resizeDraggable.preview = null;\n                }\n\n                if (that.uploadDialog) {\n                    that.uploadDialog.destroy();\n                    that.uploadDialog = null;\n                }\n\n                if (that.upload) {\n                    that.upload.destroy();\n                    that.upload = null;\n                }\n\n                if (that.contextMenu) {\n                    that.contextMenu.destroy();\n                    that.contextMenu = null;\n                }\n\n                kendo.unbindResize(that._resizeHandler);\n\n                that.dataSource = null;\n                that._viewDataSource = null;\n\n                kendo.destroy(that.element);\n            }\n        });\n\n        ui.plugin(FileManager);\n    })(window.kendo.jQuery);\n\n}));\n"]}