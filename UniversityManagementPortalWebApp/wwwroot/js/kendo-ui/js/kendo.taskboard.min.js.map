{"version":3,"file":"kendo.taskboard.min.js","names":["factory","define","amd","$","kendo","Observable","encode","extend","TaskBoardCard","undefined$1","window","ui","htmlEncode","DOT","NS","CLICK","ACTION","preventDefault","ev","TaskBoardColumn","init","options","dataItem","that","this","_dataItem","sortableUniqueClass","sortableIdentifier","styles","sortableSuffix","_render","_attachEvents","states","isReorderable","_initSortable","fn","call","empty","container","addCard","cardHtml","append","edit","element","addClass","editColumn","_renderEditHeader","getDataItem","cards","children","template","data","headerText","ellipsis","getter","dataTextField","spacer","editTemplate","textbox","input","messages","newColumn","attr","actionButton","ref","icon","spriteCssClass","text","command","button","builtinButtons","name","rules","deleteColumn","defaultButtons","headerLabelId","guid","uid","css","width","header","cardsContainer","columnCards","appendTo","_renderHeader","buttons","_buildActionsHtml","html","setTimeout","find","trigger","actions","disabled","i","length","isPlainObject","Object","keys","_validateRules","tool","split","_actionClick","target","closest","value","_textboxBlur","on","bind","keyCode","ENTER","card","cardTitle","dirClass","isRtl","sortable","Sortable","ignore","ignoreDrag","connectWith","filter","hint","clone","dragHint","grabbingCursor","offsetWidth","height","offsetHeight","placeholder","dragPlaceholder","move","_move","start","_start","end","_end","change","_change","draggable","userEvents","unbind","_select","ignoreDragSelectors","event","is","columnElement","sender","parents","action","newIndex","oldIndex","destroy","off","TaskBoardNewColumn","taskboard","Column","NewColumn","jQuery","resources","contentTemplate","hbox","title","link","selectable","dataTitleField","body","dataDescriptionField","cardMenuButtonTemplate","headerActions","flatButton","cardMenuButton","actionsIcon","categoryColor","moveCursor","cardMenu","_resources","borderDir","isDisabled","toggleClass","dataCategoryField","color","get","categoryBorder","isSelectable","key","resource","field","cardResources","multiple","dataSource","view","resourceIndex","cardResource","valuePrimitive","dataValueField","dataIndex","resourceColor","dataColorField","result","push","_buildTemplate","format","headerTemplate","bodyTemplate","Card","ContextMenu","TaskBoardCardMenu","_overrideTemplates","_extendItems","_onSelect","_onOpen","_focus","templates","sprite","defaultItems","editCard","deleteCard","events","concat","item","items","_append","_extendItem","isEmptyObject","args","CardMenu","TaskBoardCommand","Class","_confirm","content","okText","cancel","confirm","taskboardOptions","editable","confirmation","fakePromise","Deferred","resolve","kendoConfirm","buttonLayout","open","AddColumnCommand","exec","column","columns","each","index","enableByColumn","addColumn","EditColumnCommand","DeleteColumnCommand","columnDS","columnsDataSource","deleteColumnConfirm","done","cancelChanges","remove","sync","SaveColumnCommand","columnSettings","val","set","CancelEditColumnCommand","MoveFocusCommand","columnIndex","cardElement","currentColumnIndex","direction","Math","max","min","_getColumnByElement","eq","_moveFromCardFocus","focusCard","currentIndex","seekFocusableCard","_getFocusableCard","focus","lastIndex","focusable","TaskBoardBaseCardCommand","_updateOrder","nextCard","dataOrderField","currentCard","cardIndex","map","idx","prevCard","SelectCardCommand","SaveChangesCommand","taskBoardOptions","receivedStatus","dataStatusField","targetColumn","_getColumn","activeElm","document","activeElement","pane","form","validate","then","DeleteCardCommand","deleteCardConfirm","fail","MoveCardCommand","EditCardCommand","_openPane","AddCardCommand","OpenPaneCommand","ClosePaneCommand","_closePane","SearchCommand","filters","searchOptions","search","operator","fields","_buildFilters","logic","Command","commands","Form","TaskBoardPane","_commandClick","fieldFormat","close","buttonTemplate","primary","footerButton","primaryButton","baseButton","delete","saveChanges","create","buttonsContainer","footerActions","footerActionButtons","_renderContent","_buildButtonsHtml","_buildHeaderTemplate","TaskBoardPreviewPane","previewPane","preview","TaskBoardEditPane","formSettings","label","buttonsTemplate","formLabelId","formData","TaskBoardCreatePane","columnStatusField","firstColumn","at","status","add","createNewCard","Pane","panes","Preview","Edit","Create","Keyboard","register","registerShortcut","selector","shortcut","isNaN","toUpperCase","charCodeAt","ctrlKey","shiftKey","altKey","handler","_handler","shortcuts","_getAction","_trigger","_compareShortcut","_getShortcutModifier","navigator","platform","indexOf","metaKey","KeyboardManager","TaskBoardStyles","wrapper","toolbar","columnsContainer","selected","Widget","DataSource","isArray","Array","GENERIC","MOVE","MOVE_START","MOVE_END","SELECT","EXECUTE","CHANGE","ERROR","DATABINDING","DATABOUND","COLUMNSDATABINDING","COLUMNSDATABOUND","TaskBoard","_sortableIdentifier","_wrapper","_columnsDataSource","_initResources","_dataSource","_initToolbar","_initCardMenu","_initKeyboard","autoBind","load","notify","reorderable","previewCard","description","defaultTools","type","overflow","component","componentOptions","commandOn","_columns","merge","itemsByStatus","itemsByColumn","columnElm","fetchPromises","_progress","fetch","when","apply","read","cardElm","getByUid","columnDataItem","columnByStatus","select","toggle","removeClass","_extendExecArgs","saveCard","model","_buildStates","_createNewModel","insert","before","executeCommand","saveColumn","keyboardManager","enable","readOnly","readOnlyByColumn","setDataSource","setColumnsDataSource","_renderCards","focusableElement","after","outerWidth","parseInt","ESC","headerElm","contentElm","colsContainer","tools","toolbarElm","toolbarOptions","_processTools","parentMessages","ToolBar","_toolbarClick","forEach","t","hidden","_isToolEnabled","toolName","found","isEditable","_isEditable","_isReorderable","_isSelectable","isReadOnly","isSearchable","_isSearchable","notLocalColumns","transport","LocalTransport","support","commandName","commandOptions","console","warn","cardDataItem","draggableEvent","elm","ns","sort","dir","schema","defaultValue","_columnsChangeHandler","_columnsErrorHandler","_columnsDataSourceChange","_error","statusField","_moveEnd","_moveStart","_changeOrder","_tabindex","_changeHandler","_errorHandler","_clearColumns","_renderCard","cardMenuOptions","showOn","alignToAnchor","_addResource","_resourceDataSource","resourceDS","progress","_registerShortcuts","DELETE","UP","DOWN","LEFT","RIGHT","closePane","plugin"],"sources":["kendo.taskboard.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.sortable', 'kendo.core', 'kendo.menu', 'kendo.dialog', 'kendo.form', 'kendo.data', 'kendo.toolbar', 'kendo.textbox'], factory) :\n    factory();\n})((function () {\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Observable = kendo.Observable,\n            encode = kendo.htmlEncode,\n            extend = $.extend,\n\n            DOT = \".\",\n            NS = DOT + \"kendoTaskBoardColumn\",\n\n            CLICK = \"click\",\n            BLUR = \"blur\",\n\n            MOVE = \"move\",\n            MOVE_START = \"moveStart\",\n            MOVE_END = \"moveEnd\",\n            CHANGE = \"change\",\n            ACTION = \"action\";\n\n        var TaskBoardColumnStyles = {\n            element: \"k-taskboard-column\",\n            header: \"k-taskboard-column-header\",\n            headerText: \"k-taskboard-column-header-text\",\n            ellipsis: \"k-text-ellipsis\",\n            spacer: \"k-spacer\",\n            actions: \"k-taskboard-column-header-actions\",\n            cardsContainer: \"k-taskboard-column-cards-container\",\n            columnCards: \"k-taskboard-column-cards\",\n            actionButton: \"k-taskboard-column-action-button\",\n            button: \"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n            card: \"k-taskboard-card\",\n            cardTitle: \"k-card-title\",\n            sortableSuffix: \"-kendosortable\",\n            textbox: \"k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n            input: \"k-input-inner\",\n            newColumn: \"k-taskboard-column-new\",\n            editColumn: \"k-taskboard-column-edit\",\n            disabled: \"k-disabled\",\n            dragPlaceholder: \"k-taskboard-drag-placeholder\",\n            dragHint: \"k-taskboard-drag-hint\",\n            ignoreDrag: \"k-taskboard-drag-ignore\",\n            grabbingCursor: \"k-cursor-grabbing\"\n        };\n\n        function preventDefault(ev) { ev.preventDefault(); }\n\n        var TaskBoardColumn = Observable.extend({\n            init: function(options, dataItem) {\n                var that = this;\n\n                that._dataItem = dataItem;\n                that.options = extend(true, {}, options);\n\n                that.sortableUniqueClass = that.options.sortableIdentifier + TaskBoardColumn.styles.sortableSuffix;\n                that._render();\n                that._attachEvents();\n\n                if (options.states.isReorderable) {\n                    that._initSortable();\n                }\n\n                Observable.fn.init.call(that);\n            },\n\n            empty: function() {\n                var that = this;\n                that.container.empty();\n            },\n\n            addCard: function(cardHtml) {\n                var that = this;\n                that.container.append(cardHtml);\n            },\n\n            edit: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles;\n\n                that.element.addClass(styles.editColumn);\n                that._renderEditHeader();\n            },\n\n            getDataItem: function() {\n                return this._dataItem;\n            },\n\n            cards: function() {\n                var that = this;\n\n                return that.container.children();\n            },\n\n            template: function (data) { return \"<div class=\\\"\" + (encode(data.styles.headerText)) + \" \" + (encode(data.styles.ellipsis)) + \"\\\">\" + (kendo.getter(data.dataTextField)(data)) + \"</div>\" +\n                      \"<span class=\\\"\" + (encode(data.styles.spacer)) + \"\\\"></span>\" +\n                      \"\" + (data.buttons); },\n\n            editTemplate: function (data) { return \"<div class=\\\"\" + (encode(data.styles.headerText)) + \" \" + (encode(data.styles.ellipsis)) + \"\\\">\" +\n                            \"<span class=\\\"\" + (encode(data.styles.textbox)) + \"\\\">\" +\n                                \"<input class=\\\"\" + (encode(data.styles.input)) + \"\\\" placeholder=\\\"\" + (encode(kendo.getter(data.dataTextField)(data) ? data.messages.editColumn : data.messages.newColumn)) + \"\\\" \" + (encode(kendo.attr(\"command\"))) + \"=\\\"SaveColumnCommand\\\" value=\\\"\" + (encode(kendo.getter(data.dataTextField)(data))) + \"\\\" />\" +\n                            '</span>' +\n                            '</div>' +\n                            \"<span class=\\\"\" + (encode(data.styles.spacer)) + \"\\\"></span>\" +\n                            \"\" + (data.buttons); },\n\n            actionButton: function (ref) {\n                              var styles = ref.styles;\n                              var icon = ref.icon;\n                              var spriteCssClass = ref.spriteCssClass;\n                              var text = ref.text;\n                              var command = ref.command;\n                              var options = ref.options;\n\n                              return \"<button class=\\\"\" + (encode(styles.actionButton)) + \" \" + (encode(styles.button)) + \"\\\" title=\\\"\" + (encode(text)) + \"\\\" \" + (encode(kendo.attr(\"command\"))) + \"=\\\"\" + (encode(command)) + \"\\\" \" + (options ? encode(kendo.attr('options')) + \"=\" + encode(options) : \"\") + \">\" +\n                            \"<i class=\\\"k-button-icon \" + (encode(icon)) + \" \" + (encode(spriteCssClass)) + \"\\\"></i>\" +\n                          '</button>';\n        },\n\n            builtinButtons: {\n                \"editColumn\": { name: \"editColumn\", icon: \"edit\", text: \"Edit Column\", command: \"EditColumnCommand\", rules: \"isEditable\" },\n                \"addCard\": { name: \"addCard\", icon: \"add\", text: \"Add Card\", command: \"AddCardCommand\", rules: \"isEditable\" },\n                \"deleteColumn\": { name: \"deleteColumn\", icon: \"close\", text: \"Delete Column\", command: \"DeleteColumnCommand\", rules: \"isEditable\" }\n            },\n\n            defaultButtons: [ \"editColumn\", \"addCard\", \"deleteColumn\" ],\n\n            _render: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    headerLabelId = kendo.guid(),\n                    element = $(\"<div class='\" + styles.element + \"'></div>\")\n                        .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                        .css({\n                            width: that.options.width\n                        })\n                        .attr(\"role\", \"list\").attr(\"aria-labelledby\", headerLabelId),\n                    header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                    cardsContainer = $(\"<div class='\" + styles.cardsContainer + \"'></div>\"),\n                    columnCards = $(\"<div class='\" + styles.columnCards + \"'></div>\");\n\n                that.header = header.appendTo(element).attr(\"id\", headerLabelId);\n\n                that._renderHeader();\n\n                cardsContainer.appendTo(element);\n                that.container = columnCards\n                                    .appendTo(cardsContainer)\n                                    .addClass(that.sortableUniqueClass);\n\n                that.element = element;\n            },\n\n            _renderHeader: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    options = that.options,\n                    template = options.template ? options.template : that.template;\n\n                that.header.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    buttons: that._buildActionsHtml(),\n                    dataTextField: options.dataTextField\n                }, that._dataItem)));\n            },\n\n            _renderEditHeader: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    options = that.options,\n                    template = options.editTemplate ? options.editTemplate : that.editTemplate;\n\n                that.header.html(\"\");\n\n                that.header.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    messages: options.messages,\n                    buttons: that._buildActionsHtml(),\n                    dataTextField: options.dataTextField\n                }, that._dataItem)));\n\n                setTimeout(function() {\n                    that.header.find(\"input\").trigger(\"focus\");\n                }, 0);\n\n                that.header.find(DOT + styles.actions).addClass(styles.disabled);\n            },\n\n            _buildActionsHtml: function() {\n                var that = this,\n                    options = that.options,\n                    messages = options.messages,\n                    buttons = options.buttons || that.defaultButtons,\n                    styles = TaskBoardColumn.styles,\n                    html = \"<div class='\" + styles.actions + \"'>\";\n\n                for (var i = 0; i < buttons.length; i++) {\n                    var button = buttons[i];\n                    button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                    if (typeof button === \"string\") {\n                        button = extend(true, {},\n                            that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                            { text: messages[button] || button }\n                        );\n                    } else if ($.isPlainObject(button) && button.name) {\n                        button = extend(true, button,\n                            { text: messages[button.name] }\n                        );\n                    }\n\n                    if (!that._validateRules(button)) {\n                        continue;\n                    }\n\n                    var icon = button.icon ? \"k-icon k-i-\" + button.icon : \"\";\n\n                    button.icon = icon;\n                    button.spriteCssClass = button.spriteCssClass || \"\";\n\n                    html += kendo.template(that.actionButton)(extend(true, {}, {\n                        styles: styles,\n                        options: false\n                    }, button));\n                }\n\n                html += \"</div>\";\n\n                return html;\n            },\n\n            _validateRules: function(tool) {\n                var that = this,\n                    states = that.options.states,\n                    rules = tool.rules ? tool.rules.split(\";\") : [];\n\n                if (!rules.length) {\n                    return true;\n                }\n\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _actionClick: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                    command = target.attr(kendo.attr(\"command\")),\n                    options = target.attr(kendo.attr(\"options\"));\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n\n            _textboxBlur: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                    command = target.attr(kendo.attr(\"command\")),\n                    options = target.attr(kendo.attr(\"options\"));\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.header.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.actionButton,\n                    that._actionClick.bind(that));\n\n                that.header.on(BLUR + NS,\n                    DOT + TaskBoardColumn.styles.input,\n                    that._textboxBlur.bind(that));\n\n                that.header.on(\"keyup\" + NS,\n                    DOT + TaskBoardColumn.styles.input,\n                    function(ev) {\n                        if (ev.keyCode === kendo.keys.ENTER) {\n                            that._textboxBlur(ev);\n                        }\n                    }\n                );\n\n                if (that.container) {\n                    that.container.on(CLICK + NS,\n                        DOT + TaskBoardColumn.styles.card + \" [\" + kendo.attr(\"command\") + \"]\",\n                        that._actionClick.bind(that));\n\n                    that.container.on(CLICK + NS,\n                        DOT + TaskBoardColumn.styles.card + \" a.\" + TaskBoardColumn.styles.cardTitle,\n                        preventDefault);\n\n                }\n            },\n\n            _initSortable: function() {\n                var that = this,\n                    isRtl = that.options.states.isRtl,\n                    dirClass = isRtl ? \" k-rtl\" : \"\",\n                    container = that.container;\n\n                if (!that.container) {\n                    return;\n                }\n\n                that.sortable = new ui.Sortable(container, {\n                    ignore: DOT + TaskBoardColumn.styles.ignoreDrag + \" *\",\n                    connectWith: DOT + that.sortableUniqueClass,\n                    filter: DOT + TaskBoardColumn.styles.card,\n                    hint: function(element) {\n                        return element.clone()\n                            .addClass(TaskBoardColumn.styles.dragHint + \" \" + TaskBoardColumn.styles.grabbingCursor + dirClass)\n                            .css({\n                            width: element[0].offsetWidth,\n                            height: element[0].offsetHeight\n                        });\n                    },\n                    placeholder: function(element) {\n                        return $(\"<div></div>\")\n                            .addClass(TaskBoardColumn.styles.dragPlaceholder)\n                            .css({\n                                height: element[0].offsetHeight\n                            });\n                    },\n                    move: that._move.bind(that),\n                    start: that._start.bind(that),\n                    end: that._end.bind(that),\n                    change: that._change.bind(that)\n                });\n\n                that.sortable.draggable.userEvents.unbind(\"select\");\n                that.sortable.draggable.userEvents.bind(\"select\", that._select.bind(that));\n            },\n\n            _select: function(ev) {\n                var ignoreDragSelectors = TaskBoardColumn.ignoreDragSelectors;\n                var target = $(ev.event.target);\n\n                for (var i = 0; i < ignoreDragSelectors.length; i++) {\n                    if (target.is(ignoreDragSelectors[i])) {\n                        ev.preventDefault();\n                        break;\n                    }\n                }\n            },\n\n            _move: function(ev) {\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n                this.trigger(MOVE, ev);\n            },\n\n            _start: function(ev) {\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n                this.trigger(MOVE_START, ev);\n            },\n\n            _end: function(ev) {\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n                this.trigger(MOVE_END, ev);\n            },\n\n            _change: function(ev) {\n                var that = this;\n\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n\n                that.trigger(CHANGE, ev);\n\n                if ((ev.action === \"receive\" && ev.newIndex >= 0) || (ev.action === \"sort\" && ev.newIndex !== ev.oldIndex)) {\n                    that.trigger(ACTION, {\n                        command: \"MoveCardCommand\",\n                        options: ev\n                    });\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.header.off(NS);\n                that.container.off(NS);\n\n                if (that.sortable) {\n                    that.sortable.destroy();\n                }\n            }\n        });\n\n        var TaskBoardNewColumn = TaskBoardColumn.extend({\n            _render: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    element = $(\"<div class='\" + styles.element + \"'></div>\").addClass(styles.newColumn).attr(kendo.attr(\"uid\"), that._dataItem.uid),\n                    header = $(\"<div class='\" + styles.header + \"'></div>\");\n\n                that.header = header.appendTo(element);\n\n                that._renderEditHeader();\n\n                that.element = element;\n            }\n        });\n\n        extend(kendo.ui, {\n            taskboard: {\n                Column: TaskBoardColumn,\n                NewColumn: TaskBoardNewColumn\n            }\n        });\n\n        extend(true, kendo.ui.taskboard.Column, {\n            styles: TaskBoardColumnStyles,\n            ignoreDragSelectors: [\"img\"]\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Observable = kendo.Observable,\n            encode = kendo.htmlEncode,\n            extend = $.extend;\n\n        var TaskBoardCardStyles = {\n            element: \"k-taskboard-card\",\n            card: \"k-card\",\n            header: \"k-card-header\",\n            hbox: \"k-hbox\",\n            title: \"k-card-title\",\n            link: \"k-link\",\n            spacer: \"k-spacer\",\n            button: \"k-button\",\n            cardMenuButton: \"k-taskboard-card-menu-button k-icon-button\",\n            flatButton: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n            body: \"k-card-body\",\n            actionsIcon: \"k-icon k-i-more-vertical\",\n            moveCursor: \"k-cursor-move\",\n            categoryBorder: \"k-taskboard-card-category\",\n            headerActions: \"k-card-header-actions\",\n            disabled: \"k-disabled\"\n        };\n\n        var TaskBoardCard = Observable.extend({\n            init: function(options, dataItem, resources) {\n                var that = this;\n\n                that._dataItem = dataItem;\n                that.resources = resources;\n\n                that.options = extend(true, {}, options);\n\n                that._render();\n\n                Observable.fn.init.call(that);\n            },\n\n            contentTemplate: function (data) { return \"<div class=\\\"\" + (encode(data.styles.header)) + \" \" + (encode(data.styles.hbox)) + \"\\\">\" +\n                \"<a class=\\\"\" + (encode(data.styles.title)) + \" \" + (encode(data.styles.link)) + \"\\\" href=\\\"#\\\" \" + (data.selectable ? kendo.attr(\"command\") + '=SelectCardCommand' : '') + \">\" + (encode(kendo.getter(data.dataTitleField)(data))) + \"</a>\" +\n                \"<span class=\\\"\" + (encode(data.styles.spacer)) + \"\\\"></span>\" +\n                \"\" + (data.cardMenuButton) +\n            '</div>' +\n            \"<div class=\\\"\" + (encode(data.styles.body)) + \"\\\"><p>\" + (encode(kendo.getter(data.dataDescriptionField)(data))) + \"</p></div>\"; },\n\n            cardMenuButtonTemplate: function (ref) {\n                var styles = ref.styles;\n\n                return \"<div class=\\\"\" + (encode(styles.headerActions)) + \"\\\"><button aria-label=\\\"menu\\\" class=\\\"\" + (encode(styles.button)) + \" \" + (encode(styles.flatButton)) + \" \" + (encode(styles.cardMenuButton)) + \"\\\">\" +\n                                        \"<span class=\\\"k-button-icon \" + (encode(styles.actionsIcon)) + \"\\\"></span>\" +\n                                    '</button></div>';\n        },\n\n            _render: function() {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoardCard.styles,\n                    template = options.template || that.contentTemplate,\n                    element = $(\"<div class='\" + styles.element + \" \" + styles.card + \" \" + styles.moveCursor + \"'></div>\"),\n                    cardMenuButtonTemplate = options.cardMenu ? that.cardMenuButtonTemplate : \"\",\n                    resources = that._resources(that._dataItem),\n                    borderDir = options.states.isRtl ? \"borderRightColor\" : \"borderLeftColor\",\n                    categoryColor;\n\n                element\n                    .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                    .attr(\"aria-disabled\", !options.states.isDisabled)\n                    .attr(\"role\", \"listitem\")\n                    .toggleClass(styles.disabled, options.states.isDisabled);\n\n                categoryColor = (resources[options.dataCategoryField] && resources[options.dataCategoryField].color) ||\n                                    that._dataItem.get(options.dataCategoryField);\n\n                if (categoryColor) {\n                    element.addClass(styles.categoryBorder).css(borderDir, categoryColor);\n                }\n\n                element.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    cardMenuButton: kendo.template(cardMenuButtonTemplate)({ styles: styles }),\n                    selectable: options.states.isSelectable,\n                    resources: resources,\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField\n                }, that._dataItem)));\n\n                that.element = element;\n            },\n\n            _resources: function(card) {\n                var that = this,\n                    resources = {};\n\n                if (!that.resources) {\n                    return resources;\n                }\n\n                for (var key in that.resources) {\n                    var resource = that.resources[key];\n                    var field = resource.field;\n                    var cardResources = kendo.getter(field)(card);\n\n                    if (!cardResources) {\n                        continue;\n                    }\n\n                    if (!resource.multiple) {\n                        cardResources = [cardResources];\n                    }\n\n                    var data = resource.dataSource.view();\n\n                    for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                        var cardResource = null;\n\n                        var value = cardResources[resourceIndex];\n\n                        if (!resource.valuePrimitive) {\n                            value = kendo.getter(resource.dataValueField)(value);\n                        }\n\n                        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                            if (data[dataIndex].get(resource.dataValueField) == value) {\n                                cardResource = data[dataIndex];\n                                break;\n                            }\n                        }\n\n                        if (cardResource !== null) {\n                            var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                            var result = {\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                text: kendo.getter(resource.dataTextField)(cardResource),\n                                value: value,\n                                color: resourceColor\n                            };\n\n                            if (resource.multiple) {\n                                if (resources[resource.field]) {\n                                    resources[resource.field].push(result);\n                                } else {\n                                    resources[resource.field] = [result];\n                                }\n                            } else {\n                                resources[resource.field] = result;\n                            }\n                        }\n                    }\n                }\n                return resources;\n            },\n\n            _buildTemplate: function() {\n                var that = this,\n                    options = that.options,\n                    headerTemplate = kendo.format(that.headerTemplate, options.dataTitleField),\n                    bodyTemplate = kendo.format(that.bodyTemplate, options.dataDescriptionField);\n\n                return headerTemplate + bodyTemplate;\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            Card: TaskBoardCard\n        });\n\n        extend(true, kendo.ui.taskboard.Card, { styles: TaskBoardCardStyles });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            template = kendo.template,\n            ContextMenu = kendo.ui.ContextMenu,\n            encode = kendo.htmlEncode,\n\n            ACTION = \"action\";\n\n        var TaskBoardCardMenu = ContextMenu.extend({\n            init: function(element, options) {\n                var that = this;\n\n                ContextMenu.fn.init.call(that, element, options);\n\n                that._overrideTemplates();\n                that._extendItems();\n\n                that.bind(\"select\", that._onSelect.bind(that));\n                that.bind(\"open\", that._onOpen.bind(that));\n                that.bind(\"activate\", that._focus.bind(that));\n            },\n\n            _overrideTemplates: function() {\n                this.templates.sprite = function (ref) {\n                    var spriteCssClass = ref.spriteCssClass;\n\n                    return (\"\" + (spriteCssClass ? '<span class=\"' + encode(spriteCssClass) + '\"></span>' : ''));\n                };\n            },\n\n            defaultItems: {\n                \"editCard\": { name: \"editCard\", text: \"Edit card\", icon: \"edit\", command: \"EditCardCommand\", rules: \"isEditable\" },\n                \"deleteCard\": { name: \"deleteCard\", text: \"Delete card\", icon: \"delete\", command: \"DeleteCardCommand\", rules: \"isEditable\" }\n            },\n\n            events: ContextMenu.fn.events.concat([\n                ACTION\n            ]),\n\n            _extendItems: function() {\n                var that = this,\n                    items = that.options.items,\n                    item, isBuiltInTool;\n\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n\n                        if ($.isPlainObject(item)) {\n                            that._append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._append(item);\n                        } else if (typeof(item) === \"string\") {\n                            item = { name: item, text: item, spriteCssClass: item, command: item + \"Command\" };\n                            that._append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._append(item);\n                    }\n                }\n            },\n\n            _append: function(item) {\n                var that = this;\n\n                that._extendItem(item);\n\n                if (that._validateRules(item)) {\n                    that.append(item);\n                }\n            },\n\n            _extendItem: function(item) {\n                var that = this,\n                    messages = that.options.messages,\n                    icon = item.icon ? \"k-icon k-i-\" + item.icon : \"\",\n                    attr = {};\n\n                attr[kendo.attr(\"command\")] = item.command;\n\n                if (item.options) {\n                    attr[kendo.attr(\"options\")] = item.options;\n                }\n\n                extend(item, {\n                    text: messages[item.name],\n                    spriteCssClass: icon + \" \" + item.spriteCssClass || \"\",\n                    attr: attr,\n                    uid: kendo.guid()\n                });\n            },\n\n            _validateRules: function(tool) {\n                var that = this,\n                    states = that.options.states,\n                    rules = tool.rules ? tool.rules.split(\";\") : [];\n\n                if (!rules.length) {\n                    return true;\n                }\n\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _onSelect: function(ev) {\n                var command = $(ev.item).attr(kendo.attr(\"command\")),\n                    options = $(ev.item).attr(kendo.attr(\"options\")),\n                    target = $(ev.target);\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                this.action({\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n\n            _onOpen: function(ev) {\n                var menu = ev.sender,\n                    items = menu.options.items;\n\n                if (!items && $.isEmptyObject(this.defaultItems)) {\n                    ev.preventDefault();\n                }\n            },\n\n            _focus: function(ev) {\n                if (ev.sender) {\n                    ev.sender.element.trigger(\"focus\");\n                }\n            },\n\n            action: function(args) {\n                this.trigger(ACTION, args);\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            CardMenu: TaskBoardCardMenu\n        });\n\n        })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n            var kendo = window.kendo,\n                extend = $.extend,\n                isPlainObject = $.isPlainObject,\n                Class = kendo.Class;\n\n            var TaskBoardCommand = Class.extend({\n                init: function(options) {\n                    this.options = options;\n                    this.taskboard = options.taskboard;\n                },\n                _confirm: function(title, content, okText, cancel) {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskboardOptions = taskboard.options,\n                        confirm;\n\n                    if (isPlainObject(taskboardOptions.editable) && taskboardOptions.editable.confirmation === false ) {\n                        var fakePromise = $.Deferred();\n                        fakePromise.resolve();\n                        return fakePromise;\n                    }\n\n                    confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                        title: title,\n                        content: content,\n                        messages: {\n                            okText: okText,\n                            cancel: cancel\n                        },\n                        buttonLayout: \"normal\"\n                    })).data(\"kendoConfirm\");\n\n                    confirm.open();\n\n                    setTimeout(function() {\n                        confirm.element.trigger(\"focus\");\n                    });\n\n                    return confirm.result;\n                }\n            });\n\n            // Column commands\n            var AddColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard;\n\n                    if (taskboard.trigger(\"editColumn\", { column: null })) {\n                        return;\n                    }\n\n                    taskboard.columns().each(function(index, column) {\n                        taskboard.enableByColumn(column, false);\n                    });\n                    taskboard.addColumn();\n                }\n            });\n\n            var EditColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard;\n\n                    if (taskboard.trigger(\"editColumn\", { column: options.column })) {\n                        return;\n                    }\n\n                    taskboard.columns().each(function(index, column) {\n                        taskboard.enableByColumn(column, false);\n                    });\n                    taskboard.editColumn(options.columnElement);\n                }\n            });\n\n            var DeleteColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard,\n                        taskboardOptions = taskboard.options,\n                        messages = taskboardOptions.messages,\n                        columnDS = taskboard.columnsDataSource;\n\n                    var result = that._confirm(messages.deleteColumn, messages.deleteColumnConfirm, messages[\"delete\"], messages.cancel);\n\n                    result.done(function() {\n                        if (taskboard.trigger(\"deleteColumn\", { column: options.column })) {\n                            taskboard.dataSource.cancelChanges();\n                            return;\n                        }\n\n                        columnDS.remove(options.column);\n                        columnDS.sync();\n                    });\n                }\n            });\n\n            var SaveColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard,\n                        columnSettings = taskboard.options.columnSettings,\n                        columnDS = taskboard.columnsDataSource,\n                        column = options.column,\n                        text = options.target.val();\n\n                    if (taskboard.trigger(\"saveColumn\", { column: options.column })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    column.set(columnSettings.dataTextField, text);\n                    columnDS.sync();\n                }\n            });\n\n            var CancelEditColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        columnDS = taskboard.columnsDataSource;\n\n                    columnDS.cancelChanges();\n                }\n            });\n\n            //Move focus command\n            var MoveFocusCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options,\n                        cardElement = options.cardElement,\n                        columnElement = options.columnElement,\n                        columns = taskboard.columns(),\n                        currentColumnIndex = columnElement.index(),\n                        direction = options.value,\n                        columnIndex, column;\n\n                    switch (direction) {\n                        case \"left\":\n                            columnIndex = Math.max(0, currentColumnIndex - 1);\n                            break;\n                        case \"right\":\n                            columnIndex = Math.min(columns.length - 1, currentColumnIndex + 1);\n                            break;\n                        default:\n                            columnIndex = currentColumnIndex;\n                            break;\n                    }\n\n                    that.columns = columns;\n                    that.columnIndex = columnIndex;\n                    that.column = column = taskboard._getColumnByElement(columns.eq(columnIndex));\n                    that.cards = column.cards();\n\n                    if (cardElement) {\n                        that._moveFromCardFocus(direction, cardElement);\n                    } else if (columnElement && direction === \"down\") {\n                        that.cards.eq(0).trigger(\"focus\");\n                    } else {\n                        columns.eq(columnIndex).trigger(\"focus\");\n                    }\n                },\n                _moveFromCardFocus: function(direction, cardElement) {\n                    var that = this,\n                        currentIndex = cardElement.index(),\n                        focusCard, index, seekFocusableCard = false;\n\n                    switch (direction) {\n                        case \"up\":\n                            index = currentIndex - 1;\n                            break;\n                        case \"down\":\n                            index = currentIndex + 1;\n                            break;\n                        default:\n                            seekFocusableCard = true;\n                            index = currentIndex;\n                            break;\n                    }\n\n                    focusCard = that.cards.eq(index);\n\n                    if (!focusCard.length && seekFocusableCard) {\n                        focusCard = that._getFocusableCard(index, direction);\n                    }\n\n                    if (index >= 0) {\n                        focusCard.trigger(\"focus\");\n                    } else {\n                        that.options.columnElement.focus();\n                    }\n                },\n                _getFocusableCard: function(index, direction) {\n                    var that = this,\n                        lastIndex = that.cards.length - 1,\n                        focusable = that.cards.eq(Math.min(index, lastIndex));\n\n                    if (focusable.length) {\n                        return focusable;\n                    }\n\n                    if (that.columnIndex <= 0 || that.columnIndex >= that.columns.length - 1) {\n                        return;\n                    }\n\n                    switch (direction) {\n                        case \"left\":\n                            that.columnIndex = Math.max(0, that.columnIndex - 1);\n                            break;\n                        case \"right\":\n                            that.columnIndex = Math.min(that.columns.length - 1, that.columnIndex + 1);\n                            break;\n                    }\n\n                    that.column = that.taskboard._getColumnByElement(that.columns.eq(that.columnIndex));\n                    that.cards = that.column.cards();\n\n                    return that._getFocusableCard(index, direction);\n\n                }\n            });\n\n            // Card commands\n            var TaskBoardBaseCardCommand = TaskBoardCommand.extend({\n                _updateOrder: function(column, currentIndex) {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskBoardOptions = taskboard.options,\n                        dataOrderField = taskBoardOptions.dataOrderField,\n                        options = that.options,\n                        currentCard = options.card,\n                        cardIndex = options.cardElement ? options.cardElement.index() : column.cards().length,\n                        newIndex = currentIndex,\n                        cards = column.cards().map(function(idx, card) {\n                            return taskboard.dataItem(card);\n                        }),\n                        prevCard = cards[cardIndex - 1],\n                        nextCard;\n\n                        currentCard.set(dataOrderField, newIndex);\n\n                        if (prevCard && prevCard.get(dataOrderField) >= currentCard.get(dataOrderField)) {\n                            currentCard.set(dataOrderField, prevCard.get(dataOrderField) + 1);\n                        }\n\n                        for (var i = newIndex + 1; i < cards.length; i++) {\n                            nextCard = cards[i];\n\n                            if (nextCard.get(dataOrderField) <= currentCard.get(dataOrderField)) {\n                                nextCard.set(dataOrderField, currentCard.get(dataOrderField) + 1);\n                                currentCard = nextCard;\n                            } else {\n                                break;\n                            }\n                        }\n                }\n            });\n\n            var SelectCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options,\n                        cardElement = options.cardElement;\n\n                    taskboard._select(cardElement, true);\n                    cardElement.focus();\n                }\n            });\n\n            var SaveChangesCommand = TaskBoardBaseCardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskBoardOptions = taskboard.options,\n                        options = that.options,\n                        receivedStatus = options.card.get(taskBoardOptions.dataStatusField),\n                        targetColumn = taskboard._getColumn(receivedStatus),\n                        activeElm = $(document.activeElement);\n\n                    if (activeElm.length) {\n                        activeElm.trigger(\"change\");\n                    }\n\n                    if (taskboard.pane && taskboard.pane.form && !taskboard.pane.form.validate()) {\n                        return;\n                    }\n\n                    if (taskboard.trigger(\"saveCard\", { card: options.card })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    if (targetColumn && taskBoardOptions.dataOrderField) {\n                        that._updateOrder(targetColumn, options.card.get(taskBoardOptions.dataOrderField));\n                    }\n\n                    taskboard.dataSource.sync().then(function() {\n                        taskboard.columns().eq(0).trigger(\"focus\");\n                    });\n                }\n            });\n\n            var DeleteCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        messages = taskboard.options.messages,\n                        options = that.options;\n\n                    var result = that._confirm(messages.deleteCard, messages.deleteCardConfirm, messages[\"delete\"], messages.cancel);\n\n                    result\n                        .done(function() {\n                            if (taskboard.trigger(\"deleteCard\", { card: options.card })) {\n                                taskboard.dataSource.cancelChanges();\n                                return;\n                            }\n\n                            taskboard.dataSource.remove(options.card);\n                            taskboard.dataSource.sync().then(function() {\n                                taskboard.columns().eq(0).trigger(\"focus\");\n                            });\n                        })\n                        .fail(function() {\n                            options.cardElement.trigger(\"focus\");\n                        });\n                }\n            });\n\n            var MoveCardCommand = TaskBoardBaseCardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskBoardOptions = taskboard.options,\n                        columnSettings = taskBoardOptions.columnSettings,\n                        options = that.options,\n                        receivedStatus = options.column.get(columnSettings.dataStatusField);\n\n                    options.card.set(taskBoardOptions.dataStatusField, receivedStatus);\n\n                    if (taskBoardOptions.dataOrderField) {\n                        that._updateOrder(taskboard._getColumn(receivedStatus), options.newIndex);\n                    }\n\n                    taskboard.dataSource.sync();\n                }\n            });\n\n            var EditCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options;\n\n                    if (taskboard.trigger(\"editCard\", { card: options.card })) {\n                        return;\n                    }\n\n                    taskboard._openPane(extend({\n                        pane: \"Edit\"\n                    }, options));\n                }\n            });\n\n            var AddCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options;\n\n                    if (taskboard.trigger(\"editCard\", { card: null })) {\n                        return;\n                    }\n                    taskboard.dataSource.cancelChanges();\n                    taskboard._openPane(extend({\n                        pane: \"Create\"\n                    }, options));\n                }\n            });\n\n            // Pane commands\n            var OpenPaneCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard;\n\n                    taskboard._openPane({\n                        pane: options.value,\n                        card: options.card,\n                        cardElement: options.cardElement,\n                        column: options.column,\n                        columnElement: options.columnElement\n                    });\n                }\n            });\n\n            var ClosePaneCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard;\n\n                    taskboard._closePane();\n                    taskboard.dataSource.cancelChanges();\n                }\n            });\n\n            // Search command\n\n            var SearchCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        value = that.options.value,\n                        taskboard = that.taskboard,\n                        taskboardOptions = taskboard.options,\n                        searchOptions = taskboardOptions.search,\n                        operator = searchOptions.operator,\n                        fields = (searchOptions && searchOptions.fields) || [ taskboardOptions.dataTitleField, taskboardOptions.dataDescriptionField ],\n                        filters;\n\n                    filters = that._buildFilters(fields, operator, value);\n\n                    taskboard.dataSource.filter(filters);\n                },\n                _buildFilters: function(fields, operator, value) {\n                    var filters = fields.map(function(field) {\n                        return { field: field, operator: operator, value: value };\n                    });\n\n                    return { logic: \"or\", filters: filters };\n                }\n            });\n\n            extend(kendo.ui.taskboard, {\n                Command: TaskBoardCommand,\n                commands: {\n                    AddColumnCommand: AddColumnCommand,\n                    EditColumnCommand: EditColumnCommand,\n                    DeleteColumnCommand: DeleteColumnCommand,\n                    SaveColumnCommand: SaveColumnCommand,\n                    CancelEditColumnCommand: CancelEditColumnCommand,\n                    OpenPaneCommand: OpenPaneCommand,\n                    ClosePaneCommand: ClosePaneCommand,\n                    SelectCardCommand: SelectCardCommand,\n                    MoveFocusCommand: MoveFocusCommand,\n                    SaveChangesCommand: SaveChangesCommand,\n                    DeleteCardCommand: DeleteCardCommand,\n                    MoveCardCommand: MoveCardCommand,\n                    EditCardCommand: EditCardCommand,\n                    AddCardCommand: AddCardCommand,\n                    SearchCommand: SearchCommand\n                }\n            });\n\n        })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            Observable = kendo.Observable,\n            encode = kendo.htmlEncode,\n\n            Form = kendo.ui.Form,\n\n            DOT = \".\",\n            NS = DOT + \"kendoTaskBoardPane\",\n\n            ACTION = \"action\",\n            CLICK = \"click\";\n\n        var TaskBoardPaneStyles = {\n            element: \"k-taskboard-pane\",\n            edit: \"k-taskboard-edit-pane\",\n            preview: \"k-taskboard-preview-pane\",\n            header: \"k-taskboard-pane-header\",\n            headerText: \"k-taskboard-pane-header-text\",\n            spacer: \"k-spacer\",\n            headerActions: \"k-taskboard-pane-header-actions\",\n            flatButton: \"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n            content: \"k-taskboard-pane-content\",\n            footerActions: \"k-taskboard-pane-actions\",\n            footerActionButtons: \"k-actions k-hstack k-justify-content-end\",\n            footerButton: \"k-button k-button-md k-rounded-md k-button-solid\",\n            baseButton: \"k-button-solid-base\",\n            primaryButton: \"k-button-solid-primary\"\n        };\n\n        var TaskBoardPane = Observable.extend({\n            init: function(taskboard, options, dataItem, resources) {\n                var that = this;\n\n                that.taskboard = taskboard;\n                that._dataItem = dataItem;\n                that.resources = resources;\n                that.options = extend(true, {}, options);\n\n                that._render();\n\n                that.element.on(CLICK + NS,\n                    \"[\" + kendo.attr(\"command\") + \"]\",\n                    that._commandClick.bind(that));\n\n                Observable.fn.init.call(that);\n            },\n            headerTemplate: function (ref) {\n                var styles = ref.styles;\n                var messages = ref.messages;\n                var fieldFormat = ref.fieldFormat;\n\n                return \"<div class=\\\"\" + (encode(styles.headerText)) + \"\\\">\" + fieldFormat + \"</div>\" +\n                            \"<span class=\\\"\" + (encode(styles.spacer)) + \"\\\"></span>\" +\n                            \"<div class=\\\"\" + (encode(styles.headerActions)) + \"\\\">\" +\n                                \"<button class=\\\"\" + (encode(styles.flatButton)) + \"\\\" title=\\\"\" + (encode(messages.close)) + \"\\\" \" + (encode(kendo.attr(\"command\"))) + \"=\\\"ClosePaneCommand\\\">\" +\n                                    '<span class=\"k-button-icon k-icon k-i-close\"></span>' +\n                                '</button>' +\n                            '</div>';\n        },\n            buttonTemplate: function (ref) {\n                                var styles = ref.styles;\n                                var icon = ref.icon;\n                                var spriteCssClass = ref.spriteCssClass;\n                                var text = ref.text;\n                                var primary = ref.primary;\n                                var command = ref.command;\n                                var options = ref.options;\n\n                                return \"<button class=\\\"\" + (encode(styles.footerButton)) + \" \" + (primary ? encode(styles.primaryButton) : encode(styles.baseButton)) + \"\\\" title=\\\"\" + (encode(text)) + \"\\\" \" + (encode(kendo.attr(\"command\"))) + \"=\\\"\" + (encode(command)) + \"\\\" \" + (encode(kendo.attr(\"options\"))) + \"=\\\"\" + (encode(options)) + \"\\\">\" +\n                                \"<span class=\\\"k-button-icon \" + (encode(icon)) + \" \" + (encode(spriteCssClass)) + \"\\\"></span>\" +\n                                \"<span class=\\\"k-button-text\\\">\" + (encode(text)) + \"</span>\" +\n                            '</button>';\n        },\n            contentTemplate: function () { return \"\"; },\n            builtinButtons: {\n                \"edit\": { name: \"edit\", icon: \"edit\", text: \"Edit\", primary: true, command: \"EditCardCommand\", rules: \"isEditable\" },\n                \"delete\": { name: \"delete\", icon: \"delete\", text: \"Delete\", command: \"DeleteCardCommand\", rules: \"isEditable\" },\n                \"cancel\": { name: \"cancel\", text: \"Cancel\", command: \"ClosePaneCommand\" },\n                \"saveChanges\": { name: \"saveChanges\", text: \"Save\", command: \"SaveChangesCommand\", primary: true, rules: \"isEditable\" },\n                \"create\": { name: \"create\", text: \"Create\", command: \"SaveChangesCommand\", primary: true, rules: \"isEditable\" }\n            },\n            defaultButtons: [],\n            _render: function() {\n                var that = this,\n                    styles = TaskBoardPane.styles,\n                    element = $(\"<div class='\" + styles.element + \"'></div>\"),\n                    header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                    content = $(\"<div class='\" + styles.content + \"'></div>\"),\n                    buttonsContainer = $(\"<div class='\" + styles.footerActions + \" \" + styles.footerActionButtons + \"'></div>\");\n\n                that.header = header.appendTo(element);\n                that._renderHeader();\n                that.content = content.appendTo(element);\n                that._renderContent();\n                that.buttonsContainer = buttonsContainer.appendTo(element);\n                that.buttonsContainer.append(that._buildButtonsHtml());\n                that.element = element;\n            },\n            _renderHeader: function() {\n                var that = this,\n                    styles = TaskBoardPane.styles,\n                    options = that.options,\n                    messages = options.messages,\n                    headerTemplate = options.headerTemplate ? options.headerTemplate : that.headerTemplate,\n                    resources = that._resources(that._dataItem);\n\n                that.header.append(kendo.template(headerTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    resources: resources,\n                    fieldFormat: that._buildHeaderTemplate(that._dataItem)\n                }, that._dataItem)));\n            },\n            _buildHeaderTemplate: function(dataItem) {\n                var that = this;\n                return encode(kendo.getter(that.options.dataTitleField)(dataItem));\n            },\n            _renderContent: function() {\n                var that = this,\n                    styles = TaskBoardPane.styles,\n                    options = that.options,\n                    messages = options.messages,\n                    contentTemplate = options.template || that.contentTemplate,\n                    resources = that._resources(that._dataItem);\n\n                that.content.append(kendo.template(contentTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    resources: resources\n                }, that._dataItem)));\n            },\n            _resources: function(card) {\n                var that = this,\n                    resources = {};\n\n                if (!that.resources) {\n                    return resources;\n                }\n\n                for (var key in that.resources) {\n                    var resource = that.resources[key];\n                    var field = resource.field;\n                    var cardResources = kendo.getter(field)(card);\n\n                    if (!cardResources) {\n                        continue;\n                    }\n\n                    if (!resource.multiple) {\n                        cardResources = [cardResources];\n                    }\n\n                    var data = resource.dataSource.view();\n\n                    for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                        var cardResource = null;\n\n                        var value = cardResources[resourceIndex];\n\n                        if (!resource.valuePrimitive) {\n                            value = kendo.getter(resource.dataValueField)(value);\n                        }\n\n                        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                            if (data[dataIndex].get(resource.dataValueField) == value) {\n                                cardResource = data[dataIndex];\n                                break;\n                            }\n                        }\n\n                        if (cardResource !== null) {\n                            var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                            var result = {\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                text: kendo.getter(resource.dataTextField)(cardResource),\n                                value: value,\n                                color: resourceColor\n                            };\n\n                            if (resource.multiple) {\n                                if (resources[resource.field]) {\n                                    resources[resource.field].push(result);\n                                } else {\n                                    resources[resource.field] = [result];\n                                }\n                            } else {\n                                resources[resource.field] = result;\n                            }\n                        }\n                    }\n                }\n                return resources;\n            },\n            _buildButtonsHtml: function() {\n                var that = this,\n                    options = that.options,\n                    messages = options.messages,\n                    buttons = options.buttons || that.defaultButtons,\n                    styles = TaskBoardPane.styles,\n                    html = \"\";\n\n                for (var i = 0; i < buttons.length; i++) {\n                    var button = buttons[i];\n                    button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                    if (typeof button === \"string\") {\n                        button = extend(true, {},\n                            that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                            { text: messages[button] || button }\n                        );\n                    } else if ($.isPlainObject(button) && button.name) {\n                        button = extend(true, button,\n                            { text: messages[button.name] }\n                        );\n                    }\n\n                    if (!that._validateRules(button)) {\n                        continue;\n                    }\n\n                    var icon = button.icon ? \"k-icon k-i-\" + button.icon : \"\";\n\n                    button.icon = icon;\n                    button.spriteCssClass = button.spriteCssClass || \"\";\n\n                    html += kendo.template(that.buttonTemplate)(extend(true, {}, {\n                        styles: styles,\n                        messages: messages,\n                        primary: false,\n                        options: null\n                    }, button));\n                }\n\n                return html;\n            },\n            _commandClick: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                    command = target.attr(kendo.attr(\"command\")),\n                    options = target.attr(kendo.attr(\"options\")),\n                    card = that._dataItem;\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ card: card }, options)\n                });\n            },\n            _validateRules: function(tool) {\n                var that = this,\n                    states = that.options.states,\n                    rules = tool.rules ? tool.rules.split(\";\") : [];\n\n                if (!rules.length) {\n                    return true;\n                }\n\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n            destroy: function() {\n                var that = this;\n\n                that.element.off(NS);\n                that.element.remove();\n            }\n        });\n\n        var TaskBoardPreviewPane = TaskBoardPane.extend({\n            init: function(taskboard, options, dataItem, resources) {\n                var that = this;\n\n                options = extend({}, options.previewPane, {\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField,\n                    messages: options.messages,\n                    states: options.states\n                });\n\n                that.contentTemplate = function (data) { return encode(kendo.getter(options.dataDescriptionField)(data)); };\n\n                TaskBoardPane.fn.init.call(that, taskboard, options, dataItem, resources);\n\n                that.element.addClass(TaskBoardPane.styles.preview);\n            },\n            defaultButtons: [ \"delete\", \"edit\" ]\n        });\n\n        var TaskBoardEditPane = TaskBoardPane.extend({\n            init: function(taskboard, options, dataItem) {\n                var that = this;\n\n                options = extend({}, options.editable, {\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField,\n                    messages: options.messages,\n                    states: options.states\n                });\n\n                that.formSettings = extend(that.formSettings, {\n                    items: [\n                        { field: options.dataTitleField, label: options.messages[options.dataTitleField] },\n                        { field: options.dataDescriptionField, label: options.messages[options.dataDescriptionField] }\n                    ]\n                }, options.form);\n\n                TaskBoardPane.fn.init.call(that, taskboard, options, dataItem);\n\n                that.element.addClass(TaskBoardPane.styles.edit);\n            },\n            defaultButtons: [ \"cancel\", \"saveChanges\" ],\n            formSettings: {\n                buttonsTemplate: function () { return \"\"; }\n            },\n            _buildHeaderTemplate: function(dataItem) {\n                var that = this;\n                return ((that.options.messages.edit) + \" \" + (encode(kendo.getter(that.options.dataTitleField)(dataItem))));\n            },\n            _renderContent: function() {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoardPane.styles,\n                    formSettings = options.form || that.formSettings,\n                    formLabelId = kendo.guid(),\n                    element = $(\"<div></div>\")\n                        .attr(\"role\", \"form\")\n                        .attr(\"aria-labelledby\", formLabelId);\n\n                that.header.find(DOT + styles.headerText).attr(\"id\", formLabelId);\n\n                that.content.append(element);\n\n                that.form = new Form(element, extend({}, formSettings, {\n                    formData: that._dataItem\n                }));\n\n                that.form.element.find(\"input\").trigger(\"focus\");\n            }\n        });\n\n        var TaskBoardCreatePane = TaskBoardEditPane.extend({\n            init: function(taskboard, options, dataItem, resources, column) {\n                var that = this,\n                    columnStatusField = options.columnSettings.dataStatusField,\n                    firstColumn = taskboard.columnsDataSource.view().at(0),\n                    status = column ? column[columnStatusField] : firstColumn[columnStatusField],\n                    clone = extend({}, dataItem);\n\n                dataItem = taskboard.dataSource.add();\n                dataItem.set(options.dataStatusField, status);\n\n                for (var key in clone) {\n                    dataItem.set(key, clone[key]);\n                }\n\n                TaskBoardEditPane.fn.init.call(that, taskboard, options, dataItem, resources);\n            },\n            _buildHeaderTemplate: function(dataItem) {\n                var that = this;\n                return that.options.messages.createNewCard;\n            },\n            defaultButtons: [ \"cancel\", \"create\" ]\n        });\n\n        extend(kendo.ui.taskboard, {\n            Pane: TaskBoardPane,\n            panes: {\n                Preview: TaskBoardPreviewPane,\n                Edit: TaskBoardEditPane,\n                Create: TaskBoardCreatePane\n            }\n        });\n\n        extend(true, kendo.ui.taskboard.Pane, { styles: TaskBoardPaneStyles });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Observable = kendo.Observable,\n\n            extend = $.extend,\n\n            DOT = \".\",\n            NS = DOT + \"kendoKeboardManager\",\n            KEYDOWN = \"keydown\",\n            ACTION = \"action\";\n\n\n        var Keyboard = Observable.extend({\n            init: function(element) {\n                var that = this;\n\n                that.register = {};\n                that.element = element;\n\n                that._attachEvents();\n\n                Observable.fn.init.call(that);\n            },\n\n            registerShortcut: function(selector, shortcut, options) {\n                var that = this;\n\n                if (!that.register[selector]) {\n                    that.register[selector] = [];\n                }\n\n                if (shortcut.keyCode && isNaN(shortcut.keyCode) && shortcut.keyCode.toUpperCase) {\n                    shortcut.keyCode = shortcut.keyCode.toUpperCase().charCodeAt(0);\n                }\n\n                that.register[selector].push({\n                    shortcut: extend({\n                        keyCode: null,\n                        ctrlKey: false,\n                        shiftKey: false,\n                        altKey: false\n                    }, shortcut),\n                    options: options\n                });\n\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    handler = that._handler.bind(that);\n\n                that.element.on(KEYDOWN + NS, handler);\n            },\n\n            _handler: function(ev) {\n                var that = this,\n                    target = $(ev.target),\n                    shortcuts, action;\n\n                for (var selector in that.register) {\n                    if (target.is(selector)) {\n                        shortcuts = that.register[selector];\n                        action = that._getAction(shortcuts, ev);\n\n                        if (action) {\n                            that._trigger(action, ev);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            _trigger: function(action, ev) {\n                var that = this,\n                    target = $(ev.target);\n\n                if (action.command) {\n                    that.trigger(ACTION, extend({}, ev, {\n                        command: action.command,\n                        options: extend({}, {\n                            target: target\n                        }, action.options)\n                    }));\n                }\n\n                if (action.handler) {\n                    action.handler(ev);\n                }\n            },\n\n            _getAction: function(shortcuts, ev) {\n                var that = this;\n\n                for (var i = 0; i < shortcuts.length; i++) {\n                    if (that._compareShortcut(shortcuts[i].shortcut, ev)) {\n                        return shortcuts[i].options;\n                    }\n                }\n            },\n\n            _compareShortcut: function(shortcut, ev) {\n                var that = this;\n\n                for (var key in shortcut) {\n                    var result = false;\n\n                    switch (key) {\n                        case \"ctrlKey\":\n                            result = shortcut[key] !== that._getShortcutModifier(ev);\n                            break;\n                        default:\n                            result = shortcut[key] !== ev[key];\n                            break;\n                    }\n\n                    if (result) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _getShortcutModifier: function(ev) {\n                var mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n                return mac ? ev.metaKey : ev.ctrlKey;\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.element.off(NS);\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            KeyboardManager: Keyboard\n        });\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n            id: \"taskboard\",\n            name: \"TaskBoard\",\n            category: \"web\",\n            description: \"The TaskBoard widget displays cards.\",\n            depends: [\"data\", \"sortable\", \"dialog\", \"form\", \"menu\", \"toolbar\", \"textbox\"]\n        };\n\n        var TaskBoardStyles = {\n            wrapper: \"k-taskboard\",\n            header: \"k-taskboard-header\",\n            content: \"k-taskboard-content\",\n            toolbar: \"k-taskboard-toolbar k-toolbar-flat\",\n            columnsContainer: \"k-taskboard-columns-container\",\n            card: \"k-taskboard-card\",\n            column: \"k-taskboard-column\",\n            selected: \"k-selected\",\n            disabled: \"k-disabled\",\n            ignoreDrag: \"k-taskboard-drag-ignore\"\n        };\n\n        var preventDefault = function(ev) { ev.preventDefault(); };\n\n        (function($, undefined$1) {\n            var kendo = window.kendo,\n                Widget = kendo.ui.Widget,\n                DataSource = kendo.data.DataSource,\n                extend = $.extend,\n                ui = kendo.ui,\n                isArray = Array.isArray,\n                isPlainObject = $.isPlainObject,\n\n                GENERIC = \"_generic\",\n\n                DOT = \".\",\n\n                MOVE = \"move\",\n                MOVE_START = \"moveStart\",\n                MOVE_END = \"moveEnd\",\n                SELECT = \"select\",\n                EXECUTE = \"execute\",\n                ACTION = \"action\",\n                CHANGE = \"change\",\n                CLICK = \"click\",\n                ERROR = \"change\",\n                DATABINDING = \"dataBinding\",\n                DATABOUND = \"dataBound\",\n                EDIT_CARD = \"editCard\",\n                SAVE_CARD = \"saveCard\",\n                DELETE_CARD = \"deleteCard\",\n                EDIT_COLUMN = \"editColumn\",\n                SAVE_COLUMN = \"saveColumn\",\n                DELETE_COLUMN = \"deleteColumn\",\n\n                COLUMNSDATABINDING = \"columnsDataBinding\",\n                COLUMNSDATABOUND = \"columnsDataBound\";\n\n            var TaskBoard = Widget.extend({\n                init: function(element, options) {\n                    var that = this;\n\n                    Widget.fn.init.call(that, element, options);\n\n                    element = that.wrapper = that.element;\n\n                    that._sortableIdentifier = that.element.attr(\"id\") || kendo.guid();\n\n                    that._wrapper();\n                    that._columnsDataSource();\n                    that._initResources();\n                    that._dataSource();\n                    that._initToolbar();\n                    that._initCardMenu();\n                    that._initKeyboard();\n\n                    if (that.options.autoBind) {\n                        that.load();\n                    }\n\n                    kendo.notify(that);\n                },\n\n                events: [\n                    MOVE,\n                    MOVE_START,\n                    MOVE_END,\n                    CHANGE,\n                    EXECUTE,\n                    SELECT,\n                    DATABINDING,\n                    DATABOUND,\n                    COLUMNSDATABINDING,\n                    COLUMNSDATABOUND,\n                    EDIT_CARD,\n                    SAVE_CARD,\n                    DELETE_CARD,\n                    EDIT_COLUMN,\n                    SAVE_COLUMN,\n                    DELETE_COLUMN\n                ],\n\n                options: {\n                    name: \"TaskBoard\",\n                    autoBind: true,\n                    height: 600,\n                    width: \"100%\",\n                    toolbar: true,\n                    dataStatusField: \"status\",\n                    dataTitleField: \"title\",\n                    dataDescriptionField: \"description\",\n                    dataCategoryField: \"category\",\n                    dataOrderField: null,\n                    cardMenu: true,\n                    editable: true,\n                    selectable: true,\n                    reorderable: true,\n                    previewPane: true,\n                    search: {\n                        operator: \"contains\"\n                    },\n                    dataSource: [],\n                    columns: [],\n                    columnSettings: {\n                        dataStatusField: \"status\",\n                        dataTextField: \"text\",\n                        dataOrderField: null\n                    },\n                    resources: [],\n                    messages: {\n                        edit: \"Edit\",\n                        createNewCard: \"Create new card\",\n                        create: \"Create\",\n                        search: \"Search\",\n                        previewCard: \"Preview card\",\n                        addCard: \"Add card\",\n                        editCard: \"Edit card\",\n                        deleteCard: \"Delete Card\",\n                        addColumn: \"Add column\",\n                        editColumn: \"Edit column\",\n                        deleteColumn: \"Delete column\",\n                        close: \"Close\",\n                        cancel: \"Cancel\",\n                        \"delete\": \"Delete\",\n                        saveChanges: \"Save changes\",\n                        title: \"Title:\",\n                        description: \"Description:\",\n                        newColumn: \"New column\",\n                        deleteColumnConfirm: \"Are you sure you want to delete this column?\",\n                        deleteCardConfirm: \"Are you sure you want to delete this card?\"\n                    }\n                },\n\n                defaultTools: {\n                    addColumn: { type: \"button\", name: \"addColumn\", command: \"AddColumnCommand\", icon: \"plus\", rules: \"isEditable\" },\n                    spacer: { type: \"spacer\" },\n                    search: {\n                        type: \"component\",\n                        name: \"search\",\n                        command: \"SearchCommand\",\n                        options: \"{ \\\"field\\\": \\\"name\\\", \\\"operator\\\": \\\"startswith\\\" }\",\n                        rules: \"isSearchable\",\n                        overflow: \"never\",\n                        component: \"TextBox\",\n                        componentOptions: {\n                            placeholder: \"Search\",\n                            icon: \"search\",\n                            commandOn: \"input\"\n                        }\n                    }\n                },\n\n                items: function() {\n                    var that = this,\n                        result = $([]);\n\n                    for (var key in that._columns) {\n                        $.merge(result, that._columns[key].cards());\n                    }\n\n                    return result;\n                },\n\n                itemsByStatus: function(status) {\n                    var that = this,\n                        result = that._getColumn(status).cards();\n\n                    return result;\n                },\n\n                itemsByColumn: function(columnElm) {\n                    var that = this,\n                        column = that._getColumnByElement(columnElm);\n\n                    if (column) {\n                        return column.cards();\n                    }\n                },\n\n                load: function() {\n                    var that = this,\n                        fetchPromises = [];\n\n                    that._progress(true);\n\n                    fetchPromises.push(that.columnsDataSource.fetch());\n\n                    for (var key in that.resources) {\n                        fetchPromises.push(that.resources[key].dataSource.fetch());\n                    }\n\n                    $.when.apply(null, fetchPromises)\n                        .then(that.dataSource.read.bind(that.dataSource));\n                },\n\n                dataItem: function(cardElm) {\n                    var that = this,\n                        dataSource = that.dataSource,\n                        uid;\n\n                    cardElm = $(cardElm);\n                    uid = cardElm.attr(kendo.attr(\"uid\"));\n\n                    return dataSource.getByUid(uid);\n                },\n\n                columnDataItem: function(columnElm) {\n                    var that = this,\n                        columnsDataSource = that.columnsDataSource,\n                        uid;\n\n                    columnElm = $(columnElm);\n                    uid = columnElm.attr(kendo.attr(\"uid\"));\n\n                    return columnsDataSource.getByUid(uid);\n                },\n\n                columns: function() {\n                    var that = this,\n                        result = $([]);\n\n                    for (var key in that._columns) {\n                        $.merge(result, that._columns[key].element);\n                    }\n\n                    return result;\n                },\n\n                columnByStatus: function(status) {\n                    return this._getColumn(status).element;\n                },\n\n                select: function(card, toggle) {\n                    var that = this;\n\n                    if (!card) {\n                        return that.element\n                            .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected).eq(0);\n                    }\n\n                    card = $(card);\n                    toggle = toggle !== false;\n\n                    if (toggle) {\n                        that.element\n                            .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected)\n                            .removeClass(TaskBoard.styles.selected);\n                    }\n\n                    card.toggleClass(TaskBoard.styles.selected, toggle);\n                },\n\n                previewCard: function(cardElement) {\n                    var that = this,\n                        options = that.options,\n                        args = that._extendExecArgs({ target: cardElement });\n\n                    if (options.previewPane) {\n                        that._openPane(extend({\n                            pane: \"Preview\"\n                        }, args));\n                    }\n                },\n\n                editCard: function(cardElement) {\n                    var that = this,\n                        options = that.options,\n                        args;\n\n                    cardElement = $(cardElement);\n                    args = that._extendExecArgs({ target: cardElement });\n\n                    if (options.editable) {\n                        that._openPane(extend({\n                            pane: \"Edit\"\n                        }, args));\n                    }\n                },\n\n                saveCard: function() {\n                    var that = this;\n\n                    that.dataSource.sync();\n                },\n\n                deleteCard: function(cardElement) {\n                    var that = this,\n                        card = that.dataItem(cardElement);\n\n                    that.dataSource.remove(card);\n                    that.dataSource.sync();\n                },\n\n                addCard: function(dataItem) {\n                    var that = this,\n                        options = that.options,\n                        args = { card: dataItem };\n\n                    if (options.editable) {\n                        that._openPane(extend({\n                            pane: \"Create\"\n                        }, args));\n                    }\n                },\n\n                addColumn: function(index, data) {\n                    var that = this,\n                        columnSettings = extend(true, {}, that.options.columnSettings, {\n                            messages: that.options.messages,\n                            states: that._buildStates(),\n                            sortableIdentifier: that._sortableIdentifier\n                        }),\n                        newColumn, model, column;\n\n                    if (isNaN(index) && !data) {\n                        data = index;\n                        index = null;\n                    }\n\n                    model = that.columnsDataSource._createNewModel(data);\n                    index = isNaN(index) || index === null ? that.columnsDataSource.data().length : index;\n                    column = that.columns().eq(index);\n                    that.columnsDataSource.insert(index, model);\n\n                    newColumn = new ui.taskboard.NewColumn(columnSettings, model);\n\n                    if (isNaN(index) || !column.length) {\n                        that.columnsContainer.append(newColumn.element);\n                    } else {\n                        column.before(newColumn.element);\n                    }\n\n                    newColumn.bind(ACTION, that.executeCommand.bind(that));\n                },\n\n                editColumn: function(columnElement) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    that._getColumnByElement(columnElement).edit();\n                },\n\n                saveColumn: function() {\n                    var that = this;\n\n                    that.columnsDataSource.sync();\n                },\n\n                deleteColumn: function(columnElement) {\n                    var that = this,\n                        column = that.columnDataItem(columnElement);\n\n                    that.columnsDataSource.remove(column);\n                    that.columnsDataSource.sync();\n                },\n\n                registerShortcut: function(selector, shortcut, options) {\n                    var that = this;\n\n                    that.keyboardManager.registerShortcut(selector, shortcut, options);\n                },\n\n                enable: function(cardElement, toggle) {\n                    cardElement = $(cardElement);\n\n                    cardElement.toggleClass(TaskBoard.styles.disabled, toggle === false);\n                    cardElement.attr(\"aria-disabled\", toggle === false);\n                },\n\n                enableByColumn: function(columnElement, toggle) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    that.itemsByColumn(columnElement).each(function(index, card) {\n                        that.enable(card, toggle);\n                    });\n                },\n\n                readOnly: function(cardElement, toggle) {\n                    cardElement = $(cardElement);\n\n                    toggle = toggle !== false;\n\n                    cardElement.find(\"[\" + kendo.attr(\"command\") + \"]\").toggleClass(TaskBoard.styles.disabled, toggle);\n                    cardElement.find(\"a,button\").toggleClass(TaskBoard.styles.disabled, toggle);\n\n                    cardElement.toggleClass(TaskBoard.styles.ignoreDrag, toggle);\n                    cardElement.attr(\"aria-readonly\", toggle);\n                },\n\n                readOnlyByColumn: function(columnElement, toggle) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    that.itemsByColumn(columnElement).each(function(index, card) {\n                        that.readOnly(card, toggle);\n                    });\n                },\n\n                setDataSource: function(dataSource) {\n                    var that = this;\n\n                    that.options.dataSource = dataSource;\n                    that._dataSource();\n\n                    if (that.options.autoBind) {\n                        that.dataSource.read();\n                    }\n                },\n\n                setColumnsDataSource: function(dataSource) {\n                    var that = this;\n\n                    that.options.columns = dataSource;\n                    that._columnsDataSource();\n\n                    if (that.options.autoBind) {\n                        that.columnsDataSource.fetch(function() {\n                            that._renderCards(that.dataSource.view());\n                        });\n                    }\n                },\n\n                _getColumn: function(status) {\n                    return this._columns[status];\n                },\n\n                _getColumnByElement: function(columnElement) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    for (var key in that._columns) {\n                        if (that._columns[key].element[0] === columnElement[0]) {\n                            return that._columns[key];\n                        }\n                    }\n                },\n\n                _openPane: function(options) {\n                    var that = this,\n                        pane = new ui.taskboard.panes[options.pane](that, extend({}, that.options, {\n                            states: that._buildStates()\n                        }), options.card, that.resources, options.column),\n                        focusableElement, keyboardManager;\n\n                    if (that.pane) {\n                        that._closePane();\n                    }\n\n                    that.pane = pane;\n                    that.content.after(that.pane.element);\n                    that.content.css(\"margin-right\",\n                        that.pane.element.outerWidth() -\n                        parseInt(that.content.css(\"paddingRight\"), 10));\n\n                    that.pane.bind(ACTION, that.executeCommand.bind(that));\n\n                    that.pane.keyboardManager = keyboardManager = new ui.taskboard.KeyboardManager(that.pane.element);\n\n                    keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n\n                    keyboardManager.registerShortcut(\"*\", {\n                        keyCode: kendo.keys.ESC\n                    }, { command: \"ClosePaneCommand\" });\n\n                    keyboardManager.registerShortcut(\"*\", {\n                        keyCode: kendo.keys.ENTER\n                    }, { command: \"SaveChangesCommand\", options: {\n                        card: that.pane._dataItem\n                    } });\n\n                    focusableElement = that.pane.element.find(\"input\");\n\n                    if (!focusableElement.length) {\n                        focusableElement = that.pane.element.find(\"button\");\n                    }\n\n                    setTimeout(function() {\n                        focusableElement.eq(0).trigger(\"focus\");\n                    }, 0);\n                },\n\n                _closePane: function() {\n                    var that = this;\n\n                    if (that.pane) {\n                        that.pane.keyboardManager.destroy();\n                        that.pane.unbind(ACTION);\n                        that.pane.destroy();\n                        delete that.pane;\n\n                        that.content.css(\"margin-right\", \"\");\n                    }\n                },\n\n                _wrapper: function() {\n                    var that = this,\n                        options = that.options,\n                        styles = TaskBoard.styles,\n                        headerElm = \"<div class='\" + styles.header + \"'></div>\",\n                        contentElm = \"<div class='\" + styles.content + \"'></div>\",\n                        colsContainer = \"<div class='\" + styles.columnsContainer + \"'></div>\";\n\n                    that.element.addClass(styles.wrapper)\n                        .width(options.width)\n                        .height(options.height)\n                        .attr(\"role\", \"application\");\n                    that.header = $(headerElm).appendTo(that.element);\n                    that.content = $(contentElm).appendTo(that.element);\n                    that.columnsContainer = $(colsContainer).appendTo(that.content);\n                },\n\n                _initToolbar: function() {\n                    var that = this,\n                        styles = TaskBoard.styles,\n                        options = that.options,\n                        toolbarElm = $(\"<div class='\" + styles.toolbar + \"'></div>\"),\n                        toolbarOptions = isArray(options.toolbar) ? { items: options.toolbar } : options.toolbar,\n                        tools;\n\n                    if (options.toolbar === false) {\n                        return;\n                    } else if (toolbarOptions === true) {\n                        toolbarOptions = {};\n                    }\n\n                    tools = toolbarOptions.items ? toolbarOptions.items : Object.keys(that.defaultTools);\n                    tools = that._processTools(tools);\n                    toolbarOptions.tools = tools;\n                    toolbarOptions.defaultTools = that.defaultTools;\n                    toolbarOptions.parentMessages = that.options.messages;\n\n                    that.header.append(toolbarElm);\n                    that.toolbar = new kendo.ui.ToolBar(toolbarElm, toolbarOptions);\n                    that.options.toolbar = that.toolbar.options;\n\n                    that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                    that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n                },\n\n                _processTools: function(tools) {\n                    var that = this,\n                        states = that._buildStates();\n\n                    tools.forEach(function (t) {\n                        var rules = t.rules || that.defaultTools[t] ? that.defaultTools[t].rules : null;\n\n                        if (!rules) {\n                            return;\n                        }\n\n                        rules = rules.split(\";\");\n\n                        if (!rules.length) {\n                            return;\n                        }\n\n                        for (var i = 0; i < rules.length; i++) {\n                            if (!states[rules[i]]) {\n                                if (t.rules) {\n                                    t.hidden = true;\n                                } else {\n                                    that.defaultTools[t].hidden = true;\n                                }\n                            }\n                        }\n                    });\n\n                    return tools;\n                },\n\n                _toolbarClick: function(ev) {\n                    var command = $(ev.target).data(\"command\"),\n                        options = $(ev.target).data(\"options\");\n\n                    options = extend({}, options, { value: $(ev.target).val() });\n\n                    if (!command) {\n                        return;\n                    }\n\n                    this.executeCommand({\n                        command: command,\n                        options: options\n                    });\n                },\n\n                _isToolEnabled: function(toolName) {\n                    var that = this,\n                        options = that.options.toolbar,\n                        items = options.items || that.defaultTools,\n                        found = false;\n\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].name == toolName) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    return items[toolName] || found;\n                },\n\n                _buildStates: function() {\n                    var that = this;\n\n                    return {\n                        isEditable: that._isEditable(),\n                        isReorderable: that._isReorderable(),\n                        isSelectable: that._isSelectable(),\n                        isReadOnly: !that._isReorderable() && !that._isEditable(),\n                        isDisabled: !that._isReorderable() && !that._isEditable() && !that._isSelectable(),\n                        isSearchable: that._isSearchable(),\n                        notLocalColumns: !(that.columnsDataSource.transport instanceof kendo.data.LocalTransport),\n                        isRtl: kendo.support.isRtl(that.wrapper)\n                    };\n                },\n\n                _isSearchable: function() {\n                    return !!this.options.search;\n                },\n\n                _isEditable: function() {\n                    return !!this.options.editable;\n                },\n\n                _isReorderable: function() {\n                    return !!this.options.reorderable;\n                },\n\n                _isSelectable: function() {\n                    return !!this.options.selectable;\n                },\n\n                executeCommand: function(args) {\n                    var that = this,\n                        commandName = args.command,\n                        commandOptions = extend({ taskboard: this }, isPlainObject(args.options) ? that._extendExecArgs(args.options) : { value: args.options }),\n                        command = ui.taskboard.commands[commandName] && new ui.taskboard.commands[commandName](commandOptions);\n\n\n                    if (!that.trigger(EXECUTE, args)) {\n                        if (command) {\n                            command.exec();\n                        } else {\n                            window.console.warn(kendo.format(\"Trying to use {0} command, but such is not available in the kendo.ui.taskboard.commands namespace!\", commandName));\n                        }\n                    }\n                },\n\n                _extendExecArgs: function(args) {\n                    var that = this,\n                        target = args.draggableEvent ? args.item : args.target,\n                        columnElm, cardElm, columnDataItem, cardDataItem;\n\n                    if (args.card) {\n                        target = that.items().filter(function(idx, elm) {\n                            return $(elm).attr(kendo.attr(\"uid\")) === args.card.get(\"uid\");\n                        });\n                    }\n\n                    if (!target || !(target && target.length)) {\n                        return args;\n                    }\n\n                    columnElm = args.columnElement || (target.is(DOT + TaskBoard.styles.column) ? target : target.parents(DOT + TaskBoard.styles.column));\n                    columnDataItem = that.columnsDataSource.getByUid(columnElm.data(kendo.ns + \"uid\"));\n                    cardElm = target.is(DOT + TaskBoard.styles.card) ? target : target.closest(DOT + TaskBoard.styles.card);\n                    cardDataItem = that.dataSource.getByUid(cardElm.data(kendo.ns + \"uid\"));\n\n                    return extend(args, {\n                        card: cardDataItem,\n                        cardElement: cardElm.length ? cardElm : undefined$1,\n                        column: columnDataItem,\n                        columnElement: columnElm.length ? columnElm : undefined$1\n                    });\n                },\n\n\n                _select: function(card, toggle) {\n                    var that = this;\n\n                    if (toggle === null) {\n                        toggle = true;\n                    }\n\n                    if (!that.trigger(SELECT, { card: card })) {\n                        that.select(card, toggle);\n                        that.previewCard(card);\n                    }\n                },\n\n                _columnsDataSource: function() {\n                    var that = this,\n                        options = that.options,\n                        columnSettings = options.columnSettings,\n                        columnsDataSource = options.columns;\n\n                    columnsDataSource = isArray(columnsDataSource) ? { data: columnsDataSource } : columnsDataSource;\n\n                    if (columnSettings.dataOrderField && !columnsDataSource.sort) {\n                        columnsDataSource.sort = { field: columnSettings.dataOrderField, dir: \"asc\" };\n                    }\n\n                    if (!columnsDataSource.schema) {\n                        var fields = {};\n\n                        fields[columnSettings.dataStatusField] = { type: \"string\", defaultValue: function() { return kendo.guid().split(\"-\")[0]; } };\n                        fields[columnSettings.dataTextField] = { type: \"string\" };\n\n                        if (columnSettings.dataOrderField) {\n                            fields[columnSettings.dataOrderField] = { type: \"number\" };\n                        }\n\n                        columnsDataSource.schema = {\n                            model: {\n                                fields: fields\n                            }\n                        };\n                    }\n\n                    if (that.columnsDataSource && that._columnsChangeHandler) {\n                        that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                        that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                    } else {\n                        that._columnsChangeHandler = that._columnsDataSourceChange.bind(that);\n                        that._columnsErrorHandler = that._error.bind(that);\n                    }\n\n                    that.columnsDataSource = DataSource.create(columnsDataSource)\n                                    .bind(CHANGE, that._columnsChangeHandler)\n                                    .bind(ERROR, that._columnsErrorHandler);\n                },\n\n                _columnsDataSourceChange: function(ev) {\n                    var that = this,\n                        view = that.columnsDataSource.view(),\n                        columnSettings = extend(true, {}, that.options.columnSettings, {\n                            messages: that.options.messages,\n                            states: that._buildStates(),\n                            sortableIdentifier: that._sortableIdentifier\n                         }),\n                        statusField = columnSettings.dataStatusField;\n\n                    if (ev.action && ev.action !== \"sync\") {\n                        return;\n                    }\n\n                    if (that.trigger(COLUMNSDATABINDING, ev)) {\n                        return;\n                    }\n\n                    that._progress(true);\n\n                    that._columns = {};\n                    that.columnsContainer.html(\"\");\n\n                    for (var i = 0; i < view.length; i++) {\n                        var data = view[i];\n                        var status = data[statusField] || GENERIC;\n                        var column;\n\n                        column = that._columns[status] = new ui.taskboard.Column(columnSettings, data);\n                        that.columnsContainer.append(column.element);\n                        column.bind(ACTION, that.executeCommand.bind(that));\n                        column.bind(MOVE, that._move.bind(that));\n                        column.bind(MOVE_END, that._moveEnd.bind(that));\n                        column.bind(MOVE_START, that._moveStart.bind(that));\n                        column.bind(CHANGE, that._changeOrder.bind(that));\n                        that._tabindex(column.element);\n                    }\n\n                    if (ev.action === \"sync\" || ev.action === undefined$1) {\n                        that._renderCards(that.dataSource.view());\n                    }\n\n                    that._progress(false);\n                    that.trigger(COLUMNSDATABOUND, ev);\n                },\n\n                _move: function(ev) {\n                    this.trigger(MOVE, this._extendExecArgs(ev));\n                },\n\n                _moveEnd: function(ev) {\n                    this.trigger(MOVE_END, this._extendExecArgs(ev));\n                },\n\n                _moveStart: function(ev) {\n                    this.trigger(MOVE_START, this._extendExecArgs(ev));\n                },\n\n                _changeOrder: function(ev) {\n                    this.trigger(CHANGE, this._extendExecArgs(ev));\n                },\n\n                _dataSource: function() {\n                    var that = this,\n                        options = that.options,\n                        dataSource = options.dataSource;\n\n                        dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                    if (options.dataOrderField && !dataSource.sort) {\n                        dataSource.sort = { field: options.dataOrderField, dir: \"asc\" };\n                    }\n\n                    if (!dataSource.schema) {\n                        var fields = {};\n\n                        fields[options.dataStatusField] = { type: \"string\" };\n                        fields[options.dataTitleField] = { type: \"string\" };\n                        fields[options.dataDescriptionField] = { type: \"string\" };\n                        fields[options.dataCategoryField] = { type: \"string\" };\n\n                        if (options.dataOrderField) {\n                            fields[options.dataOrderField] = { type: \"number\" };\n                        }\n\n                        dataSource.schema = {\n                            model: {\n                                fields: fields\n                            }\n                        };\n                    }\n\n                    if (that.dataSource && that._changeHandler) {\n                        that.dataSource.unbind(CHANGE, that._changeHandler);\n                        that.dataSource.unbind(ERROR, that._errorHandler);\n                    } else {\n                        that._changeHandler = that._change.bind(that);\n                        that._errorHandler = that._error.bind(that);\n                    }\n\n                    that.dataSource = DataSource.create(dataSource)\n                                    .bind(CHANGE, that._changeHandler);\n                },\n\n                _change: function(ev) {\n                    var that = this;\n\n                    if (ev.action && ev.action !== \"sync\") {\n                        return;\n                    }\n\n                    if (that.trigger(DATABINDING, ev)) {\n                        return;\n                    }\n\n                    that._progress(true);\n\n                    that._clearColumns();\n                    that._renderCards(that.dataSource.view());\n                    that._closePane();\n\n                    that.trigger(DATABOUND, ev);\n                    that._progress(false);\n                },\n\n                _error: function() {\n                    this._progress(false);\n                },\n\n                _renderCards: function(data) {\n                    var that = this;\n\n                    for (var i = 0; i < data.length; i++) {\n                        that._renderCard(data[i]);\n                    }\n                },\n\n                _renderCard: function(card) {\n                    var that = this,\n                        options = extend({}, that.options, { states: that._buildStates() }),\n                        statusField = options.dataStatusField,\n                        status = card[statusField] || GENERIC;\n\n                    if (status && that._columns[status]) {\n                        card = new ui.taskboard.Card(options, card, that.resources);\n                        that._columns[status].addCard(card.element);\n                        that._tabindex(card.element);\n                    }\n                },\n\n                _clearColumns: function() {\n                    var that = this;\n\n                    for (var key in that._columns) {\n                        that._columns[key].empty();\n                    }\n                },\n\n                _initCardMenu: function() {\n                    var that = this,\n                        options = that.options,\n                        cardMenuOptions = isArray(options.cardMenu) ? { items: options.cardMenu } : options.cardMenu;\n\n                    cardMenuOptions = extend({}, {\n                        messages: options.messages,\n                        target: that.columnsContainer,\n                        filter: \".k-taskboard-card-menu-button\",\n                        action: that.executeCommand.bind(that),\n                        showOn: \"click\",\n                        alignToAnchor: true,\n                        states: that._buildStates()\n                    }, cardMenuOptions);\n\n                    if (options.cardMenu === false) {\n                        return;\n                    }\n\n                    that.cardMenu = new ui.taskboard.CardMenu(\"<ul></ul>\", cardMenuOptions);\n                },\n\n                _initResources: function() {\n                    var that = this,\n                        resources = that.options.resources;\n\n                    for (var i = 0; i < resources.length; i++) {\n                        that._addResource(resources[i]);\n                    }\n                },\n\n                _addResource: function(resource) {\n                    var that = this;\n\n                    if (!that.resources) {\n                        that.resources = {};\n                    }\n\n                    that.resources[resource.field] = {\n                        field: resource.field,\n                        name: resource.name,\n                        title: resource.title || resource.field,\n                        dataTextField: resource.dataTextField || \"text\",\n                        dataValueField: resource.dataValueField || \"value\",\n                        dataColorField: resource.dataColorField || \"color\",\n                        valuePrimitive: resource.valuePrimitive === false ? false : true,\n                        multiple: resource.multiple || false,\n                        dataSource: that._resourceDataSource(resource.dataSource)\n                    };\n                },\n\n                _resourceDataSource: function(resourceDS) {\n                    var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS,\n                        dataSourceInstance = kendo.data.DataSource.create(dataSource);\n\n                    return dataSourceInstance;\n                },\n\n                _progress: function(toggle) {\n                    var that = this;\n\n                    kendo.ui.progress(that.element, toggle);\n                },\n\n                _initKeyboard: function() {\n                    var that = this;\n\n                    that.keyboardManager = new ui.taskboard.KeyboardManager(that.element);\n\n                    that.keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n                    that._registerShortcuts();\n                },\n\n                _registerShortcuts: function() {\n                    var that = this,\n                        states = that._buildStates();\n\n                    if (states.isEditable) {\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                            keyCode: kendo.keys.DELETE\n                        }, { command: \"DeleteColumnCommand\" });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                            keyCode: \"e\",\n                            ctrlKey: true\n                        }, { command: \"EditColumnCommand\", handler: preventDefault });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                            keyCode: \"a\",\n                            ctrlKey: true\n                        }, { command: \"AddCardCommand\", handler: preventDefault });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column + \" *\", {\n                            keyCode: kendo.keys.ESC\n                        }, { command: \"CancelEditColumnCommand\" });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                            keyCode: kendo.keys.DELETE\n                        }, { command: \"DeleteCardCommand\" });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                            keyCode: \"e\",\n                            ctrlKey: true\n                        }, { command: \"EditCardCommand\", handler: preventDefault });\n                    }\n\n                    if (states.isSelectable) {\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                            keyCode: kendo.keys.ENTER\n                        }, { command: \"SelectCardCommand\", handler: preventDefault });\n                    }\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.UP\n                    }, { command: \"MoveFocusCommand\", options: { value: \"up\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.DOWN\n                    }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.LEFT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.RIGHT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.LEFT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.RIGHT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.DOWN\n                    }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n                },\n\n                destroy: function() {\n                    var that = this;\n\n                    if (that._columnsChangeHandler) {\n                        that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                        that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                    }\n\n                    if (that._changeHandler) {\n                        that.dataSource.unbind(CHANGE, that._changeHandler);\n                        that.dataSource.unbind(ERROR, that._errorHandler);\n                    }\n\n                    for (var key in that._columns) {\n                        that._columns[key].destroy();\n                    }\n\n                    if (that.toolbar) {\n                        that.toolbar.destroy();\n                    }\n\n                    if (that.cardMenu) {\n                        that.cardMenu.destroy();\n                    }\n\n                    if (that.keyboardManager) {\n                        that.keyboardManager.destroy();\n                    }\n\n                    if (that.pane) {\n                        that.closePane();\n                    }\n\n                    Widget.fn.destroy.call(that);\n                }\n            });\n\n            kendo.ui.plugin(TaskBoard);\n\n            extend(true, TaskBoard, { styles: TaskBoardStyles });\n\n        })(window.kendo.jQuery);\n\n}));\n"]}