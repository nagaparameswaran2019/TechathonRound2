{"version":3,"file":"kendo.expansionpanel.min.js","names":["factory","define","amd","$","kendo","Widget","ui","keys","extend","encode","NS","EXPAND","COLLAPSE","COMPLETE","STATEDISABLED","ARIA_DISABLED","ARIA_EXPANDED","ARIA_HIDDEN","EXPANDED","FOCUSED","headerTemplate","ExpansionPanel","window","jQuery","htmlEncode","ref","title","subTitle","iconClass","useBareTemplate","ns","elementId","init","element","options","that","this","headerAttribute","attr","fn","call","_wrapper","_animations","expanded","addClass","wrapper","on","_click","bind","_focus","_blur","_keydown","toggle","notify","events","name","disabled","animation","expand","effects","duration","collapse","height","toggleable","expandIconClass","collapseIconClass","headerClass","header","DOMElement","guid","wrap","parent","template","prepend","_indicator","find","style","cssText","width","contentWrapper","className","css","hide","e","hasClass","stopPropagation","trigger","item","preventDefault","animate","animationSettings","hasCollapseAnimation","reverse","complete","_completeHandler","removeClass","kendoStop","kendoAnimate","key","keyCode","ENTER","SPACEBAR","target","is","destroy","off","enable","enabled","toggleClass","plugin"],"sources":["kendo.expansionpanel.js"],"mappings":"CAAA,SAAWA,GACW,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,kBAAmBD,GACxEA,IAFJ,EAGG,WACC,IAQUG,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EAKAC,EAgBAC,EAxCElB,EAiQPmB,OAAOlB,MAAMmB,OAhQRnB,EAAQkB,OAAOlB,MACfC,EAASD,EAAME,GAAGD,OAClBC,EAAKF,EAAME,GACXC,EAAOH,EAAMG,KACbC,EAASL,EAAEK,OACXC,EAASL,EAAMoB,WACfd,EAAK,uBACLC,EAAS,SACTC,EAAW,WACXC,EAAW,WACXC,EAAgB,aAChBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAc,cACdC,EAAW,aAIXC,EAAU,UAKVC,EAAiB,SAAUK,GACnB,IAAIC,EAAQD,EAAIC,MACZC,EAAWF,EAAIE,SACfC,EAAYH,EAAIG,UAChBC,EAAkBJ,EAAII,gBACtBC,EAAKL,EAAIK,GACTC,EAAYN,EAAIM,UAEpB,MAAO,SAAYF,EAAgD,GAA9B,6BAAoC,SAAWC,EAAK,6DAAqErB,EAAOsB,GAAc,MACjLF,EAAsFH,EAAnE,iCAAsCjB,EAAOiB,GAAU,UAC5E,2CACEG,EAA6F,GAA1E,qCAA0CpB,EAAOkB,GAAa,UACnF,qCAAyClB,EAAOmB,GAJzC,mBAQfP,EAAiBhB,EAAOG,OAAO,CAC/BwB,KAAM,SAASC,EAASC,GACpB,IAAIC,EAAOC,KACPC,EAAkBjC,EAAMkC,KAAK,mBAEjCjC,EAAOkC,GAAGP,KAAKQ,KAAKL,EAAMF,EAASC,GACnCA,EAAU/B,EAAEK,QAAO,EAAM,GAAI0B,GAE7BC,EAAKM,WACLN,EAAKO,YAAYR,GAEjBC,EAAKF,QAAQK,KAAKrB,GAAciB,EAAQS,UAEnCR,EAAKD,QAAQL,iBACdM,EAAKF,QAAQW,SAtCF,sBAyCfT,EAAKU,QACAC,GAtCD,QAsCYpC,EAAI,IAAM2B,EAAkB,IAAKF,EAAKY,OAAOC,KAAKb,IAC7DW,GAAG,UAAYpC,EAAIyB,EAAKc,OAAOD,KAAKb,IACpCW,GAAG,WAAapC,EAAIyB,EAAKe,MAAMF,KAAKb,IACpCW,GAxCC,UAwCYpC,EAAIyB,EAAKgB,SAASH,KAAKb,IAEzCA,EAAKiB,OAAOjB,EAAKD,QAAQS,UAAU,GAEnCvC,EAAMiD,OAAOlB,IAGjBmB,OAAQ,CACJ3C,EACAC,EACAC,GAGJqB,QAAS,CACLqB,KAAM,iBACNC,UAAU,EACVb,UAAU,EACVc,UAAW,CACPC,OAAQ,CACJC,QAAS,kBACTC,SAAU,KAEdC,SAAU,CACND,SAAU,MAGlBE,OAAQ,KACRC,YAAY,EACZC,gBAAiB,gCACjBC,kBAAmB,8BACnBvC,MAAO,GACPC,SAAU,GACVuC,YAAa,KACbrC,iBAAiB,GAGrBY,SAAU,WACN,IAGII,EACAsB,EAJAhC,EAAOC,KACPH,EAAUE,EAAKF,QACfmC,EAAanC,EAAQ,GAGrBF,EAAYE,EAAQK,KAAK,MAExBP,IACDA,EAAY3B,EAAMiE,OAClBpC,EAAQK,KAAK,KAAMP,IAGvBc,EAAUZ,EAAQqC,KAAK,mCAAqCnC,EAAKD,QAAQS,SAAW,IAAMzB,EAAW,IAAM,YAAYqD,SACvHJ,EAAS/D,EAAMoE,SAASpD,EAAfhB,CAA+B,CACpCsB,MAAOS,EAAKD,QAAQR,MACpBC,SAAUQ,EAAKD,QAAQP,SACvBC,UAAWO,EAAKD,QAAQS,SAAWR,EAAKD,QAAQ8B,gBAAkB7B,EAAKD,QAAQ+B,kBAC/EpC,gBAAiBM,EAAKD,QAAQL,gBAC9BC,GAAI1B,EAAM0B,GACVC,UAAWA,IAEfI,EAAKgC,OAAShE,EAAEgE,GAChBtB,EAAQ4B,QAAQtC,EAAKgC,QACrBhC,EAAKuC,WAAa7B,EAAQ8B,KAvGlB,yBAwGR9B,EAAQ,GAAG+B,MAAMC,QAAUT,EAAWQ,MAAMC,QAC5CT,EAAWQ,MAAME,MAAQ,OAEzB3C,EAAKU,QAAUA,EAAQD,SAAST,EAAKD,QAAQsB,SAAW1C,EAAgB,IACxEqB,EAAK4C,eAAiB5C,EAAKF,QAAQqC,KAAK,eAAeC,SAAS3B,SA7GzC,8BA+GvBT,EAAKgC,OAAO7B,KAAKvB,EAAeoB,EAAKD,QAAQsB,UAChClB,KAAKtB,EAAemB,EAAKD,QAAQS,UAEzCR,EAAKD,QAAQL,iBACdgB,EAAQD,SAASwB,EAAWY,WAG5B7C,EAAKD,QAAQ4B,QACb3B,EAAKU,QAAQoC,IAlHZ,SAkHwB9C,EAAKD,QAAQ4B,QAGtC3B,EAAKD,QAAQgC,aACb/B,EAAKgC,OAAOvB,SAAST,EAAKD,QAAQgC,cAI1CxB,YAAa,SAASR,GACdA,GAAY,cAAeA,IAAaA,EAAQuB,YAChDvB,EAAQuB,UAAY,CAAEC,OAAQ,CAAEC,QAAS,IAAME,SAAU,CAAEqB,MAAM,EAAMvB,QAAS,OAIxFZ,OAAQ,SAASoC,GACb,IAAIhD,EAAOC,KACPO,EAAWR,EAAKuC,WAAWU,SAASjD,EAAKD,QAAQ+B,mBACjDhC,EAAUE,EAAKF,QAEnBkD,EAAEE,kBAEGlD,EAAKD,QAAQ6B,WAKb5B,EAAKmD,QAAS3C,EAAW/B,EAAWD,EAAQ,CAAE4E,KAAMtD,EAAQ,MAC7DE,EAAKiB,SALL+B,EAAEK,kBASVpC,OAAQ,SAASM,EAAQ+B,GACrB,IAAItD,EAAOC,KACPsD,EAAoBvD,EAAKD,QAAQuB,UACjCA,EAAYiC,EAAkBhC,OAC9BiC,EAAuBD,EAAkB7B,UAAY,YAAa6B,EAAkB7B,SACpFA,EAAWrD,EAAO,GAAIkF,EAAkBhC,OAAQgC,EAAkB7B,UAClE5B,EAAUE,EAAKF,QACfY,EAAUV,EAAKU,aA9K/B,IAgLgBa,GACgB,IAAZ+B,IACA5B,EAAW,MAGfH,GAAUvB,EAAKuC,WAAWU,SAASjD,EAAKD,QAAQ+B,mBAG/C0B,IACD9B,EAAWrD,EAAOqD,EAAU,CAAE+B,SAAS,KAGtClC,EAKDD,EAAYjD,EAAQ,CAAEqF,SAAU1D,EAAK2D,iBAAiB9C,KAAKb,IAASsB,IAJpEA,EAAYjD,EAAOqD,EAAU,CAAEqB,MAAM,KAE3BW,SAAW1D,EAAK2D,iBAAiB9C,KAAKb,GAKhDuB,GACAvB,EAAKuC,WAAWqB,YAAY3D,KAAKF,QAAQ8B,iBACzC7B,EAAKuC,WAAW9B,SAASR,KAAKF,QAAQ+B,mBACtCpB,EAAQD,SAAS1B,KAEjBiB,EAAKuC,WAAWqB,YAAY3D,KAAKF,QAAQ+B,mBACzC9B,EAAKuC,WAAW9B,SAASR,KAAKF,QAAQ8B,iBACtCnB,EAAQkD,YAAY7E,IAGxBe,EAAQK,KAAKrB,GAAcyC,GAC3BvB,EAAKgC,OAAO7B,KAAKtB,EAAe0C,GAEhCvB,EAAK4C,eACJiB,WAAU,GAAM,GAChBC,aAAaxC,IAGlBqC,iBAAkB,WACd1D,KAAKkD,QAAQzE,IAGjBsC,SAAU,SAASgC,GACf,IACIe,EAAMf,EAAEgB,QAEPD,GAAO3F,EAAK6F,OAASF,GAAO3F,EAAK8F,WAAalG,EAAEgF,EAAEmB,QAAQC,GAAG,4BAHvDnE,KAIFW,OAAOoC,GACZA,EAAEK,mBAIVgB,QAAS,WACMpE,KAENS,QAAQ4D,IAAI/F,GACjBL,EAAOkC,GAAGiE,QAAQhE,KAHPJ,OAMfsE,OAAQ,SAASC,GACbvE,KAAKS,QAAQ+D,YAAY9F,GAAgB6F,GACzCvE,KAAK+B,OAAO7B,KAAKvB,GAAgB4F,IAGrCzD,MAAO,WACQd,KAEF+B,QAFE/B,KAGFS,QAAQkD,YAAY5E,IAIjC8B,OAAQ,WACOb,KAEFS,SAFET,KAGFS,QAAQD,SAASzB,MAIlCb,EAAGuG,OAAOxF","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"expansionpanel\",\n        name: \"ExpansionPanel\",\n        category: \"web\",\n        description: \"The ExpansionPanel provides an expandable details-summary view\",\n        depends: [\"core\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n            keys = kendo.keys,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            NS = \".kendoExpansionPanel\",\n            EXPAND = \"expand\",\n            COLLAPSE = \"collapse\",\n            COMPLETE = \"complete\",\n            STATEDISABLED = \"k-disabled\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            EXPANDED = \"k-expanded\",\n            EXPANDER_CONTENT = \"k-expander-content\",\n            EXPANDER_CONTENT_WRAPPER = \"k-expander-content-wrapper\",\n            INDICATOR = \".k-expander-indicator\",\n            FOCUSED = \"k-focus\",\n            CLICK = \"click\",\n            KEYDOWN = \"keydown\",\n            HEIGHT = \"height\",\n\n            headerTemplate = function (ref) {\n                    var title = ref.title;\n                    var subTitle = ref.subTitle;\n                    var iconClass = ref.iconClass;\n                    var useBareTemplate = ref.useBareTemplate;\n                    var ns = ref.ns;\n                    var elementId = ref.elementId;\n\n                    return \"<div \" + (!useBareTemplate ? 'class=\"k-expander-header\"' : '') + \" data-\" + ns + \"expander-header role=\\\"button\\\" tabindex=\\\"0\\\" aria-controls=\\\"\" + (encode(elementId)) + \"\\\">\" +\n                    (!useBareTemplate ? (\"<div class=\\\"k-expander-title\\\">\" + (encode(title)) + \"</div>\") : title) +\n                    '<span class=\"k-expander-spacer\"></span>' +\n                    (!useBareTemplate ? (\"<div class=\\\"k-expander-sub-title\\\">\" + (encode(subTitle)) + \"</div>\") : '') +\n                    \"<span class=\\\"k-expander-indicator \" + (encode(iconClass)) + \"\\\"></span>\" +\n                '</div>';\n        };\n\n        var ExpansionPanel = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                var headerAttribute = kendo.attr(\"expander-header\");\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n\n                that._wrapper();\n                that._animations(options);\n\n                that.element.attr(ARIA_HIDDEN, !options.expanded);\n\n                if (!that.options.useBareTemplate) {\n                    that.element.addClass(EXPANDER_CONTENT);\n                }\n\n                that.wrapper\n                    .on(CLICK + NS, '[' + headerAttribute + ']', that._click.bind(that))\n                    .on(\"focusin\" + NS, that._focus.bind(that))\n                    .on(\"focusout\" + NS, that._blur.bind(that))\n                    .on(KEYDOWN + NS, that._keydown.bind(that));\n\n                that.toggle(that.options.expanded, false);\n\n                kendo.notify(that);\n            },\n\n            events: [\n                EXPAND,\n                COLLAPSE,\n                COMPLETE\n            ],\n\n            options: {\n                name: 'ExpansionPanel',\n                disabled: false,\n                expanded: false,\n                animation: {\n                    expand: {\n                        effects: \"expand:vertical\",\n                        duration: 200\n                    },\n                    collapse: { // if collapse animation effects are defined, they will be used instead of expand.reverse\n                        duration: 200\n                    }\n                },\n                height: null,\n                toggleable: true,\n                expandIconClass: \"k-icon k-i-arrow-chevron-down\",\n                collapseIconClass: \"k-icon k-i-arrow-chevron-up\",\n                title: '',\n                subTitle: '',\n                headerClass: null,\n                useBareTemplate: false\n            },\n\n            _wrapper: function() {\n                var that = this;\n                var element = that.element;\n                var DOMElement = element[0];\n                var wrapper;\n                var header;\n                var elementId = element.attr(\"id\");\n\n                if (!elementId) {\n                    elementId = kendo.guid();\n                    element.attr(\"id\", elementId);\n                }\n\n                wrapper = element.wrap(\"<div class='k-widget k-expander\" + (that.options.expanded ? \" \" + EXPANDED : \"\") + \"'></div>\").parent();\n                header = kendo.template(headerTemplate)({\n                    title: that.options.title,\n                    subTitle: that.options.subTitle,\n                    iconClass: that.options.expanded ? that.options.expandIconClass : that.options.collapseIconClass,\n                    useBareTemplate: that.options.useBareTemplate,\n                    ns: kendo.ns,\n                    elementId: elementId\n                });\n                that.header = $(header);\n                wrapper.prepend(that.header);\n                that._indicator = wrapper.find(INDICATOR);\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = \"100%\";\n\n                that.wrapper = wrapper.addClass(that.options.disabled ? STATEDISABLED : '');\n                that.contentWrapper = that.element.wrap('<div></div>').parent().addClass(EXPANDER_CONTENT_WRAPPER);\n\n                that.header.attr(ARIA_DISABLED, that.options.disabled)\n                            .attr(ARIA_EXPANDED, that.options.expanded);\n\n                if (!that.options.useBareTemplate) {\n                    wrapper.addClass(DOMElement.className);\n                }\n\n                if (that.options.height) {\n                    that.wrapper.css(HEIGHT, that.options.height);\n                }\n\n                if (that.options.headerClass) {\n                    that.header.addClass(that.options.headerClass);\n                }\n            },\n\n            _animations: function(options) {\n                if (options && (\"animation\" in options) && !options.animation) {\n                    options.animation = { expand: { effects: {} }, collapse: { hide: true, effects: {} } };\n                }\n            },\n\n            _click: function(e) {\n                var that = this;\n                var expanded = that._indicator.hasClass(that.options.collapseIconClass);\n                var element = that.element;\n\n                e.stopPropagation();\n\n                if (!that.options.toggleable) {\n                    e.preventDefault();\n                    return;\n                }\n\n                if (!that.trigger( expanded ? COLLAPSE : EXPAND, { item: element[0] })) {\n                    that.toggle();\n                }\n            },\n\n            toggle: function(expand, animate) {\n                var that = this,\n                    animationSettings = that.options.animation,\n                    animation = animationSettings.expand,\n                    hasCollapseAnimation = animationSettings.collapse && \"effects\" in animationSettings.collapse,\n                    collapse = extend({}, animationSettings.expand, animationSettings.collapse),\n                    element = that.element,\n                    wrapper = that.wrapper;\n\n                if (expand !== undefined$1) {\n                    if (animate === false) {\n                        collapse = null;\n                    }\n                } else {\n                    expand = !that._indicator.hasClass(that.options.collapseIconClass);\n                }\n\n                if (!hasCollapseAnimation) {\n                    collapse = extend(collapse, { reverse: true });\n                }\n\n                if (!expand) {\n                    animation = extend(collapse, { hide: true });\n\n                    animation.complete = that._completeHandler.bind(that);\n                } else {\n                    animation = extend( { complete: that._completeHandler.bind(that) }, animation );\n                }\n\n                if (expand) {\n                    that._indicator.removeClass(this.options.expandIconClass);\n                    that._indicator.addClass(this.options.collapseIconClass);\n                    wrapper.addClass(EXPANDED);\n                } else {\n                    that._indicator.removeClass(this.options.collapseIconClass);\n                    that._indicator.addClass(this.options.expandIconClass);\n                    wrapper.removeClass(EXPANDED);\n                }\n\n                element.attr(ARIA_HIDDEN, !expand);\n                that.header.attr(ARIA_EXPANDED, expand);\n\n                that.contentWrapper\n                .kendoStop(true, true)\n                .kendoAnimate(animation);\n            },\n\n            _completeHandler: function() {\n                this.trigger(COMPLETE);\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode;\n\n                if ((key == keys.ENTER || key == keys.SPACEBAR) && $(e.target).is(\"[data-expander-header]\")) {\n                    that._click(e);\n                    e.preventDefault();\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n                Widget.fn.destroy.call(that);\n            },\n\n            enable: function(enabled) {\n                this.wrapper.toggleClass(STATEDISABLED, !enabled);\n                this.header.attr(ARIA_DISABLED, !enabled);\n            },\n\n            _blur: function() {\n                var that = this;\n\n                if (that.header) {\n                    that.wrapper.removeClass(FOCUSED);\n                }\n            },\n\n            _focus: function() {\n                var that = this;\n\n                if (that.wrapper) {\n                    that.wrapper.addClass(FOCUSED);\n                }\n            }\n        });\n        ui.plugin(ExpansionPanel);\n    })(window.kendo.jQuery);\n\n}));\n"]}