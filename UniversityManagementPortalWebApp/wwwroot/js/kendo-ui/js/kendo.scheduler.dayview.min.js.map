{"version":3,"file":"kendo.scheduler.dayview.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","ui","encode","htmlEncode","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","getDate","MS_PER_MINUTE","MS_PER_DAY","INVERSE_COLOR_CLASS","getMilliseconds","NS","DAY_VIEW_EVENT_TEMPLATE","template","ref","start","end","title","format","replace","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","isMobile","toString","ALLDAY_EVENT_WRAPPER_TEMPLATE","event","ariaLabel","attr","resources","tail","middle","isException","isRecurring","showDelete","messages","head","resizable","singleDay","EVENT_WRAPPER_TEMPLATE","toInvariantTime","staticDate","Date","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","events","_continuousEvents","lastEvent","length","startDate","getTime","idx","splice","uid","push","MultiDayView","init","options","that","this","fn","call","name","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","currentTimeMarkers","currentContentMarkers","timesTableMarkerWidth","position","elementHtml","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","times","find","content","groupsCount","orientation","groups","firstTimesCell","first","lastTimesCell","last","_isRtl","left","groupIndex","currentGroup","utcCurrentTime","toUtcTime","ranges","timeSlotRanges","collection","slotByStartDate","timesTableMarker","eq","prependTo","markerTopPosition","round","innerRect","top","timesTableMarkerCss","right","addClass","CURRENT_TIME_MARKER_ARROW_CLASS","css","height","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","_updateResizeHint","startTime","endTime","multiday","enforceAllDaySlot","isMultiDay","width","hint","_removeResizeHint","rangeIndex","startSlot","_isGroupedByDate","slotIdx","index","slot","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","rect","outerRect","snap","bottom","container","appendTo","text","toLocalDate","_updateMoveHint","distance","duration","_removeMoveHint","_end","pop","eventHint","clientWidth","offsetHeight","_createEventElement","clone","inverseColor","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","interval","_timeSlotInterval","verticalViews","tableRows","rowCount","floor","rowMultiplier","cellMultiplier","cells","children","timeIndex","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","_addResourceView","columnIndex","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","parent","hasClass","pageX","pageY","resourceInfo","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","useClickAsTap","browser","edge","tap","_scrolling","target","location","_allDayUserEvents","_editUserEvents","eventElement","touch","initialTouch","_layout","dates","columns","rows","column","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","toggleFullDay","isWorkDay","_footer","html","action","after","msStart","msMin","msMax","msMajorInterval","msInterval","startDay","majorTickDivider","_content","_renderRows","rowLevels","columnLevels","append","_virtualContent","isVerticalGroupped","dateID","levels","_recalculateLevels","appendRow","groupIdx","dateIndex","_addCellsToContent","rowIdx","_allDayVerticalGroupRow","result","dateGroupIndex","tmplDate","classes","_isWorkDay","day","getDay","i","_render","_startDate","_endDate","createLayout","refreshLayout","_isVirtualized","_tryRenderContent","allDayHeader","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","remove","inRange","selectionByElement","innerHeight","_timeSlotIndex","_slotIndex","_dateSlotIndex","slots","_positionAllDayEvent","slotRange","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","rightOffset","eventHeight","addEvent","slotIndex","createRows","rowEvents","j","eventLength","_arrangeColumns","columnEvents","eventRightOffset","eventElements","slotEvents","tableEl","table","contentEl","columnWidth","createColumns","calculatedWidth","style","scrollWidth","_positionEvent","_startTime","_endTime","borderWidths","getComputedStyles","parseFloat","isOneDayEvent","resize","eventStartTime","_time","eventEndTime","eventStartDate","eventEndDate","eventResources","apply","data","ns","_formatEventAriaLabel","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","slotStart","firstSlot","slotEnd","lastSlot","_updateAllDayHeaderHeight","_height","allDaySlots","refresh","_renderEvents","allDayEventContainer","isMultiDayEvent","slotRanges","newStart","newEnd","dateRange","daySlotRanges","_inverseEventColor","rangeCount","occurrence","render","_cachedEvents","Query","sort","field","dir","toArray","eventsByResource","_eventsByResource","eventsPerDate","map","grep","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","endMilliseconds","newDateStart","newDateEnd","verticalByDate","_timeSlotCollections","_getCollections","daySlotCollectionCount","_isInRange","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","indexOf","jQuery"],"sources":["kendo.scheduler.dayview.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.scheduler.view'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"scheduler.dayview\",\n        name: \"Scheduler Day View\",\n        category: \"web\",\n        description: \"The Scheduler Day View\",\n        depends: [ \"scheduler.view\" ],\n        hidden: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            setTime = kendo.date.setTime,\n            SchedulerView = ui.SchedulerView,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            getDate = kendo.date.getDate,\n            MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n            MS_PER_DAY = kendo.date.MS_PER_DAY,\n            CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n            CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n            INVERSE_COLOR_CLASS = \"k-event-inverse\",\n            BORDER_SIZE_COEFF = 0.8666,\n            getMilliseconds = kendo.date.getMilliseconds,\n            NS = \".kendoMultiDayView\";\n\n        var DAY_VIEW_EVENT_TEMPLATE = kendo.template(function (ref) {\n            var start = ref.start;\n            var end = ref.end;\n            var title = ref.title;\n\n            return \"<div title=\\\"(\" + (kendo.format(\"{0:t} - {1:t}\", start, end)) + \"): \" + (title.replace(/\"/g,\"&#34;\")) + \"\\\">\" +\n                        \"<div class=\\\"k-event-template k-event-time\\\">\" + (encode(kendo.format(\"{0:t} - {1:t}\", start, end))) + \"</div>\" +\n                        \"<div class=\\\"k-event-template\\\">\" + title + \"</div>\" +\n                    '</div>';\n        }),\n\n            DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template(function (ref) {\n                var start = ref.start;\n                var title = ref.title;\n\n                return \"<div title=\\\"(\" + (kendo.format(\"{0:t}\", start)) + \"): \" + (title.replace(/\"/g,\"&#34;\")) + \"\\\">\" +\n                        \"<div class=\\\"k-event-template\\\">\" + title + \"</div>\" +\n                    '</div>';\n        }),\n\n            DATA_HEADER_TEMPLATE = kendo.template(function (ref) {\n                var isMobile = ref.isMobile;\n                var date = ref.date;\n\n                return (\"<span class='k-link k-nav-day'>\" + (isMobile ? kendo.toString(date,'ddd')[0] : kendo.toString(date,'ddd M/dd')) + \"</span>\");\n        }),\n\n            ALLDAY_EVENT_WRAPPER_TEMPLATE = function (event) { return \"<div role=\\\"button\\\" aria-label=\\\"\" + (encode(event.ariaLabel)) + \"\\\" \" + (kendo.attr('uid')) + \"=\\\"\" + (event.uid) + \"\\\"\" +\n                    ((event.resources[0] ? (\"style=\\\"background-color:\" + (event.resources[0].color) + \"; border-color: \" + (event.resources[0].color) + \"\\\"\") : '')) + \" class=\\\"k-event\\\">\" +\n                    '<span class=\"k-event-actions\">' +\n                        (event.tail || event.middle ? '<span class=\"k-icon k-i-arrow-60-left\"></span>' : '') +\n                        (event.isException() ? '<span class=\"k-icon k-i-non-recurrence\"></span>' : (event.isRecurring() ? '<span class=\"k-icon k-i-reload\"></span>' : '') ) +\n                    '</span>' +\n                    kendo.template(event.template)(event) +\n                    '<span class=\"k-event-actions\">' +\n                        (event.showDelete ? (\"<a href=\\\"#\\\" class=\\\"k-link k-event-delete\\\" title=\\\"\" + (event.messages.destroy) + \"\\\" aria-label=\\\"\" + (event.messages.destroy) + \"\\\"><span class=\\\"k-icon k-i-close\\\"></span></a>\") : '') +\n                        (event.head || event.middle ? '<span class=\"k-icon k-i-arrow-60-right\"></span>' : '') +\n                    '</span>' +\n                    (event.resizable && !event.singleDay && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-w\"></span>' : '') +\n                    (event.resizable && !event.singleDay && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-e\"></span>' : '') +\n                '</div>'; },\n\n            EVENT_WRAPPER_TEMPLATE = function (event) { return \"<div role=\\\"button\\\" aria-label=\\\"\" + (encode(event.ariaLabel)) + \"\\\" \" + (kendo.attr('uid')) + \"=\\\"\" + (event.uid) + \"\\\"\" +\n                    ((event.resources[0] ? (\"style=\\\"background-color:\" + (event.resources[0].color) + \"; border-color: \" + (event.resources[0].color) + \"\\\"\") : '')) + \" class=\\\"k-event\\\">\" +\n                     '<span class=\"k-event-actions\">' +\n                        (event.isException() ? '<span class=\"k-icon k-i-non-recurrence\"></span>' : (event.isRecurring() ? '<span class=\"k-icon k-i-reload\"></span>' : '') ) +\n                    '</span>' +\n                    kendo.template(event.template)(event) +\n                    '<span class=\"k-event-actions\">' +\n                        (event.showDelete ? (\"<a href=\\\"#\\\" class=\\\"k-link k-event-delete\\\" title=\\\"\" + (event.messages.destroy) + \"\\\" aria-label=\\\"\" + (event.messages.destroy) + \"\\\"><span class=\\\"k-icon k-i-close\\\"></span></a>\") : '') +\n                    '</span>' +\n                    '<span class=\"k-event-top-actions\">' +\n                        (event.tail || event.middle ? '<span class=\"k-icon k-i-arrow-60-up\"></span>' : '') +\n                    '</span>' +\n                    '<span class=\"k-event-bottom-actions\">' +\n                        (event.head || event.middle ? '<span class=\"k-icon k-i-arrow-60-down\"></span>' : '') +\n                    '</span>' +\n                    (event.resizable && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-n\"></span>' : '') +\n                    (event.resizable && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-s\"></span>' : '') +\n                '</div>'; };\n\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n\n        function isInDateRange(value, min, max) {\n            return value >= min && value <= max;\n        }\n\n        function isInTimeRange(value, min, max, overlaps) {\n            overlaps = overlaps ? value <= max : value < max;\n            return value > min && overlaps;\n        }\n\n        function addContinuousEvent(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n            var lastEvent = events[events.length - 1];\n            var startDate = getDate(range.start.startDate()).getTime();\n\n            //this handles all day event which is over multiple slots but starts\n            //after one of the time events\n            if (isAllDay && lastEvent &&\n                getDate(lastEvent.start.startDate()).getTime() == startDate) {\n\n                    var idx = events.length - 1;\n                    for ( ; idx > -1; idx --) {\n                        if (events[idx].isAllDay ||\n                            getDate(events[idx].start.startDate()).getTime() < startDate) {\n                                break;\n                            }\n                    }\n\n                    events.splice(idx + 1, 0, {\n                        element: element,\n                        isAllDay: true,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        start: range.start,\n                        end: range.end\n                    });\n                } else {\n                    events.push({\n                        element: element,\n                        isAllDay: isAllDay,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        start: range.start,\n                        end: range.end\n                    });\n                }\n        }\n\n        function getWorkDays(options) {\n            if (options.workDays && options.workDays.length) {\n                return options.workDays;\n            }\n\n            var workDays = [];\n            var dayIndex = options.workWeekStart % 7;\n            var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n            workDays.push(dayIndex);\n\n            while (workWeekEnd != dayIndex) {\n                if (dayIndex > 6 ) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n\n        var MultiDayView = SchedulerView.extend({\n            init: function(element, options) {\n                var that = this;\n\n                SchedulerView.fn.init.call(that, element, options);\n\n                that.title = that.options.title || that.options.name;\n\n                that._workDays = getWorkDays(that.options);\n\n                that._templates();\n\n                that._editable();\n\n                that.calculateDateRange();\n\n                that._groups();\n\n                that._currentTime(true);\n            },\n\n            _currentTimeMarkerUpdater: function() {\n                this._updateCurrentTimeMarker(new Date());\n            },\n\n            _updateCurrentTimeMarker: function(currentTime) {\n                var options = this.options,\n                    currentTimeMarkers, currentContentMarkers, timesTableMarkerWidth, position,\n                    elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n\n                    if (options.dataSource && timezone) {\n                       var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                       currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n\n                currentTimeMarkers = this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n                currentContentMarkers = this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n\n                var groupsCount = !options.group || options.group.orientation == \"horizontal\" ? 1 : this.groups.length;\n                var firstTimesCell = this.times.find(\"tr\").first().find(\"th\").first();\n                var lastTimesCell = this.times.find(\"tr\").first().find(\"th\").last();\n\n                if (firstTimesCell.length > 0 && lastTimesCell.length > 0) {\n                    if (this._isRtl) {\n                        position = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                    } else {\n                        position = lastTimesCell.position().left;\n                    }\n                }\n\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n\n                    if (!currentGroup) {\n                        return;\n                    }\n\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                    if (ranges.length === 0) {\n                        return;\n                    }\n\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n\n                    if (slotElement) {\n                        var timesTableMarker = currentTimeMarkers[groupIndex] ? currentTimeMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.times);\n                        var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n\n                        var timesTableMarkerCss = {};\n\n                        if (this._isRtl) {\n                            timesTableMarkerCss.right = position;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n                        } else {\n                            timesTableMarkerCss.left = position;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n                        }\n\n                        if (!timesTableMarkerWidth) {\n                            timesTableMarkerWidth = (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n                        }\n\n                        timesTableMarkerCss.top = markerTopPosition - timesTableMarkerWidth;\n\n                        timesTableMarker.css(timesTableMarkerCss);\n\n                        var contentMarker = currentContentMarkers[groupIndex] ? currentContentMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.content);\n\n                        contentMarker.css({\n                            top: markerTopPosition,\n                            height: \"1px\",\n                            right: 0,\n                            left: 0\n                        });\n                    }\n                }\n            },\n\n            _currentTime: function(setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                    that._currentTimeMarkerUpdater();\n\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                    }\n                }\n            },\n\n            _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n                var multiday;\n\n                if (this.options.enforceAllDaySlot) {\n                    multiday = event.isMultiDay();\n                } else {\n                    multiday = event.isAllDay;\n                }\n\n                var group = this.groups[groupIndex];\n\n                var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n                var width, height, top, hint;\n\n                this._removeResizeHint();\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            width = slot.offsetWidth;\n                            height = slot.clientHeight;\n                            top = slot.offsetTop;\n\n                            hint = SchedulerView.fn._createResizeHint.call(this,\n                                slot.offsetLeft,\n                                top,\n                                width,\n                                height\n                            );\n\n                            this._resizeHint = this._resizeHint.add(hint);\n                        }\n                    } else {\n                        width = start.offsetWidth;\n                        height = start.clientHeight;\n                        top = start.offsetTop;\n\n                        if (multiday) {\n                            width = range.innerWidth();\n                        } else {\n                            var rect = range.outerRect(startTime, endTime, this.options.snap);\n                            top = rect.top;\n                            height = rect.bottom - rect.top;\n                        }\n\n                        hint = SchedulerView.fn._createResizeHint.call(this,\n                            start.offsetLeft,\n                            top,\n                            width,\n                            height\n                        );\n\n                       this._resizeHint = this._resizeHint.add(hint);\n                    }\n                }\n\n                var format = \"t\";\n                var container = this.content;\n\n                if (multiday) {\n                    format = \"M/dd\";\n                    container = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                    if (!container.length) {\n                        container = this.content;\n                    }\n                }\n\n                this._resizeHint.appendTo(container);\n\n                this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n                this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n                this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n\n            _updateMoveHint: function(event, groupIndex, distance) {\n                var multiday;\n\n                if (this.options.enforceAllDaySlot) {\n                    multiday = event.isMultiDay();\n                } else {\n                    multiday = event.isAllDay;\n                }\n\n                var group = this.groups[groupIndex];\n\n                var start = kendo.date.toUtcTime(event.start) + distance;\n\n                var end = start + event.duration();\n\n                var ranges = group.ranges(start, end, multiday, event.isAllDay);\n\n                start = kendo.timezone.toLocalDate(start);\n\n                end = kendo.timezone.toLocalDate(end);\n\n                this._removeMoveHint(event.uid);\n\n                if (!multiday &&\n                    getMilliseconds(end) < getMilliseconds(this.startTime()) &&\n                    (end < this._end().getTime()) &&\n                    getMilliseconds(end) !== 0 &&\n                    ranges.length > 1) {\n                        ranges.pop();\n                }\n\n                var eventHint = $();\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint;\n                    var css = {\n                        left: startSlot.offsetLeft + 2,\n                        top: startSlot.offsetTop\n                    };\n\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n\n                            css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                            css.height = slot.offsetHeight;\n                            css.width = slot.clientWidth * 0.9 - 2;\n\n                            hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                            if (event.inverseColor) {\n                                hint.addClass(INVERSE_COLOR_CLASS);\n                            }\n\n                            this._appendMoveHint(hint, css);\n                            eventHint = eventHint.add(hint);\n                        }\n                    } else {\n                        if (this._isRtl) {\n                           css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                        }\n\n                        if (multiday) {\n                            css.width = range.innerWidth() - 2;\n                        } else {\n                            var rect = range.outerRect(start, end, this.options.snap);\n                            css.top = rect.top;\n                            css.height = rect.bottom - rect.top;\n                            css.width = startSlot.clientWidth * 0.9 - 2;\n                        }\n\n                        hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                        if (event.inverseColor) {\n                            hint.addClass(INVERSE_COLOR_CLASS);\n                        }\n\n                        this._appendMoveHint(hint, css);\n                        eventHint = eventHint.add(hint);\n                    }\n                }\n\n                var content = this.content;\n\n                if (multiday) {\n                    content = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                    if (!content.length) {\n                        content = this.content;\n                    }\n                }\n\n                eventHint.appendTo(content);\n            },\n\n            _appendMoveHint: function(hint, css) {\n                hint.addClass(\"k-event-drag-hint\");\n\n                hint.css(css);\n\n                this._moveHint = this._moveHint.add(hint);\n           },\n\n           _slotByPosition: function(x, y) {\n               var slot, offset;\n\n               if (this._isVerticallyGrouped()) {\n                   offset = this.content.offset();\n                   y += this.content[0].scrollTop;\n                   x += this.content[0].scrollLeft;\n               } else {\n                   offset = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day)\").find(\">div\").offset();\n               }\n\n               if (offset) {\n                   x -= offset.left;\n                   y -= offset.top;\n               }\n\n               x = Math.ceil(x);\n               y = Math.ceil(y);\n\n               var group;\n               var groupIndex;\n\n               for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n\n                    slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n\n                    if (slot) {\n                        return slot;\n                    }\n               }\n\n               if (offset) {\n                   x += offset.left;\n                   y += offset.top;\n               }\n\n               offset = this.content.offset();\n\n               x -= offset.left;\n               y -= offset.top;\n\n               if (!this._isVerticallyGrouped()) {\n                   y += this.content[0].scrollTop;\n                   x += this.content[0].scrollLeft;\n               }\n\n               x = Math.ceil(x);\n               y = Math.ceil(y);\n\n               for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n\n                    slot = group.timeSlotByPosition(x, y);\n\n                    if (slot) {\n                        return slot;\n                    }\n               }\n\n               return null;\n           },\n\n           _groupCount: function() {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n\n                if (resources.length) {\n                    if (this._groupOrientation() === \"vertical\") {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length - 1);\n                        } else {\n                            return this._rowCountForLevel(resources.length - 1);\n                        }\n                    } else {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                        } else {\n                              return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                        }\n                    }\n                }\n                return 1;\n            },\n\n            _columnCountInResourceView: function() {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n\n                if (!resources.length || this._isVerticallyGrouped()) {\n                    if (byDate) {\n                         return this._rowCountForLevel(0);\n                    } else {\n                         return this._columnCountForLevel(0);\n                    }\n                }\n\n                if (byDate) {\n                    return this._columnCountForLevel(0);\n                } else {\n                    return this._columnOffsetForResource(resources.length);\n                }\n            },\n\n            _timeSlotGroups: function(groupCount, columnCount) {\n                var interval = this._timeSlotInterval();\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                var tableRows = this.content.find(\"tr:not(.k-scheduler-header-all-day)\");\n                var group, time, rowIndex, cellIndex;\n                var rowCount = tableRows.length;\n\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    rowCount = Math.floor(rowCount / verticalViews);\n                }\n\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var cellMultiplier = 0;\n\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    } else {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    rowIndex = rowMultiplier * rowCount;\n\n                  while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                        var cells = tableRows[rowIndex].children;\n\n                        if (rowIndex % rowCount === 0) {\n                            time = getMilliseconds(new Date(+this.startTime()));\n                        }\n\n                        var timeIndex = 0;\n                        if (byDate) {\n                            if (this._isVerticallyGrouped()) {\n                                for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                    group = this.groups[cellIndex];\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                                }\n                            } else {\n                                group = this.groups[groupIndex];\n                                for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                    timeIndex++;\n                                }\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                 timeIndex++;\n                            }\n                        }\n\n                        time += interval;\n                        rowIndex ++;\n                    }\n                }\n            },\n\n            _addTimeSlotGroup: function(group, cells, cellIndex, time, interval, timeIndex) {\n                  var cell = cells[cellIndex];\n                  var collection = group.getTimeSlotCollection(timeIndex);\n                  var currentDate = this._dates[timeIndex];\n                  if (!currentDate || !cell) {\n                      return;\n                  }\n                  var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                  var start = currentTime + time;\n                  var end = start + interval;\n\n                  collection.addTimeSlot(cell, start, end);\n            },\n\n             _addDaySlotGroup: function(collection, cells, cellIndex, columnCount, cellCount) {\n                    var cell = cells[cellIndex];\n                    var start = this._dates[cellCount];\n                    if (!start) {\n                        return;\n                    }\n                    var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n\n                    collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n            },\n\n            _daySlotGroups: function(groupCount, columnCount) {\n                var tableRows, cellIndex;\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    tableRows = this.element.find(\".k-scheduler-header-all-day\");\n                } else {\n                    tableRows = this.element.find(\".k-scheduler-header-all-day tr\");\n                }\n\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group, collection;\n\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n\n                    var cells = tableRows[rowMultiplier].children;\n                    var cellMultiplier = 0;\n\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    var cellCount = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                collection = group.getDaySlotCollection(0);\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            collection = group.getDaySlotCollection(0);\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                                cellCount++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                }\n            },\n\n            _groups: function() {\n                var groupCount = this._groupCount();\n                var columnCount = this._columnCountInResourceView();\n\n                this.groups = [];\n\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n\n                    for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                        if (this._dates[columnIndex]) {\n                            view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                        }\n                    }\n\n                    if (this.options.allDaySlot) {\n                        view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                    }\n                }\n\n                this._timeSlotGroups(groupCount, columnCount);\n\n                if (this.options.allDaySlot) {\n                    this._daySlotGroups(groupCount, columnCount);\n                }\n            },\n\n            options: {\n                name: \"MultiDayView\",\n                selectedDateFormat: \"{0:D}\",\n                selectedShortDateFormat: \"{0:d}\",\n                selectedMobileDateFormat: \"{0:MMM} {0:dd} - {1:dd}\",\n                allDaySlot: true,\n                showWorkHours: false,\n                title: \"\",\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                minorTickCount: 2,\n                majorTick: 60,\n                majorTimeHeaderTemplate: function (ref) {\n                    var date = ref.date;\n\n                    return (\"<span>\" + (kendo.toString(date, 't')) + \"</span>\");\n        },\n                minorTimeHeaderTemplate: function () { return \"&#8203;\"; },\n                groupHeaderTemplate: function (ref) {\n                    var text = ref.text;\n\n                    return text;\n        },\n                slotTemplate: function () { return \"&nbsp;\"; },\n                allDaySlotTemplate: function () { return \"&nbsp;\"; },\n                eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n                allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                footer: {\n                    command: \"workDay\"\n                },\n                messages: {\n                    allDay: \"all day\",\n                    showFullDay: \"Show full day\",\n                    showWorkDay: \"Show business hours\"\n                },\n                currentTimeMarker: {\n                     updateInterval: 10000,\n                     useLocalTimezone: true\n                },\n                // a hidden option that provides us a fallback to the previous behaviour\n                // e.g. all events of 24 hours or more will be rendered in the allDaySlot\n                enforceAllDaySlot: false\n            },\n\n            events: [\"remove\", \"add\", \"edit\"],\n\n            _templates: function() {\n                var options = this.options,\n                    settings = extend({}, kendo.Template, options.templateSettings);\n\n                this.allDayEventTemplate = kendo.template(ALLDAY_EVENT_WRAPPER_TEMPLATE);\n                this.eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n\n            _editable: function() {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n\n            _mouseEditable: function() {\n                var that = this;\n                that.element.on(\"click\" + NS, \".k-event a:has(.k-i-close)\", function(e) {\n                    that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n\n                if (that.options.editable.create !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-scheduler-content > table td\", function(e) {\n                        if (!$(this).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                            var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    }).on(\"dblclick\" + NS, \".k-scheduler-header-all-day td\", function(e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                        }\n                        e.preventDefault();\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                        that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                        e.preventDefault();\n                    });\n                }\n            },\n\n            _touchEditable: function() {\n                var that = this;\n                var threshold = 0;\n\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: \".k-scheduler-content td\",\n                        useClickAsTap: !kendo.support.browser.edge,\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            if (!$(e.target).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                                var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                                var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                                var slot = that._slotByPosition(x, y);\n\n                                if (slot) {\n                                    var resourceInfo = that._resourceBySlot(slot);\n                                    that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                                }\n\n                                e.preventDefault();\n                            }\n                        }\n                    });\n\n                    that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-scheduler-header-all-day td\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                            var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-event\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var eventElement = $(e.target).closest(\".k-event\");\n                            var touchElement = $(e.touch.initialTouch);\n\n                            if (touchElement.hasClass(\"k-i-close\")) {\n                                that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                            } else if (!eventElement.hasClass(\"k-event-active\")) {\n                                that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n\n            _layout: function(dates) {\n                var columns = [];\n                var rows = [];\n                var options = this.options;\n                var that = this;\n                var byDate = that._isGroupedByDate();\n\n                for (var idx = 0; idx < dates.length; idx++) {\n                    var column = {};\n\n                    column.text = that.dateHeaderTemplate({ date: dates[idx], isMobile: that._isMobile() });\n\n                    if (kendo.date.isToday(dates[idx])) {\n                        column.className = \"k-today\";\n                    }\n\n                    columns.push(column);\n                }\n\n                var resources = this.groupedResources;\n\n                if (options.allDaySlot) {\n                    rows.push({\n                        text: options.messages.allDay, allDay: true,\n                        cellContent: function(idx) {\n                            var groupIndex = idx;\n\n                            idx = resources.length && that._groupOrientation() !== \"vertical\" ? idx % dates.length : idx;\n\n                            return that.allDaySlotTemplate({ date: dates[idx], resources: function() {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                }\n                            });\n                        }\n                    });\n                }\n\n                this._forTimeRange(this.startTime(), this.endTime(), function(date, majorTick, middleRow, lastSlotRow) {\n                    var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n\n                    var row = {\n                        text: template({ date: date }),\n                        className: lastSlotRow ? \"k-slot-cell\" : \"\"\n                    };\n\n                    rows.push(row);\n                });\n\n\n                if (resources.length) {\n                    if (this._groupOrientation() === \"vertical\") {\n                        if (byDate) {\n                            rows = this._createDateLayout(columns, rows);\n                            columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                        } else {\n                            rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                        }\n                    } else {\n                          if (byDate) {\n                             columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                          } else {\n                             columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                          }\n                    }\n                }\n\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n\n            toggleFullDay: function() {\n                var options = this.options;\n\n                this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n            },\n\n            _footer: function() {\n                var options = this.options;\n\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-scheduler-footer k-toolbar\" role=\"toolbar\">';\n\n                    var command = options.footer.command;\n\n                    if (this._isMobile()) {\n                        html += '<span class=\"k-scheduler-today\"><a href=\"#\" tabindex=\"-1\" class=\"k-link\">';\n                        html += options.messages.today + '</a></span>';\n                    }\n                    if (command && command === \"workDay\") {\n                        if (this._isMobile()) {\n                            html += '<span class=\"k-scheduler-fullday\"><a href=\"#\" tabindex=\"-1\" class=\"k-link\">';\n                            html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></span>';\n                        } else {\n                            html += '<button type=\"button\" tabindex=\"-1\" class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-scheduler-fullday\">';\n                                html += '<span class=\"k-button-icon k-icon k-i-clock\"></span>';\n                                html += '<span class=\"k-button-text\">';\n                                    html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay);\n                                html += '</span>';\n                            html += '</button>';\n                        }\n                    }\n\n                    html += \"</div>\";\n\n                    this.footer = $(html).appendTo(this.element);\n\n                    var that = this;\n\n                    this.footer.on(\"click\" + NS, \".k-scheduler-fullday\", function(e) {\n                        e.preventDefault();\n                        that.toggleFullDay();\n                    });\n\n                    this.footer.on(\"click\" + NS, \".k-scheduler-today\", function(e) {\n                        e.preventDefault();\n                        var timezone = that.options.timezone;\n                        var action = \"today\";\n                        var currentDate = new Date();\n                        var date;\n\n                        if (timezone) {\n                            var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                            date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                        } else {\n                            date = currentDate;\n                        }\n\n                        that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n                    });\n                }\n            },\n\n            _forTimeRange: function(min, max, action, after) {\n                min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n                max = toInvariantTime(max);\n\n                var that = this,\n                    msMin = getMilliseconds(min),\n                    msMax = getMilliseconds(max),\n                    minorTickCount = that.options.minorTickCount,\n                    msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                    msInterval = msMajorInterval / minorTickCount || 1,\n                    start = new Date(+min),\n                    startDay = start.getDate(),\n                    msStart,\n                    idx = 0, length,\n                    html = \"\";\n\n                length = MS_PER_DAY / msInterval;\n\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n\n                    length = ((msMax - msMin) / msInterval);\n                }\n\n                length = Math.round(length);\n\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval),\n                        isMajorTickRow = majorTickDivider === 0,\n                        isMiddleRow = majorTickDivider < minorTickCount - 1,\n                        isLastSlotRow = majorTickDivider === minorTickCount - 1;\n\n                    html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n\n                    setTime(start, msInterval, false);\n                }\n\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n\n                if (after) {\n                    html += after(start);\n                }\n\n                return html;\n            },\n\n            _content: function(dates) {\n                var that = this;\n                var html = '';\n\n                html += '<tbody>';\n\n                html += that._renderRows(dates, that.rowLevels, that.columnLevels);\n\n                html += '</tbody>';\n\n                this.content.find(\"table\").append(html);\n            },\n\n            _virtualContent: function(rowLevels, columnLevels) {\n                var that = this;\n                var html = '';\n                var dates = that._dates;\n\n                html += that._renderRows(dates, rowLevels, columnLevels);\n\n                that.content.find(\"table tbody\").append(html);\n            },\n\n            _renderRows: function(dates, rowLevels, columnLevels) {\n                var that = this;\n                var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n                var byDate = that._isGroupedByDate();\n                var dateID = 0;\n                var columnCount = dates.length;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var resources = this.groupedResources;\n                var html = '';\n\n                if (resources.length) {\n                    var levels = that._recalculateLevels(rowLevels, columnLevels);\n\n                    rowCount = levels.rowCount;\n                    groupsCount = levels.groupsCount;\n                }\n\n                var appendRow = function(date, majorTick, middleRow) {\n                    var content = \"\";\n                    var groupIdx = 0;\n                    var idx, length;\n\n                    content = '<tr' + (middleRow ? ' class=\"k-middle-row\"' : \"\") + '>';\n\n                    if (byDate) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                                var dateIndex = idx;\n                                if (isVerticalGroupped) {\n                                    dateIndex = dateID;\n                                }\n                                content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n\n                            }\n                            if (isVerticalGroupped) {\n\n                                break;\n                            }\n                        }\n                    } else {\n                         for (; groupIdx < groupsCount; groupIdx++) {\n                            for (idx = 0, length = columnCount; idx < length; idx++) {\n                                content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                            }\n                         }\n                    }\n\n                    content += \"</tr>\";\n\n                    return content;\n                };\n\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += options.allDaySlot && isVerticalGroupped ? this._allDayVerticalGroupRow(dates, rowIdx, groupsCount, dateID) : \"\";\n\n                    html += this._forTimeRange(start, end, appendRow);\n                    if (isVerticalGroupped) {\n                            dateID++;\n                    }\n                }\n\n                return html;\n            },\n\n            _recalculateLevels: function(rowLevels, columnLevels) {\n                var that = this;\n                var byDate = that._isGroupedByDate();\n                var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n                var groupsCount = 1;\n                var rowCount = 1;\n\n                if (isVerticalGroupped) {\n                    rowCount = that._rowCountForLevel(rowLevels.length - 2, rowLevels);\n\n                    if (byDate) {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 1);\n                    }\n                } else {\n                    if (byDate) {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 1) / this._columnCountForLevel(0);\n                    } else {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 2);\n                    }\n                }\n\n                return {\n                    rowCount: rowCount,\n                    groupsCount: groupsCount\n                };\n            },\n\n            _allDayVerticalGroupRow: function(dates, groupIndex, groupsCount, dateID) {\n                var that = this;\n                var result = '<tr class=\"k-scheduler-header-all-day\">';\n                var byDate = that._isGroupedByDate();\n                var dateGroupIndex = byDate ? 0 : groupIndex;\n                var allDaySlotTemplate = that.allDaySlotTemplate;\n\n                var resources = function() {\n                    return that._resourceBySlot({ groupIndex: dateGroupIndex });\n                };\n\n                if (byDate) {\n                    for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                        result += \"<td>\" + allDaySlotTemplate({ date: dates[dateID], resources: resources }) + \"</td>\";\n                    }\n                } else {\n                    for (var idx = 0; idx < dates.length; idx++) {\n                        result += \"<td>\" + allDaySlotTemplate({ date: dates[idx], resources: resources }) + \"</td>\";\n                    }\n                }\n\n                return result + \"</tr>\";\n            },\n\n            _addCellsToContent: function(content, dates, date, idx, groupIdx, rowIdx) {\n                var that = this;\n                var classes = \"\";\n                var tmplDate;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGroupped = this._groupOrientation() === \"vertical\";\n                var resources = function(groupIndex) {\n                    return function() {\n                        return that._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) ||\n                    !this._isWorkDay(dates[idx])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx) });\n                content += \"</td>\";\n                return content;\n            },\n\n            _isWorkDay: function(date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n\n            _render: function(dates) {\n                var that = this;\n\n                dates = dates || [];\n\n                this._dates = dates;\n\n                this._startDate = dates[0];\n\n                this._endDate = dates[(dates.length - 1) || 0];\n\n                this.createLayout(this._layout(dates));\n\n                this._content(dates);\n\n                this._footer();\n\n                this.refreshLayout();\n\n                if (this._isVirtualized()) {\n                    this._tryRenderContent();\n                }\n\n                var allDayHeader = this.element.find(\".k-scheduler-header-all-day td\");\n\n                if (allDayHeader.length) {\n                    this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n                }\n\n                that.element.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                    var th = $(e.currentTarget).closest(\"th\");\n                    var offset = th.offset();\n                    var additioanlWidth = 0;\n                    var additionalHeight = outerHeight(th);\n\n                    if (that._isGroupedByDate()) {\n                        if (that._isVerticallyGrouped()) {\n                            additioanlWidth = outerWidth(that.times);\n                            additionalHeight = 0;\n                        } else {\n                            additionalHeight = outerHeight(that.datesHeader);\n                        }\n                    }\n\n                    var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n\n                    that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n                });\n            },\n\n            startTime: function() {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n\n            endTime: function() {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n\n            startDate: function() {\n                return this._startDate;\n            },\n\n            endDate: function() {\n                return this._endDate;\n            },\n\n            _end: function(isAllDay) {\n                var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n\n                if (isAllDay) {\n                    time = 0;\n                }\n\n                return new Date(this._endDate.getTime() + time);\n            },\n\n            nextDate: function() {\n                return kendo.date.nextDay(this.endDate());\n            },\n\n            previousDate: function() {\n                return kendo.date.previousDay(this.startDate());\n            },\n\n            calculateDateRange: function() {\n                this._render([this.options.date]);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n\n                if (that.datesHeader) {\n                    that.datesHeader.off(NS);\n                }\n\n                if (that.element) {\n                    that.element.off(NS);\n                }\n\n                if (that.footer) {\n                    that.footer.remove();\n                }\n\n                SchedulerView.fn.destroy.call(this);\n\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                        that._allDayUserEvents.destroy();\n                    }\n\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n\n            inRange: function(options) {\n                var inRange = SchedulerView.fn.inRange.call(this, options);\n\n                if (options.isAllDay) {\n                    return inRange;\n                }\n\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n\n                var start = getMilliseconds(options.start);\n                var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n\n                return inRange && startTime <= start && end <= endTime;\n            },\n\n            selectionByElement: function(cell) {\n                var offset = cell.offset();\n                // The magical number 5 is to buffer properly the height of the cell for all browsers\n                var height = Math.round(cell.innerHeight()) - 5;\n\n                return this._slotByPosition(offset.left, offset.top + height);\n            },\n\n            _timeSlotInterval: function() {\n                var options = this.options;\n                return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n            },\n\n            _timeSlotIndex: function(date) {\n                var options = this.options;\n                var eventStartTime = getMilliseconds(date);\n                var startTime = getMilliseconds(this.startTime());\n                var timeSlotInterval = ((options.majorTick / options.minorTickCount) * MS_PER_MINUTE);\n\n                return (eventStartTime - startTime) / (timeSlotInterval);\n            },\n\n            _slotIndex: function(date, multiday) {\n                if (multiday) {\n                    return this._dateSlotIndex(date);\n                }\n\n                return this._timeSlotIndex(date);\n            },\n\n            _dateSlotIndex: function(date, overlaps) {\n                var idx;\n                var length;\n                var slots = this._dates || [];\n                var slotStart;\n                var slotEnd;\n                var offset = 1;\n\n                for (idx = 0, length = slots.length; idx < length; idx++) {\n                    slotStart = kendo.date.getDate(slots[idx]);\n                    slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n\n                    if (isInDateRange(date, slotStart, slotEnd)) {\n                        return idx * offset;\n                    }\n                }\n                return -1;\n            },\n\n            _positionAllDayEvent: function(element, slotRange) {\n                var slotWidth = slotRange.innerWidth();\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n\n                var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n                var currentColumnCount = this._headerColumnCount || 0;\n\n                var leftOffset = 2;\n\n                var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n                var eventHeight = this._allDayHeaderHeight;\n\n                var start = slotRange.startSlot();\n\n                element\n                    .css({\n                        left: start.offsetLeft + leftOffset,\n                        width: slotWidth - rightOffset\n                    });\n\n                slotRange.addEvent({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n                allDayEvents.push({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n                var rows = SchedulerView.createRows(allDayEvents);\n\n                if (rows.length && rows.length > currentColumnCount) {\n                    this._headerColumnCount = rows.length;\n                }\n\n                var top = slotRange.start.offsetTop;\n\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        $(rowEvents[j].element).css({\n                            top: top + idx * eventHeight,\n                            // apply calculated height.\n                            // -2 is to match normal events\n                            height: eventHeight - 2\n                        });\n                    }\n                }\n            },\n\n            _arrangeColumns: function(element, top, height, slotRange) {\n                var startSlot = slotRange.start;\n\n                element = { element: element, slotIndex: startSlot.index, start: top, end: top + height };\n\n                var columns,\n                    slotWidth = startSlot.clientWidth,\n                    eventRightOffset = slotWidth * 0.10,\n                    columnEvents,\n                    eventElements = slotRange.events(),\n                    slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end),\n                    tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                    contentEl = this.table.find(\".k-scheduler-content\")[0];\n\n                slotRange.addEvent(element);\n\n                slotEvents.push(element);\n\n                columns = SchedulerView.createColumns(slotEvents);\n\n                var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n\n                for (var idx = 0, length = columns.length; idx < length; idx++) {\n                    columnEvents = columns[idx].events;\n\n                    for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                        var calculatedWidth = columnWidth - 2;\n                        columnEvents[j].element[0].style.width = (calculatedWidth > 0 ? calculatedWidth : columnWidth) + \"px\";\n\n                        if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                            // RTL mobile rendering with horizontal scroll\n                            columnEvents[j].element[0].style.left = eventRightOffset +\n                                startSlot.offsetLeft +\n                                idx * columnWidth -\n                                (tableEl.clientWidth - contentEl.clientWidth) +\n                                \"px\";\n                        } else {\n                            columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + \"px\";\n                        }\n                    }\n                }\n            },\n\n            _positionEvent: function(event, element, slotRange) {\n                var start = event._startTime || event.start;\n                var end = event._endTime || event.end;\n                var borderWidths = kendo.getComputedStyles(slotRange.start.element, [\"border-top-width\", \"border-bottom-width\"]);\n\n                var rect = slotRange.innerRect(start, end, false);\n\n                var height = rect.bottom - rect.top -\n                                parseFloat(borderWidths[\"border-top-width\"]) -\n                                parseFloat(borderWidths[\"border-bottom-width\"]);\n\n                if (height < 0) {\n                    height = 0;\n                }\n\n                element.css( {\n                    top: rect.top,\n                    height: height\n                } );\n\n                this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n           },\n\n           _createEventElement: function(event, isOneDayEvent, head, tail) {\n                var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var startDate = getDate(this.startDate());\n                var endDate = getDate(this.endDate());\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var eventStartTime = event._time(\"start\");\n                var eventEndTime = event._time(\"end\");\n                var eventTemplate = isOneDayEvent ? options.eventTemplate : options.allDayEventTemplate;\n                var middle;\n\n                if (startTime >= endTime) {\n                    endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n                }\n\n                if (!isOneDayEvent && !event.isAllDay) {\n                    endDate = new Date(endDate.getTime() + MS_PER_DAY);\n                }\n\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n\n                if (event.isAllDay) {\n                    eventEndDate = getDate(event.end);\n                }\n                if ((!isInDateRange(getDate(eventStartDate), startDate, endDate) &&\n                    !isInDateRange(eventEndDate, startDate, endDate)) ||\n                    (isOneDayEvent &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventStartTime < startTime || eventStartTime >= endTime) &&\n                        (eventEndTime > endTime || eventEndTime <= startTime ))) {\n\n                    middle = true;\n                } else if (getDate(eventStartDate) < startDate ||\n                    (isOneDayEvent &&\n                        eventStartTime !== 0 &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventStartTime < startTime || eventStartTime >= endTime))) {\n\n                    tail = true;\n                } else if ((eventEndDate > endDate && !isOneDayEvent) ||\n                    (isOneDayEvent &&\n                        eventEndTime !== 0 &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventEndTime > endTime || eventEndTime <= startTime))) {\n\n                    head = true;\n                }\n\n                var resources = this.eventResources(event);\n\n               if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n                }\n\n               if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n                }\n\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    middle: middle,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: false,\n                    messages: options.messages,\n                    ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay),\n                    template: eventTemplate\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n\n                var element = $(template(data));\n\n                this.angular(\"compile\", function() {\n                    return {\n                        elements: element,\n                        data: [ { dataItem: data } ]\n                    };\n                });\n\n                return element;\n            },\n\n            _isInTimeSlot: function(event) {\n                var slotStartTime = this.startTime(),\n                    slotEndTime = this.endTime(),\n                    startTime = event._startTime || event.start,\n                    endTime = event._endTime || event.end;\n\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n\n                if (event._date(\"end\") > event._date(\"start\")) {\n                   endTime = +event._date(\"end\") + (MS_PER_DAY - 1);\n                }\n\n                endTime = event._endTime ? endTime - event._date(\"end\") : getMilliseconds(new Date(endTime));\n                startTime = event._startTime ? startTime - event._date(\"start\") : getMilliseconds(new Date(startTime));\n\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n\n                if (slotStartTime === startTime && startTime === endTime) {\n                    return true;\n                }\n\n                var overlaps = startTime !== slotEndTime;\n\n                return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) ||\n                    isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) ||\n                    isInTimeRange(slotStartTime, startTime, endTime) ||\n                    isInTimeRange(slotEndTime, startTime, endTime) ||\n                    (event.end.getDate() > event.start.getDate() && endTime > slotStartTime);\n            },\n\n            _isInDateSlot: function(event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n\n                return (isInDateRange(startTime, slotStart, slotEnd) ||\n                    isInDateRange(endTime, slotStart, slotEnd) ||\n                    isInDateRange(slotStart, startTime, endTime) ||\n                    isInDateRange(slotEnd, startTime, endTime)) &&\n                    (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n            },\n\n            _updateAllDayHeaderHeight: function(height) {\n                if (this._height !== height) {\n                    this._height = height;\n\n                    var allDaySlots = this.element.find(\".k-scheduler-header-all-day td\");\n\n                    if (allDaySlots.length) {\n                        allDaySlots.parent()\n                            .add(this.element.find(\".k-scheduler-times-all-day\").parent())\n                            .height(height);\n\n                        for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                            this.groups[groupIndex].refresh();\n                        }\n                    }\n                }\n            },\n\n            _renderEvents: function(events, groupIndex) {\n                var allDayEventContainer = this.datesHeader.find(\".k-scheduler-header-wrap > div\");\n                var byDate = this._isGroupedByDate();\n                var event;\n\n                var idx;\n                var length;\n\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent, container, element, ranges, range, start, end, group;\n\n                        if (this.options.enforceAllDaySlot) {\n                            isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                        } else {\n                            isMultiDayEvent = event.isAllDay;\n                        }\n\n                        container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n\n                        if (!isMultiDayEvent) {\n                            if (this._isInTimeSlot(event)) {\n                                group = this.groups[groupIndex];\n\n                                if (!group) {\n                                    continue;\n                                }\n\n                                if (!group._continuousEvents) {\n                                    group._continuousEvents = [];\n                                }\n\n                                ranges = group.slotRanges(event);\n\n                                var rangeCount = ranges.length;\n\n                                for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                    range = ranges[rangeIndex];\n                                    start = event.start;\n                                    end = event.end;\n\n                                    if (rangeCount > 1) {\n                                        if (rangeIndex === 0) {\n                                            end = range.end.endDate();\n                                        } else if (rangeIndex == rangeCount - 1) {\n                                            start = range.start.startDate();\n                                        } else {\n                                            start = range.start.startDate();\n                                            end = range.end.endDate();\n                                        }\n                                    }\n\n                                    var occurrence = event.clone({ start: start, end: end, _startTime: event._startTime, _endTime: event.endTime });\n\n                                    if (this._isInTimeSlot(occurrence)) {\n                                        var head = range.head;\n\n                                        element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n\n                                        element.appendTo(container);\n\n                                        this._inverseEventColor(element);\n\n                                        this._positionEvent(occurrence, element, range);\n\n                                        addContinuousEvent(group, range, element, false);\n                                    }\n                                }\n                            }\n\n                        } else if (this.options.allDaySlot) {\n                            group = this.groups[groupIndex];\n\n                            if (!group) {\n                                continue;\n                            }\n\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n\n                            ranges = group.slotRanges(event);\n\n                            if (ranges.length) {\n                                range = ranges[0];\n                                var startIndex = range.start.index;\n                                var endIndex = range.end.index;\n\n                                if (byDate && startIndex !== endIndex) {\n                                    start = range.start.start;\n                                    end = range.end.end;\n                                    var newStart = start;\n                                    var newEnd = start;\n\n                                    for (var i = range.start.index; i <= range.end.index; i++) {\n                                        element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n\n                                        var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                        newStart = newEnd += kendo.date.MS_PER_DAY;\n\n                                        this._positionAllDayEvent(element, dateRange);\n\n                                        addContinuousEvent(group, dateRange, element, true);\n\n                                        element.appendTo(container);\n\n                                        this._inverseEventColor(element);\n                                    }\n                                } else {\n                                    element = this._createEventElement(event, !isMultiDayEvent);\n\n                                    this._positionAllDayEvent(element, ranges[0]);\n\n                                    addContinuousEvent(group, ranges[0], element, true);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n\n            render: function(events) {\n                var that = this;\n\n                this._headerColumnCount = 0;\n\n                this._cachedEvents = events;\n\n                this._groups();\n\n                this.element.find(\".k-event\").remove();\n\n                events = new kendo.data.Query(events)\n                    .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                    .toArray();\n\n                var eventsByResource = [];\n\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n                var eventsPerDate = $.map(this._dates, function(date) {\n                    return Math.max.apply(null,\n                        $.map(eventsByResource, function(events) {\n                            return $.grep(events, function(event) {\n                                if (that.options.enforceAllDaySlot) {\n                                    return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                                } else {\n                                    return event.isAllDay && isInDateRange(date, getDate(event.start), getDate(event.end));\n                                }\n                            }).length;\n                        })\n                    );\n                });\n\n                var height = Math.max.apply(null, eventsPerDate);\n\n                this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex);\n                }\n\n                this.refreshLayout();\n\n                this._currentTime(false);\n\n                this.trigger(\"activate\");\n            },\n\n            _eventsByResource: function(events, resources, result, parentValue) {\n                var resource = resources[0];\n\n                if (resource) {\n                    var view = resource.dataSource.view();\n\n                    view = view.filter(function(item) {\n                        var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                        return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                    });\n\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n\n            _columnOffsetForResource: function(index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n\n            _columnCountForLevel: function(level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n\n            _rowCountForLevel: function(level, rowLevels) {\n                rowLevels = rowLevels || this.rowLevels;\n                var rowLevel = rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n\n            clearSelection: function() {\n\n                this.content.add(this.datesHeader)\n                    .find(\".k-selected\")\n                    .removeAttr(\"id\")\n                    .removeClass(\"k-selected\");\n            },\n\n            _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n                var isDaySlot = selection.isAllDay;\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n\n                if (multiple) {\n                    if (vertical) {\n                        if (!isDaySlot &&\n                            startSlot.index === endSlot.index &&\n                            startSlot.collectionIndex === endSlot.collectionIndex) {\n                                selection.backward = reverse;\n                        }\n                    } else {\n                        if ((isDaySlot && startSlot.index === endSlot.index) ||\n                            (!isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex)) {\n                                selection.backward = reverse;\n                        }\n                    }\n                }\n            },\n\n            _changeViewPeriod: function(selection, reverse, vertical) {\n                if (!vertical) {\n                    var date = reverse ? this.previousDate() : this.nextDate();\n                    var start = selection.start;\n                    var end = selection.end;\n                    var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                    var group = this.groups[selection.groupIndex];\n                    var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                    var slots = collection[collection.length - 1]._slots;\n                    var slotIndex = (!reverse && !group.daySlotCollectionCount()) ? 0 : slots.length - 1;\n                    var endMilliseconds;\n                    var newDateStart, newDateEnd;\n\n                    newDateStart = new Date(date);\n                    newDateEnd = new Date(date);\n\n                    if (this._isInRange(newDateStart, newDateEnd)) {\n                        return false;\n                    }\n\n                    selection.start = newDateStart;\n                    selection.end = newDateEnd;\n\n                    if (verticalByDate) {\n                        var newStart = new Date(slots[slotIndex].startDate());\n                        var newEnd = new Date(slots[slotIndex].endDate());\n                        endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n\n                            setTime(selection.start, getMilliseconds(newStart));\n                            setTime(selection.end, endMilliseconds);\n                            if (group.daySlotCollectionCount()) {\n                                selection.isAllDay = !selection.isAllDay;\n                            }\n                    } else {\n                        endMilliseconds = (selection.isAllDay || !getMilliseconds(end)) ? MS_PER_DAY : getMilliseconds(end);\n\n                        setTime(selection.start, getMilliseconds(start));\n                        setTime(selection.end, endMilliseconds);\n                    }\n\n                    if (!this._isVerticallyGrouped()) {\n                        selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                    }\n\n                    selection.events = [];\n\n                    return true;\n                }\n            }\n        });\n\n        extend(true, ui, {\n            MultiDayView: MultiDayView,\n            DayView: MultiDayView.extend({\n                options: {\n                    name: \"DayView\",\n                    title: \"Day\",\n                    selectedMobileDateFormat: \"{0:MMM d}\"\n                },\n                name: \"day\"\n            }),\n            WeekView: MultiDayView.extend({\n                options: {\n                    name: \"WeekView\",\n                    title: \"Week\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\"\n                },\n                name: \"week\",\n                calculateDateRange: function() {\n                    var selectedDate = this.options.date,\n                        start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                        idx, length,\n                        dates = [];\n\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            WorkWeekView: MultiDayView.extend({\n                options: {\n                    name: \"WorkWeekView\",\n                    title: \"Work Week\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\"\n                },\n                name: \"workWeek\",\n                nextDate: function() {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function() {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function() {\n                    var options = this.options,\n                        selectedDate = options.date,\n                        dayOfWeek = kendo.date.dayOfWeek,\n                        weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                        start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                        end = dayOfWeek(start, options.workWeekEnd, 1),\n                        dates = [],\n                        workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                            return dayOfWeek(weekStart, day, 1).getTime();\n                        }) : null;\n\n                    if (workDays) {\n                        start = weekStart;\n                        end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                    }\n\n                    while (start <= end) {\n                        if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                            dates.push(start);\n                        } else if (!workDays) {\n                            dates.push(start);\n                        }\n\n                        start = kendo.date.nextDay(start);\n                    }\n\n                    this._render(dates);\n                }\n            })\n        });\n\n    })(window.kendo.jQuery);\n\n}));\n"]}