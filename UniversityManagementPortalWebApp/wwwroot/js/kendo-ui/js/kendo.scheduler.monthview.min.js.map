{"version":3,"file":"kendo.scheduler.monthview.min.js","names":["factory","define","amd","$","kendo","window","ui","SchedulerView","NS","extend","encode","htmlEncode","getDate","date","MS_PER_DAY","INVERSE_COLOR_CLASS","DAY_TEMPLATE","template","ref","toString","EVENT_WRAPPER_STRING","task","ariaLabel","resources","tail","middle","isException","isRecurring","showDelete","messages","head","resizable","EVENT_TEMPLATE","title","replace","MORE_BUTTON_TEMPLATE","width","left","top","MonthGroupedView","Class","init","view","this","_view","_verticalRowCountForLevel","level","_rowCountForLevel","_horizontalGroupCountForLevel","_columnCountForLevel","_getCalendarRowsLength","cellsPerRow","cellCount","_createRows","start","startIdx","horizontalGroupCount","verticalGroupIndex","isVerticallyGrouped","_isVerticallyGrouped","html","groupIdx","_createRow","_adjustStartDate","addDays","_getContent","content","startDate","_getTimeSlotByPosition","x","y","groupIndex","groups","daySlotByPosition","_nextSlotStartDate","nextDay","_createRowsLayout","rows","groupHeaderTemplate","_createVerticalColumnsLayout","columns","_createColumnsLayout","_verticalGroupCount","_horizontalGroupCount","_columnOffsetForResource","_positionMobileEvent","event","group","range","rangeCount","end","rangeIndex","endDate","occurrence","clone","Date","_createEventElement","_positionEvent","_addDaySlotCollections","groupCount","tableRows","rowMultiplier","rowIndex","collection","addDaySlotCollection","cells","children","cellMultiplier","cellIndex","cell","addDaySlot","_changePeriodGroupIndex","reverse","length","_createResizeHint","startSlot","offsetLeft","offsetTop","innerWidth","height","clientHeight","hint","fn","call","_appendResizeHint","_createMoveHint","endSlot","css","firstChildHeight","options","eventHeight","index","addClass","inverseColor","_appendMoveHint","MonthGroupedByDateView","dateIdx","verticalStart","_groupCount","isLastRow","NUMBER_OF_COLUMNS","cellIdx","_createDateLayout","resource","configuration","data","dataSource","dataIndex","value","getter","dataValueField","obj","text","dataTextField","color","dataColorField","field","name","className","slice","push","subColumns","startIndex","endIndex","i","currentSlot","_slots","dateRange","daySlotRanges","dateIndex","currentGroupIndex","_daySlotCollections","vertical","selectionGroupIndex","offsetWidth","offsetHeight","slotIdx","slot","isInDateRange","min","max","msValue","scheduler","MonthView","element","that","eventsPerDay","moreButtonHeight","adaptiveSlotHeight","_groupedView","_getGroupedView","isGroupedByDate","_isGroupedByDate","Error","_templates","_editable","_renderLayout","_groups","_updateDirection","selection","ranges","multiple","isSameSlot","isSameCollection","collectionIndex","backward","_changeDate","previous","collections","_getCollections","daySlotCollectionCount","_getNextHorizontalRange","method","horizontalRange","isVertical","_getNextVerticalRange","verticalRange","_changeViewPeriod","newStart","newEnd","pad","_isInRange","events","_continuousSlot","continuousSlot","_changeGroupContinuously","lastGroupIndex","_normalizeHorizontalSelection","_normalizeVerticalSelection","settings","Template","templateSettings","eventTemplate","dayTemplate","dateForTitle","format","selectedDateFormat","_firstDayOfMonth","_lastDayOfMonth","shortDateForTitle","selectedShortDateFormat","mobileDateForTitle","selectedMobileDateFormat","nextDate","previousDate","previousDay","_startDate","_endDate","firstDayOfMonth","lastDayOfMonth","calendarInfo","firstDay","firstVisibleDay","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","getDay","setTime","firstVisibleMonthDay","createLayout","_layout","_content","_initSlotHeight","refreshLayout","_isVirtualized","_tryRenderContent","on","e","offset","currentTarget","_slotByPosition","preventDefault","trigger","_footer","editable","_isMobile","_touchEditable","_mouseEditable","uid","closest","attr","create","resourceInfo","_resourceBySlot","eventInfo","isAllDay","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","useClickAsTap","browser","edge","filter","tap","_scrolling","target","selectionByElement","columnLevel","columnLevels","rowLevel","rowLevels","verticalGroupCount","groupedView","groupedResources","verticalGroupIdx","_createCalendar","_cachedGroupIndex","find","_virtualContent","append","_calcSlotHeight","dateHeader","eventSpacing","firstCell","firstChild","Math","round","rowHeight","isMobile","table","_adjustSlotHeight","_canAdjustSlotHeight","weeks","forEach","week","_events","eventIndex","slots","firstSlot","weekOffsetTop","weekHeight","eventMeta","actualEventCount","slotIndex","meta","adjSlot","adjMeta","indexOf","dirty","sort","first","second","order","slotHeight","firstChildTop","style","more","parentNode","weekStartDates","_slotIndices","calendarRowsLength","rowIdx","_weekStartDates","classes","isToday","getTime","names","array","idx","concat","shiftArray","days","namesShort","map","inner","destroy","resize","ns","eventResources","_formatEventAriaLabel","angular","elements","dataItem","_isInDateSlot","slotStart","slotEnd","lastSlot","startTime","toUtcTime","endTime","_slotIndex","slotRange","tableEl","contentEl","collidingEvents","createRows","at","container","_isRtl","clientWidth","scrollWidth","appendChild","addEvent","_continuousEvents","eventCount","rightOffset","rowEvents","eventTop","j","eventLength","parseInt","appendTo","_inverseEventColor","_collectionIndex","_startSlotIndex","_startSlot","outerHeight","scrollTop","scrollLeft","ceil","_resizeHint","add","_updateResizeHint","_removeResizeHint","timezone","toLocalDate","last","_updateMoveHint","distance","duration","_removeMoveHint","_moveHint","getElementsByTagName","_addResourceView","MS_PER_HOUR","render","remove","_cachedEvents","Query","dir","toArray","bind","_renderGroups","_renderEvents","slotRanges","rangeStart","rangeEnd","setDate","parentValue","item","itemParentValue","dataParentValueField","itemIdx","_resourceValue","tmp","operator","groupEqFilter","removeClass","off","jQuery"],"sources":["kendo.scheduler.monthview.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.scheduler.view'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"scheduler.monthview\",\n        name: \"Scheduler Month View\",\n        category: \"web\",\n        description: \"The Scheduler Month View\",\n        depends: [ \"scheduler.view\" ],\n        hidden: true\n    };\n\n    (function($) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            SchedulerView = ui.SchedulerView,\n            NS = \".kendoMonthView\",\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            getDate = kendo.date.getDate,\n            MS_PER_DAY = kendo.date.MS_PER_DAY,\n            NUMBER_OF_ROWS = 6,\n            NUMBER_OF_COLUMNS = 7,\n            INVERSE_COLOR_CLASS = \"k-event-inverse\",\n            DAY_TEMPLATE = kendo.template(function (ref) {\n                var date = ref.date;\n\n                return (\"<span class=\\\"k-link k-nav-day\\\">\" + (encode(kendo.toString(date, \"dd\"))) + \"</span>\");\n        }),\n            EVENT_WRAPPER_STRING = function (task) { return \"<div role=\\\"button\\\" data-\" + (task.ns) + \"uid=\\\"\" + (task.uid) + \"\\\" aria-label=\\\"\" + (encode(task.ariaLabel)) + \"\\\" \" +\n                (task.resources[0] ? (\"style=\\\"background-color: \" + (task.resources[0].color) + \"; border-color: \" + (task.resources[0].color) + \"\\\" class=\\\"k-event\\\">\") : 'class=\"k-event\">') +\n                    '<span class=\"k-event-actions\">' +\n                        \"\" + (task.tail || task.middle ? '<span class=\"k-icon k-i-arrow-60-left\"></span>' : '') +\n                        \"\" + (task.isException() ? '<span class=\"k-icon k-i-non-recurrence\"></span>' :\n                            (task.isRecurring() ? '<span class=\"k-icon k-i-reload\"></span>' : '')) +\n                    '</span>' +\n                    \"\" + (kendo.template(task.template)(task)) +\n                    '<span class=\"k-event-actions\">' +\n                        \"\" + (task.showDelete ? (\"<a href=\\\"#\\\" class=\\\"k-link k-event-delete\\\" title=\\\"\" + (task.messages.destroy) + \"\\\" aria-label=\\\"\" + (task.messages.destroy) + \"\\\"><span class=\\\"k-icon k-i-close\\\"></span></a>\") : '') +\n                        \"\" + (task.head || task.middle ? '<span class=\"k-icon k-i-arrow-60-right\"></span>' : '') +\n                    '</span>' +\n                    (task.resizable && !task.tail && !task.middle ? '<span class=\"k-resize-handle k-resize-w\"></span>' : '') +\n                    (task.resizable && !task.head && !task.middle ? '<span class=\"k-resize-handle k-resize-e\"></span>' : '') +\n                '</div>'; },\n            EVENT_TEMPLATE = kendo.template(function (ref) {\n                var title = ref.title;\n\n                return \"<div title=\\\"\" + (title.replace(/\"/g,\"&#34;\")) + \"\\\">\" +\n                        \"<div class=\\\"k-event-template\\\">\" + (encode(title)) + \"</div>\" +\n                    '</div>';\n        });\n\n        var CELL_INNER_SPACING = 2;\n\n        var MORE_BUTTON_TEMPLATE = kendo.template(function (ref) {\n                var width = ref.width;\n                var left = ref.left;\n                var top = ref.top;\n\n                return (\"<div style=\\\"width:\" + width + \"px;left:\" + left + \"px;top:\" + top + \"px\\\" class=\\\"k-more-events k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\\\"><span class=\\\"k-button-icon k-icon k-i-more-horizontal\\\"></span></div>\");\n        }\n        );\n\n        var MonthGroupedView = kendo.Class.extend({\n            init: function(view) {\n                this._view = view;\n            },\n\n            _verticalRowCountForLevel: function(level) {\n                var view = this._view;\n\n                return view._rowCountForLevel(level);\n            },\n\n            _horizontalGroupCountForLevel: function(level) {\n                var view = this._view;\n\n                return view._columnCountForLevel(level);\n            },\n\n            _getCalendarRowsLength: function(cellsPerRow, cellCount) {\n                return cellCount / cellsPerRow;\n            },\n\n            _createRows: function(start, startIdx, horizontalGroupCount, verticalGroupIndex) {\n                var view = this._view;\n                var cellsPerRow = NUMBER_OF_COLUMNS;\n                var isVerticallyGrouped = view._isVerticallyGrouped();\n                var html = \"\";\n\n                for (var groupIdx = 0; groupIdx < horizontalGroupCount; groupIdx++) {\n                    html += view._createRow(start, startIdx, cellsPerRow, isVerticallyGrouped ? verticalGroupIndex : groupIdx);\n                }\n\n                return html;\n            },\n\n            _adjustStartDate: function(start) {\n                return kendo.date.addDays(start, NUMBER_OF_COLUMNS);\n            },\n\n            _getContent: function(content, startDate, resources) {\n                return content({ date: startDate, resources: resources });\n            },\n\n            _getTimeSlotByPosition: function(x, y, groupIndex) {\n                var group = this._view.groups[groupIndex];\n\n                return group.daySlotByPosition(x, y);\n            },\n\n            _nextSlotStartDate: function(startDate) {\n                return kendo.date.nextDay(startDate);\n            },\n\n            _createRowsLayout: function(resources, rows, groupHeaderTemplate) {\n                var view = this._view;\n\n                return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n            },\n\n            _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n\n                return columns;\n            },\n\n            _createColumnsLayout: function(resources, columns, groupHeaderTemplate) {\n                var view = this._view;\n\n                return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n            },\n\n            _verticalGroupCount: function(level) {\n                var view = this._view;\n\n                return view._rowCountForLevel(level);\n            },\n\n            _horizontalGroupCount: function(level) {\n                var view = this._view;\n\n                return view._columnCountForLevel(level) / view._columnOffsetForResource(level);\n            },\n\n            _positionMobileEvent: function(event, group, range, rangeCount, start, end, rangeIndex) {\n                var view = this._view;\n\n                if (rangeCount > 1) {\n                    if (rangeIndex === 0) {\n                        end = range.end.endDate();\n                    } else if (rangeIndex == rangeCount - 1) {\n                        start = range.start.startDate();\n                    } else {\n                        start = range.start.startDate();\n                        end = range.end.endDate();\n                    }\n                }\n\n                var occurrence = event.clone({ start: new Date(start), end: new Date(end), head: range.head, tail: range.tail });\n\n                view._positionMobileEvent(range, view._createEventElement(occurrence), group);\n            },\n\n            _positionEvent: function(event, group, range, rangeCount, start, end, rangeIndex) {\n                var view = this._view;\n\n                if (rangeCount > 1) {\n                    if (rangeIndex === 0) {\n                        end = range.end.endDate();\n                    } else if (rangeIndex == rangeCount - 1) {\n                        start = range.start.startDate();\n                    } else {\n                        start = range.start.startDate();\n                        end = range.end.endDate();\n                    }\n                }\n\n                var occurrence = event.clone({ start: start, end: end, head: range.head, tail: range.tail });\n\n                view._positionEvent(range, view._createEventElement(occurrence), group);\n            },\n\n            _addDaySlotCollections: function(groupCount, tableRows, startDate) {\n                var view = this._view;\n                var columnCount = NUMBER_OF_COLUMNS;\n                var rowCount = NUMBER_OF_ROWS;\n\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var cellCount = 0;\n                    var rowMultiplier = 0;\n\n                    if (view._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n\n                    for (var rowIndex = rowMultiplier * rowCount; rowIndex < (rowMultiplier + 1) * rowCount; rowIndex++) {\n                        var group = view.groups[groupIndex];\n                        var collection = group.addDaySlotCollection(kendo.date.addDays(startDate, cellCount), kendo.date.addDays(startDate, cellCount + columnCount));\n\n                        var tableRow = tableRows[rowIndex];\n                        var cells = tableRow.children;\n                        var cellMultiplier = 0;\n\n                        if (!view._isVerticallyGrouped()) {\n                            cellMultiplier = groupIndex;\n                        }\n\n                        for (var cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                            var cell = cells[cellIndex];\n\n                            view.addDaySlot(collection, cell, startDate, cellCount);\n                            cellCount++;\n                        }\n                    }\n                }\n            },\n\n            _changePeriodGroupIndex: function(reverse) {\n                var view = this._view;\n\n                return reverse ? view.groups.length - 1 : 0;\n            },\n\n            _createResizeHint: function(range) {\n                var view = this._view;\n                var left = range.startSlot().offsetLeft;\n                var top = range.start.offsetTop;\n                var width = range.innerWidth();\n                var height = range.start.clientHeight - 2;\n                var hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n                view._appendResizeHint(hint);\n            },\n\n            _createMoveHint: function(range, event) {\n                var view = this._view;\n                var startSlot = range.startSlot();\n                var endSlot = range.endSlot();\n                var hint = view._createEventElement(event.clone({ head: range.head, tail: range.tail }));\n\n                hint.css({\n                    left: startSlot.offsetLeft + 2,\n                    top: startSlot.offsetTop + startSlot.firstChildHeight,\n                    height: (view.options.eventHeight === \"auto\") ? 25 : view.options.eventHeight,\n                    width: range.innerWidth() - (startSlot.index !== endSlot.index ? 3 : 2)\n                });\n\n                hint.addClass(\"k-event-drag-hint\");\n\n                if (event.inverseColor) {\n                    hint.addClass(INVERSE_COLOR_CLASS);\n                }\n\n                view._appendMoveHint(hint);\n            }\n        });\n\n        var MonthGroupedByDateView = kendo.Class.extend({\n            init: function(view) {\n                this._view = view;\n            },\n\n            _verticalRowCountForLevel: function() {\n                return 1;\n            },\n\n            _horizontalGroupCountForLevel: function(level) {\n                var view = this._view;\n\n                return view._columnCountForLevel(level + 1) / NUMBER_OF_COLUMNS;\n            },\n\n            _createRows: function(start, startIdx, horizontalGroupCount) {\n                var view = this._view;\n                var cellsPerRow = NUMBER_OF_COLUMNS;\n                var isVerticallyGrouped = view._isVerticallyGrouped();\n                var html = \"\";\n                var dateIdx = 0;\n\n                if (isVerticallyGrouped) {\n                    var verticalStart = new Date(start);\n                    var groupCount = view._groupCount();\n                    for (dateIdx; dateIdx < NUMBER_OF_ROWS; dateIdx++) {\n                        html += view._createRow(verticalStart, startIdx, groupCount, dateIdx);\n\n                        verticalStart = kendo.date.addDays(verticalStart, cellsPerRow);\n                    }\n                    start = kendo.date.nextDay(start);\n                } else {\n                    for (dateIdx; dateIdx < cellsPerRow; dateIdx++) {\n                        html += view._createRow(start, startIdx, horizontalGroupCount, dateIdx);\n                        start = kendo.date.nextDay(start);\n                    }\n                    start = kendo.date.addDays(start, cellsPerRow);\n                }\n\n                return html;\n            },\n\n            _adjustStartDate: function(start, isLastRow) {\n                var view = this._view;\n                var isVerticallyGrouped = view._isVerticallyGrouped();\n\n                if (isVerticallyGrouped) {\n                    if (isLastRow) {\n                        return kendo.date.addDays(start, NUMBER_OF_COLUMNS * (NUMBER_OF_ROWS - 1) + 1);\n                    } else {\n                        return kendo.date.nextDay(start);\n                    }\n                }\n\n                return kendo.date.addDays(start, NUMBER_OF_COLUMNS);\n            },\n\n            _getContent: function(content, startDate, resources, cellIdx) {\n                if (cellIdx === 0) {\n                    return content({ date: startDate, resources: resources });\n                }\n                return \"\";\n            },\n\n            _getTimeSlotByPosition: function(x, y, groupIndex) {\n                var group = this._view.groups[groupIndex];\n\n                return group.daySlotByPosition(x, y, true);\n            },\n\n            _nextSlotStartDate: function(startDate) {\n                return startDate;\n            },\n\n            _getCalendarRowsLength: function() {\n                var view = this._view;\n                var isVerticallyGrouped = view._isVerticallyGrouped();\n\n                return isVerticallyGrouped ? NUMBER_OF_COLUMNS : NUMBER_OF_ROWS;\n            },\n\n            _createRowsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n                var view = this._view;\n\n                return view._createDateLayout(columns, null, false);\n            },\n\n            _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate) {\n                var view = this._view;\n                var resource = resources[0];\n                var configuration = [];\n                var data = resource.dataSource.view();\n\n                for (var dataIndex = 0; dataIndex < data.length * NUMBER_OF_ROWS; dataIndex++) {\n                    var value = kendo.getter(resource.dataValueField)(data[dataIndex % data.length]);\n                    var obj = {\n                        text: groupHeaderTemplate({\n                            text: kendo.htmlEncode(kendo.getter(resource.dataTextField)(data[dataIndex % data.length])),\n                            color: kendo.getter(resource.dataColorField)(data[dataIndex % data.length]),\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            value: value\n                        }),\n                        className: \"k-slot-cell\",\n                        value: value\n                    };\n\n                    obj.columns = view._createColumnsLayout(resources.slice(1), null, groupHeaderTemplate, null, null, value);\n\n                    configuration.push(obj);\n                }\n\n                return configuration;\n            },\n\n            _createColumnsLayout: function(resources, columns, groupHeaderTemplate, subColumns) {\n                var view = this._view;\n\n                return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n            },\n\n            _verticalGroupCount: function(level) {\n                var view = this._view;\n\n                return view._columnCountForLevel(level) / NUMBER_OF_ROWS;\n            },\n\n            _horizontalGroupCount: function(level) {\n                var view = this._view;\n                return view._columnCountForLevel(level) / NUMBER_OF_COLUMNS;\n            },\n\n            _positionMobileEvent: function(event, group, range, rangeCount, start, end) {\n                var view = this._view;\n                var startIndex = range.start.index;\n                var endIndex = range.end.index;\n\n                for (var i = range.start.index; i <= range.end.index; i++) {\n                    var currentSlot = range.collection._slots[i];\n                    var dateRange = group.daySlotRanges(currentSlot.start, currentSlot.start, true)[0];\n\n                    var occurrence = event.clone({\n                        start: i === startIndex ? start : currentSlot.startDate(),\n                        end: i === endIndex ? end : currentSlot.endDate(),\n                        head: i !== endIndex || range.head,\n                        tail: i !== startIndex || range.tail });\n\n                    view._positionMobileEvent(dateRange, view._createEventElement(occurrence), group);\n                }\n            },\n\n            _positionEvent: function(event, group, range, rangeCount, start, end) {\n                var view = this._view;\n                var startIndex = range.start.index;\n                var endIndex = range.end.index;\n\n                for (var i = range.start.index; i <= range.end.index; i++) {\n                    var currentSlot = range.collection._slots[i];\n                    var dateRange = group.daySlotRanges(currentSlot.start, currentSlot.start, true)[0];\n\n                    var occurrence = event.clone({\n                        start: i === startIndex ? start : currentSlot.startDate(),\n                        end: i === endIndex ? end : currentSlot.endDate(),\n                        head: i !== endIndex || range.head,\n                        tail: i !== startIndex || range.tail });\n\n                    view._positionEvent(dateRange, view._createEventElement(occurrence), group);\n                }\n            },\n\n            _addDaySlotCollections: function(groupCount, tableRows, startDate) {\n                var view = this._view;\n                var columnCount = NUMBER_OF_COLUMNS;\n                var rowCount = NUMBER_OF_ROWS;\n                var isVerticallyGrouped = view._isVerticallyGrouped();\n\n                for (var dateIndex = 0; dateIndex < columnCount; dateIndex++) {\n                    for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n                        var groupIndex = 0;\n                        var currentTableIndex = isVerticallyGrouped ? dateIndex : rowIndex;\n                        var tableRow = tableRows[currentTableIndex];\n                        var cells = tableRow.children;\n                        var cellMultiplier = 0;\n\n                        if (!view._isVerticallyGrouped()) {\n                            cellMultiplier = dateIndex;\n                        }\n\n                        for (var cellIndex = cellMultiplier * groupCount; cellIndex < (cellMultiplier + 1) * groupCount; cellIndex++) {\n                            var cellCount = (rowIndex * columnCount) + dateIndex;\n                            var currentCellIndex = isVerticallyGrouped ? cellIndex + (rowIndex * groupCount) : cellIndex;\n                            var cell = cells[currentCellIndex];\n                            var currentGroupIndex = isVerticallyGrouped ? cellIndex : groupIndex;\n                            var group = view.groups[currentGroupIndex];\n                            var collection;\n                            if (dateIndex === 0) {\n                                collection = group.addDaySlotCollection(kendo.date.addDays(startDate, cellCount), kendo.date.addDays(startDate, cellCount + columnCount));\n                            } else {\n                                collection = group._daySlotCollections[rowIndex];\n                            }\n\n                            view.addDaySlot(collection, cell, startDate, cellCount);\n                            groupIndex++;\n                        }\n                    }\n                }\n            },\n\n            _changePeriodGroupIndex: function(reverse, vertical, selectionGroupIndex) {\n                var view = this._view;\n\n                if (vertical && view._isVerticallyGrouped()) {\n                    return reverse ? view.groups.length - 1 : 0;\n                }\n\n                return selectionGroupIndex;\n            },\n\n            _createResizeHint: function(range) {\n                var view = this._view;\n                var left, top, width, height, hint;\n\n                if (view._isVerticallyGrouped()) {\n                left = range.startSlot().offsetLeft;\n                top = range.start.offsetTop;\n                width = range.startSlot().offsetWidth;\n                height = range.endSlot().offsetTop + range.startSlot().offsetHeight - range.startSlot().offsetTop - 2;\n                hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n                view._appendResizeHint(hint);\n                } else {\n                    for (var slotIdx = range.startSlot().index; slotIdx <= range.endSlot().index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n                        left = slot.offsetLeft;\n                        top = slot.offsetTop;\n                        width = slot.offsetWidth;\n                        height = slot.offsetHeight - 2;\n                        hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n                        view._appendResizeHint(hint);\n                    }\n                }\n            },\n\n            _createMoveHint: function(range, event) {\n                var view = this._view;\n                var startSlot = range.startSlot();\n                var endSlot = range.endSlot();\n\n                for (var slotIdx = startSlot.index; slotIdx <= endSlot.index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    var hint = view._createEventElement(event.clone({ head: range.head, tail: range.tail }));\n\n                    hint.css({\n                        left: slot.offsetLeft,\n                        top: slot.offsetTop + slot.firstChildHeight,\n                        height: (view.options.eventHeight === \"auto\") ? 25 : view.options.eventHeight,\n                        width: slot.offsetWidth - 2\n                    });\n\n                    hint.addClass(\"k-event-drag-hint\");\n\n                    if (event.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n\n                    view._appendMoveHint(hint);\n                }\n            }\n        });\n\n        kendo.ui.scheduler.MonthGroupedView = MonthGroupedView;\n        kendo.ui.scheduler.MonthGroupedByDateView = MonthGroupedByDateView;\n\n        ui.MonthView = SchedulerView.extend({\n            init: function(element, options) {\n                var that = this;\n\n                // Do not allow less than one event\n                if (options.eventsPerDay === 0) {\n                    options.eventsPerDay = 1;\n                }\n\n                // Do not allow 0 height events\n                if (options.eventHeight === 0) {\n                    options.eventHeight = 1;\n                }\n\n                // Do not allow 0 height more-button\n                if (options.moreButtonHeight === 0) {\n                    options.moreButtonHeight = 1;\n                }\n\n                // Do not allow string values other than auto\n                if (typeof options.eventHeight === \"string\" && options.eventHeight !== \"auto\") {\n                    options.eventHeight = 25;\n                }\n\n                // Set adaptiveSlotHeight to true if eventHeight is auto\n                if (options.eventHeight === \"auto\") {\n                    options.adaptiveSlotHeight = true;\n                }\n\n                SchedulerView.fn.init.call(that, element, options);\n                that._groupedView = that._getGroupedView();\n\n                // Exception handling for invalid combinations\n                var isGroupedByDate = this._isGroupedByDate();\n                var adaptiveSlotHeight = this.options.adaptiveSlotHeight;\n                var eventHeight = this.options.eventHeight;\n\n                if (isGroupedByDate === true && adaptiveSlotHeight === true) {\n                    throw new Error(\"Incompatible options: adaptive slot height and date grouping!\");\n                }\n\n                if (isGroupedByDate === true && eventHeight === \"auto\") {\n                    throw new Error(\"Incompatible options: auto event height and date grouping!\");\n                }\n\n                that.title = that.options.title;\n\n                that._templates();\n\n                that._editable();\n\n                that._renderLayout(that.options.date);\n\n                that._groups();\n            },\n\n            name: \"month\",\n\n            _getGroupedView: function() {\n                if (this._isGroupedByDate()) {\n                    return new kendo.ui.scheduler.MonthGroupedByDateView(this);\n                } else {\n                    return new kendo.ui.scheduler.MonthGroupedView(this);\n                }\n            },\n\n            _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n                if (multiple) {\n                    var startSlot = ranges[0].start;\n                    var endSlot = ranges[ranges.length - 1].end;\n                    var isSameSlot = startSlot.index === endSlot.index;\n                    var isSameCollection = startSlot.collectionIndex === endSlot.collectionIndex;\n                    var updateDirection;\n\n                    if (vertical) {\n                        updateDirection = (isSameSlot && isSameCollection) || isSameCollection;\n                    } else {\n                        updateDirection = isSameSlot && isSameCollection;\n                    }\n\n                    if (updateDirection) {\n                        selection.backward = reverse;\n                    }\n                }\n            },\n\n            _changeDate: function(selection, slot, previous) {\n                var group = this.groups[selection.groupIndex];\n                var collections, index;\n\n                if (previous) {\n                    collections = group._getCollections(group.daySlotCollectionCount());\n                    index = slot.collectionIndex - 1;\n\n                    if (index >= 0) {\n                        return collections[index]._slots[collections[index]._slots.length - 1];\n                    }\n                } else {\n                    collections = group._getCollections(group.daySlotCollectionCount());\n                    index = slot.collectionIndex + 1;\n                    var slotIndex = 0;\n\n                    if (collections[index] && collections[index]._slots[slotIndex]) {\n                        return collections[index]._slots[slotIndex];\n                    }\n                }\n            },\n\n            _getNextHorizontalRange: function(group, method, horizontalRange) {\n                var isVertical = this._isVerticallyGrouped();\n\n                horizontalRange.startSlot = group[method](horizontalRange.startSlot, isVertical);\n                horizontalRange.endSlot = group[method](horizontalRange.endSlot, isVertical);\n\n                return horizontalRange;\n            },\n\n            _getNextVerticalRange: function(group, method, verticalRange, multiple) {\n                var isVertical = this._isVerticallyGrouped() && this._isGroupedByDate();\n\n                verticalRange.startSlot = group[method](verticalRange.startSlot, multiple, isVertical);\n                verticalRange.endSlot = group[method](verticalRange.endSlot, multiple, isVertical);\n\n                return verticalRange;\n            },\n\n            _changeViewPeriod: function(selection, reverse, vertical) {\n                var pad = vertical ? 7 : 1;\n                var newStart, newEnd;\n\n                if (reverse) {\n                    pad *= -1;\n                }\n\n                newStart = kendo.date.addDays(selection.start, pad);\n                newEnd = kendo.date.addDays(selection.end, pad);\n\n                if (this._isInRange(newStart, newEnd)) {\n                    return false;\n                }\n\n                selection.start = newStart;\n                selection.end = newEnd;\n\n                if (!vertical || (vertical && this._isVerticallyGrouped())) {\n                    selection.groupIndex = this._groupedView._changePeriodGroupIndex(reverse, vertical, selection.groupIndex);\n                }\n\n                selection.events = [];\n\n                return true;\n            },\n\n            _continuousSlot: function(selection, ranges, reverse) {\n                var index = selection.backward ? 0 : ranges.length - 1;\n                var group = this.groups[selection.groupIndex];\n\n                return group.continuousSlot(ranges[index].start, reverse);\n            },\n\n            _changeGroupContinuously: function(selection, continuousSlot, multiple, reverse) {\n                if (!multiple) {\n                    var groupIndex = selection.groupIndex;\n                    var lastGroupIndex = this.groups.length - 1;\n                    var vertical = this._isVerticallyGrouped();\n                    var group = this.groups[groupIndex];\n\n                    if (!continuousSlot && vertical) {\n\n                        continuousSlot = group[reverse ? \"lastSlot\" : \"firstSlot\"]();\n\n                        groupIndex += (reverse ? -1 : 1);\n\n                    } else if (continuousSlot && !vertical) {\n                        groupIndex = reverse ? lastGroupIndex : 0;\n                    }\n\n                    if (groupIndex < 0 || groupIndex > lastGroupIndex) {\n                        groupIndex = reverse ? lastGroupIndex : 0;\n                        continuousSlot = null;\n                    }\n\n                    selection.groupIndex = groupIndex;\n                }\n\n                return continuousSlot;\n            },\n\n            _normalizeHorizontalSelection: function(selection, ranges, reverse) {\n                var slot;\n\n                if (reverse) {\n                    slot = ranges[0].start;\n                } else {\n                    slot = ranges[ranges.length - 1].end;\n                }\n\n                return slot;\n            },\n\n            _normalizeVerticalSelection: function(selection, ranges) {\n                var slot;\n\n                if (selection.backward) {\n                    slot = ranges[0].start;\n                } else {\n                    slot = ranges[ranges.length - 1].end;\n                }\n\n                return slot;\n            },\n\n            _templates: function() {\n                var options = this.options,\n                    settings = extend({}, kendo.Template, options.templateSettings);\n\n                this.eventTemplate = kendo.template(EVENT_WRAPPER_STRING);\n                this.dayTemplate = kendo.template(options.dayTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n\n            dateForTitle: function() {\n                return kendo.format(this.options.selectedDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n            },\n\n            shortDateForTitle: function() {\n                return kendo.format(this.options.selectedShortDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n            },\n\n            mobileDateForTitle: function() {\n                return kendo.format(this.options.selectedMobileDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n            },\n\n            nextDate: function() {\n                return kendo.date.nextDay(this._lastDayOfMonth);\n            },\n\n            previousDate: function() {\n                return kendo.date.previousDay(this._firstDayOfMonth);\n            },\n\n            startDate: function() {\n                return this._startDate;\n            },\n\n            endDate: function() {\n                return this._endDate;\n            },\n\n            _renderLayout: function(date) {\n                var that = this;\n\n                this._firstDayOfMonth = kendo.date.firstDayOfMonth(date);\n\n                this._lastDayOfMonth = kendo.date.lastDayOfMonth(date);\n\n                this._startDate = firstVisibleMonthDay(date, this.calendarInfo());\n\n                this.createLayout(this._layout());\n\n                this._content();\n\n                this._initSlotHeight();\n\n                this.refreshLayout();\n\n                if (this._isVirtualized()) {\n                    this._tryRenderContent();\n                }\n\n                this.content.on(\"click\" + NS, \".k-nav-day,.k-more-events\", function(e) {\n                    var offset = $(e.currentTarget).offset();\n                    var slot = that._slotByPosition(offset.left, offset.top);\n\n                    e.preventDefault();\n                    that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n                });\n\n                this._footer();\n            },\n\n            _editable: function() {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n\n                }\n            },\n\n            _mouseEditable: function() {\n                var that = this;\n                that.element.on(\"click\" + NS, \".k-scheduler-monthview .k-event a:has(.k-i-close)\", function(e) {\n                    that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n\n                if (that.options.editable.create !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-scheduler-monthview .k-scheduler-content td\", function(e) {\n                        var offset = $(e.currentTarget).offset();\n                        var slot = that._slotByPosition(offset.left, offset.top);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ isAllDay: true, start: slot.startDate(), end: slot.startDate() }, resourceInfo ) });\n                        }\n\n                        e.preventDefault();\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-scheduler-monthview .k-event\", function(e) {\n                        that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                        e.preventDefault();\n                    });\n                }\n            },\n\n            _touchEditable: function() {\n                var that = this;\n                var threshold = 0;\n\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-scheduler-monthview .k-scheduler-content td\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var offset = $(e.target).offset();\n                            var slot = that._slotByPosition(offset.left, offset.top);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({ isAllDay: true, start: slot.startDate(), end: slot.startDate() }, resourceInfo ) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n\n            selectionByElement: function(cell) {\n                var offset = $(cell).offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n\n            _columnCountForLevel: function(level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n\n            _rowCountForLevel: function(level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n\n            _content: function() {\n                var html = '<tbody>';\n                var verticalGroupCount = 1;\n                var groupedView = this._groupedView;\n                var resources = this.groupedResources;\n\n                if (resources.length) {\n                    if (this._isVerticallyGrouped()) {\n                        verticalGroupCount = groupedView._verticalRowCountForLevel(resources.length - 1);\n                    }\n                }\n\n                for (var verticalGroupIdx = 0; verticalGroupIdx < verticalGroupCount; verticalGroupIdx++) {\n                    html += this._createCalendar(verticalGroupIdx);\n                    this._cachedGroupIndex = verticalGroupIdx;\n                }\n\n                html += \"</tbody>\";\n\n                this.content.find(\"table\").html(html);\n            },\n\n            _virtualContent: function() {\n                var that = this;\n                var html = '';\n\n                html += this._createCalendar(++this._cachedGroupIndex);\n\n                that.content.find(\"table tbody\").append(html);\n\n                that._initSlotHeight();\n            },\n\n            _calcSlotHeight: function(eventsPerDay) {\n                var options = this.options;\n                var eventHeight = options.eventHeight;\n                var eventSpacing = options.eventSpacing;\n                var moreButtonHeight = options.moreButtonHeight;\n                var firstCell = this.content.find(\"table tr td\")[0];\n                var dateHeader;\n\n                if (eventHeight === \"auto\" || !firstCell) {\n                    return undefined;\n                }\n\n                dateHeader = firstCell.firstChild;\n\n                return Math.round(\n                    // border of cell\n                    ( firstCell.offsetHeight - firstCell.clientHeight ) +\n\n                    // top padding\n                    dateHeader.offsetTop +\n\n                    // height of date header\n                    dateHeader.offsetHeight +\n\n                    // cell inner spacing\n                    CELL_INNER_SPACING +\n\n                    // all visible events and spacing\n                    ( eventsPerDay * eventHeight ) + ( ( eventsPerDay - 1 ) * eventSpacing ) +\n\n                    // leading space, more button\n                    ( CELL_INNER_SPACING + moreButtonHeight ) +\n\n                    // traling spacing\n                    CELL_INNER_SPACING\n                );\n            },\n\n            _initSlotHeight: function() {\n                var options = this.options;\n                var eventsPerDay = options.eventsPerDay;\n                var eventHeight = options.eventHeight;\n                var isMobile = this._isMobile();\n                var table = this.content.find(\"table\");\n                var rowHeight;\n\n                if (isMobile) {\n                    return;\n                }\n\n                if (typeof eventHeight === \"number\") {\n                    rowHeight = this._calcSlotHeight(eventsPerDay);\n\n                    table.find(\"tr\").height( rowHeight );\n\n                    table.addClass(\"k-scheduler-table-auto\");\n                }\n            },\n\n            _adjustSlotHeight: function(group) {\n                var options = this.options;\n                var eventHeight = options.eventHeight;\n                var eventSpacing = options.eventSpacing;\n                var moreButtonHeight = options.moreButtonHeight;\n\n                if (this._canAdjustSlotHeight !== true) {\n                    return;\n                }\n\n                var weeks = group._daySlotCollections;\n\n                this.content.find(\"table\").addClass(\"k-scheduler-table-auto\");\n\n                weeks.forEach(function(week) {\n                    var events = week._events;\n                    var eventIndex = 0;\n                    var slots = week._slots;\n                    var firstSlot = slots[0];\n                    var weekOffsetTop = firstSlot.element.offsetTop;\n                    var weekHeight = 0;\n\n                    // Ensure event meta exists in each slot\n                    slots.forEach(function(slot) {\n                        if (!slot.eventMeta) {\n                            slot.eventMeta = [];\n                            slot.actualEventCount = 0;\n                        } else {\n                            slot.actualEventCount = slot.eventMeta.length;\n                        }\n                    });\n\n                    // Ensure spanning event meta is present in all related slots\n                    slots.forEach(function(slot, slotIndex) {\n\n                        slot.eventMeta.forEach(function(meta, eventIndex) {\n\n                            // Skip events not starting in this slot\n                            if (meta.startIndex !== slotIndex) {\n                                return;\n                            }\n\n                            // Skip non-spanning events\n                            if (meta.startIndex === meta.endIndex) {\n                                return;\n                            }\n\n                            // Copy spanning event meta in all related slots\n                            slots.slice(slotIndex, meta.endIndex + 1).forEach(function(adjSlot) {\n\n                                var adjMeta = adjSlot.eventMeta;\n\n                                if (adjMeta.indexOf(meta) > -1) {\n                                    return;\n                                }\n\n                                // adjMeta.push(meta);\n                                adjMeta[adjMeta.length] = slot.eventMeta[eventIndex];\n                                adjSlot.actualEventCount = adjMeta.length;\n                                adjSlot.dirty = true;\n                            });\n\n                        });\n\n                        // Set correct order\n                        if (slot.dirty === true) {\n                            slot.eventMeta.sort(function(first, second) {\n                                return first.order - second.order;\n                            });\n                            delete slot.dirty;\n                        }\n\n                    });\n\n                    if (eventHeight === \"auto\") {\n                        slots.forEach(function(slot, slotIndex) {\n                            var slotHeight = slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING;\n\n                            slot.eventMeta.forEach(function(meta, eventIndex) {\n                                meta.top = Math.max(meta.top, weekOffsetTop + slotHeight);\n                                slotHeight = (meta.top - weekOffsetTop) + eventSpacing + meta.height;\n                            });\n                        });\n                    }\n\n                    // Position events\n                    slots.forEach(function(slot, slotIndex) {\n                        var slotHeight = slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING;\n\n                        slot.eventMeta.forEach(function(meta) {\n                            meta.top = Math.max(meta.top, weekOffsetTop + slotHeight);\n                            slotHeight = (meta.top - weekOffsetTop) + eventSpacing + meta.height;\n\n                            if (meta.startIndex === slotIndex) {\n                                events[eventIndex].element[0].style.top = meta.top + \"px\";\n                                eventIndex++;\n                            }\n                        });\n\n                        if (slot.eventMeta.length > 0) {\n                            slotHeight -= eventSpacing;\n                            slotHeight += CELL_INNER_SPACING;\n                        } else {\n                            slotHeight += (eventHeight === \"auto\" ? 25 : eventHeight);\n                        }\n\n                        if (slot.more) {\n                            slot.more[0].style.top = weekOffsetTop + slotHeight + \"px\";\n                            slotHeight += CELL_INNER_SPACING + moreButtonHeight;\n                        }\n\n                        weekHeight = Math.max(weekHeight, slotHeight + 1);\n\n                    });\n\n                    // Update slot size and meta\n                    firstSlot.element.parentNode.style.height = weekHeight + \"px\";\n                    slots.forEach(function(slot) {\n                        slot.offsetTop = weekOffsetTop;\n                        slot.offsetHeight = weekHeight;\n                        slot.clientHeight = weekHeight - 1;\n                    });\n\n                });\n            },\n\n            _createCalendar: function(verticalGroupIndex) {\n                var start = this.startDate();\n                var cellCount = NUMBER_OF_COLUMNS * NUMBER_OF_ROWS;\n                var cellsPerRow = NUMBER_OF_COLUMNS;\n                var weekStartDates = [start];\n                var html = '';\n                var horizontalGroupCount = 1;\n                var isVerticallyGrouped = this._isVerticallyGrouped();\n                var groupedView = this._groupedView;\n\n                var resources = this.groupedResources;\n\n                if (resources.length) {\n                    if (!isVerticallyGrouped) {\n                        horizontalGroupCount = groupedView._horizontalGroupCountForLevel(resources.length - 1);\n                    }\n                }\n\n                this._slotIndices = {};\n\n                var calendarRowsLength = groupedView._getCalendarRowsLength(cellsPerRow, cellCount);\n\n                for (var rowIdx = 0; rowIdx < calendarRowsLength; rowIdx++) {\n                    html += \"<tr>\";\n\n                    weekStartDates.push(start);\n\n                    var startIdx = rowIdx * cellsPerRow;\n\n                    html += groupedView._createRows(start, startIdx, horizontalGroupCount, verticalGroupIndex);\n                    start = groupedView._adjustStartDate(start, rowIdx === calendarRowsLength - 1);\n\n                    html += \"</tr>\";\n                }\n\n                this._weekStartDates = weekStartDates;\n                this._endDate = kendo.date.previousDay(start);\n\n                return html;\n            },\n\n            _createRow: function(startDate, startIdx, cellsPerRow, groupIndex) {\n                var that = this;\n                var min = that._firstDayOfMonth;\n                var max = that._lastDayOfMonth;\n                var content = that.dayTemplate;\n                var classes = \"\";\n                var html = \"\";\n                var groupedView = this._groupedView;\n\n                var resources = function() {\n                    return that._resourceBySlot({ groupIndex: groupIndex });\n                };\n\n                for (var cellIdx = 0; cellIdx < cellsPerRow; cellIdx++) {\n                    classes = \"\";\n\n                    if (kendo.date.isToday(startDate)) {\n                        classes += \"k-today\";\n                    }\n\n                    if (!kendo.date.isInDateRange(startDate, min, max)) {\n                        classes += \" k-other-month\";\n                    }\n\n                    html += \"<td \";\n\n                    if (classes !== \"\") {\n                        html += 'class=\"' + classes + '\"';\n                    }\n\n                    html += \">\";\n                    html += groupedView._getContent(content, startDate, resources, cellIdx);\n                    html += \"</td>\";\n\n                    that._slotIndices[getDate(startDate).getTime()] = startIdx + cellIdx;\n\n                    startDate = groupedView._nextSlotStartDate(startDate);\n                }\n\n                return html;\n            },\n\n            _layout: function() {\n                var calendarInfo = this.calendarInfo();\n\n                var weekDayNames = this._isMobile() ? calendarInfo.days.namesShort.map(function(name) {\n                    return name[0];\n                }) : calendarInfo.days.names;\n\n                var names = shiftArray(weekDayNames, calendarInfo.firstDay);\n                var columns = $.map(names, function(value) { return { text: value }; });\n                var resources = this.groupedResources;\n                var rows;\n                var groupedView = this._groupedView;\n\n                if (resources.length) {\n                    if (this._isVerticallyGrouped()) {\n                        var inner = []; //add hidden cells in order to sync the content rows\n                        for (var idx = 0; idx < 6; idx++) {\n                            inner.push({ text: \"<div>&nbsp;</div>\", className: \"k-hidden k-slot-cell\" });\n                        }\n                        rows = groupedView._createRowsLayout(resources, inner, this.groupHeaderTemplate, columns);\n                        columns = groupedView._createVerticalColumnsLayout(resources, inner, this.groupHeaderTemplate, columns);\n\n                    } else {\n                        columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                    }\n                }\n\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n\n            _createEventElement: function(event) {\n                var options = this.options;\n                var editable = options.editable;\n\n                var isMobile = this._isMobile();\n\n                event.showDelete = editable && editable.destroy !== false && !isMobile;\n                event.resizable = editable && editable.resize !== false && !isMobile;\n                event.ns = kendo.ns;\n                event.resources = this.eventResources(event);\n                event.inverseColor = false;\n                event.messages = options.messages || { destroy: \"Delete\" };\n\n                var element = $(this.eventTemplate($.extend({}, event, {\n                    ariaLabel: this._formatEventAriaLabel(event.title, event.start, event.end, event.isAllDay),\n                    template: this.options.eventTemplate\n                })));\n\n                this.angular(\"compile\", function() {\n                    return {\n                        elements: element,\n                        data: [ { dataItem: event } ]\n                    };\n                });\n\n                return element;\n            },\n\n            _isInDateSlot: function(event) {\n                if (!this.groups || this.groups.length === 0) {\n                    return false;\n                }\n\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n\n                return (isInDateRange(startTime, slotStart, slotEnd) ||\n                    isInDateRange(endTime, slotStart, slotEnd) ||\n                    isInDateRange(slotStart, startTime, endTime) ||\n                    isInDateRange(slotEnd, startTime, endTime)) &&\n                    (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n            },\n\n            _slotIndex: function(date) {\n                return this._slotIndices[getDate(date).getTime()];\n            },\n\n            _positionMobileEvent: function(slotRange, element, group) {\n                var startSlot = slotRange.start,\n                    tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                    contentEl = this.table.find(\".k-scheduler-content\")[0],\n                    offsetLeft;\n\n                if (slotRange.start.offsetLeft > slotRange.end.offsetLeft) {\n                   startSlot = slotRange.end;\n                }\n\n                var startIndex = slotRange.start.index;\n                var endIndex = startIndex;\n\n                var eventCount = 3;\n                var events = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n                events.push({ element: element, start: startIndex, end: endIndex });\n\n                var rows = SchedulerView.createRows(events);\n\n                var slot = slotRange.collection.at(startIndex);\n\n                var container = slot.container;\n\n                if (!container) {\n                    if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                        // RTL mobile rendering with horizontal scroll\n                        offsetLeft = startSlot.offsetLeft - (tableEl.clientWidth - contentEl.clientWidth) + \"px\";\n                    } else {\n                        offsetLeft = startSlot.offsetLeft + \"px\";\n                    }\n\n                    container = $(kendo.format('<div class=\"k-events-container\" style=\"top:{0};left:{1};width:{2}\"></div>',\n                        startSlot.offsetTop + startSlot.firstChildTop + startSlot.firstChildHeight + \"px\",\n                        offsetLeft,\n                        startSlot.offsetWidth + \"px\"\n                    ));\n\n                    slot.container = container;\n\n                    this.content[0].appendChild(container[0]);\n                }\n\n                if (rows.length <= eventCount) {\n                    slotRange.addEvent({ element: element, start: startIndex, end: endIndex, groupIndex: startSlot.groupIndex });\n\n                    group._continuousEvents.push({\n                        element: element,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        start: slotRange.start,\n                        end: slotRange.end\n                    });\n\n                    container[0].appendChild(element[0]);\n                }\n            },\n\n            _positionEvent: function(slotRange, element, group) {\n                var eventHeight = this.options.eventHeight;\n                var eventSpacing = this.options.eventSpacing;\n                var startSlot = slotRange.start;\n\n                if (slotRange.start.offsetLeft > slotRange.end.offsetLeft) {\n                    startSlot = slotRange.end;\n                }\n\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var eventCount = startSlot.eventCount;\n                var events = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n                var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n                events.push({ element: element, start: startIndex, end: endIndex });\n\n                var rows = SchedulerView.createRows(events);\n\n                for (var idx = 0, length = Math.min(rows.length, eventCount); idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    var eventTop = (eventHeight === \"auto\")\n                        ? \"\"\n                        : (\n                            startSlot.offsetTop +\n                            startSlot.firstChildTop +\n                            startSlot.firstChildHeight +\n                            CELL_INNER_SPACING +\n                            idx * (eventHeight + eventSpacing) +\n                            \"px\"\n                        );\n\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        rowEvents[j].element[0].style.top = eventTop;\n                        rowEvents[j].element.attr(kendo.attr(\"order\"), idx);\n                    }\n                }\n\n                if (rows.length > eventCount) {\n                    for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                        var collection = slotRange.collection;\n\n                        var slot = collection.at(slotIndex);\n\n                        if (slot.more) {\n                            continue;\n                        }\n\n                        slot.more = $(MORE_BUTTON_TEMPLATE({\n                            ns: kendo.ns,\n                            start: slotIndex,\n                            end: slotIndex,\n                            width: slot.clientWidth - 2,\n                            left: slot.offsetLeft + 2,\n                            top: (eventHeight === \"auto\")\n                                ? \"\"\n                                : (\n                                    slot.offsetTop +\n                                    slot.firstChildTop +\n                                    slot.firstChildHeight +\n                                    CELL_INNER_SPACING +\n                                    (eventCount * eventHeight) +\n                                    ( (eventCount - 1) * eventSpacing) +\n                                    CELL_INNER_SPACING\n                                )\n                        }));\n\n                        this.content[0].appendChild(slot.more[0]);\n                    }\n                } else {\n                    slotRange.addEvent({ element: element, start: startIndex, end: endIndex, groupIndex: startSlot.groupIndex });\n\n                    element[0].style.width = slotRange.innerWidth() - rightOffset + \"px\";\n                    element[0].style.left = startSlot.offsetLeft + 2 + \"px\";\n                    element[0].style.height = (eventHeight === \"auto\") ? \"\" : eventHeight + \"px\";\n\n                    group._continuousEvents.push({\n                        element: element,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        start: slotRange.start,\n                        end: slotRange.end,\n                        order: parseInt(element.attr(kendo.attr(\"order\")), 10)\n                    });\n\n                    element.appendTo(this.content);\n\n                    this._inverseEventColor(element);\n\n                    // Add event meta to slot\n                    var _collectionIndex = slotRange.start.collectionIndex;\n                    var _startSlotIndex = slotRange.start.index;\n                    var _startSlot = group._daySlotCollections[_collectionIndex]._slots[_startSlotIndex];\n\n                    if (!_startSlot.eventMeta) {\n                        _startSlot.eventMeta = [];\n                    }\n\n                    _startSlot.eventMeta.push({\n                        height: (eventHeight === \"auto\") ? element.outerHeight() : eventHeight,\n                        top: 0,\n                        startIndex: _startSlotIndex,\n                        endIndex: slotRange.end.index,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        order: parseInt(element.attr(kendo.attr(\"order\")), 10)\n                    });\n                }\n            },\n\n            _slotByPosition: function(x, y) {\n                var offset = this.content.offset();\n\n                x -= offset.left;\n                y -= offset.top;\n                y += this.content[0].scrollTop;\n                x += this.content[0].scrollLeft;\n\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n\n                for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    var slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n\n                    if (slot) {\n                        return slot;\n                    }\n                }\n\n                return null;\n            },\n\n            _appendResizeHint: function(hint) {\n                hint.appendTo(this.content);\n\n                this._resizeHint = this._resizeHint.add(hint);\n            },\n\n            _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n                this._removeResizeHint();\n\n                var group = this.groups[groupIndex];\n\n                var ranges = group.ranges(startTime, endTime, true, event.isAllDay);\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    this._groupedView._createResizeHint(ranges[rangeIndex]);\n                }\n\n                this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n                this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), \"M/dd\"));\n\n                this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), \"M/dd\"));\n            },\n\n            _updateMoveHint: function(event, groupIndex, distance) {\n                var start = kendo.date.toUtcTime(event.start) + distance;\n\n                var end = start + event.duration();\n\n                var group = this.groups[groupIndex];\n\n                var ranges = group.ranges(start, end, true, event.isAllDay);\n\n                this._removeMoveHint(event.uid);\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    this._groupedView._createMoveHint(ranges[rangeIndex], event);\n                }\n            },\n\n            _appendMoveHint: function(hint) {\n                hint.appendTo(this.content);\n\n                this._moveHint = this._moveHint.add(hint);\n            },\n\n            _groups: function() {\n                var groupCount = this._groupCount();\n                var tableRows = this.content[0].getElementsByTagName(\"tr\");\n                var startDate = this.startDate();\n                this.groups = [];\n\n                for (var idx = 0; idx < groupCount; idx++) {\n                    this._addResourceView(idx);\n                }\n\n                this._groupedView._addDaySlotCollections(groupCount, tableRows, startDate);\n            },\n\n\n            addDaySlot: function(collection, cell, startDate, cellCount) {\n                var start = kendo.date.addDays(startDate, cellCount);\n                var end = kendo.date.MS_PER_DAY;\n                var eventsPerDay = this.options.eventsPerDay;\n\n                if (startDate.getHours() !== start.getHours()) {\n                    end += (startDate.getHours() - start.getHours()) * kendo.date.MS_PER_HOUR;\n                }\n\n                start = kendo.date.toUtcTime(start);\n                end += start;\n\n                collection.addDaySlot(cell, start, end, eventsPerDay);\n            },\n\n            render: function(events) {\n                this.content.children(\".k-event,.k-more-events,.k-events-container\").remove();\n\n                this._cachedEvents = events;\n\n                this._groups();\n\n                events = new kendo.data.Query(events)\n                    .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                    .toArray()\n                    .filter(function(event) {\n                        return this._isInDateSlot(event);\n                    }.bind(this));\n\n                var resources = this.groupedResources;\n                var isMobile = this._isMobile();\n                var isGroupedByDate = this._isGroupedByDate();\n                var adaptiveSlotHeight = this.options.adaptiveSlotHeight;\n\n                this._canAdjustSlotHeight = isMobile !== true && isGroupedByDate !== true && resources.length === 0 && adaptiveSlotHeight === true;\n\n                if (resources.length) {\n                    this._renderGroups(events, resources, 0, 1);\n                } else {\n                    this._renderEvents(events, 0);\n                }\n\n                this.refreshLayout();\n                this.trigger(\"activate\");\n            },\n\n            _renderEvents: function(events, groupIndex) {\n                var group = this.groups[groupIndex];\n                var view = this._groupedView._view;\n                var isMobile = view._isMobile();\n\n                if (!group) {\n                    return;\n                }\n\n                if (!group._continuousEvents) {\n                    group._continuousEvents = [];\n                }\n\n                if (isMobile) {\n\n                    events.forEach(function(event) {\n                        var ranges = group.slotRanges(event, true);\n                        var range = ranges[0];\n                        var start = range.start.start;\n                        var end = range.end.end;\n                        var rangeStart = new Date(range.start.start);\n                        var rangeEnd = ranges[ranges.length - 1].end.end;\n                        var newStart = new Date(rangeStart);\n                        var newEnd = new Date(end);\n\n                        while (rangeStart.getTime() <= rangeEnd &&\n                            event.end >= kendo.timezone.toLocalDate(rangeStart) &&\n                            event.start <= kendo.timezone.toLocalDate(rangeEnd)) {\n                            var dateRange = group.daySlotRanges(newStart.getTime(), newEnd.getTime(), true)[0];\n                            newEnd.setDate(newEnd.getDate() + 1);\n                            newStart.setDate(newStart.getDate() + 1);\n\n                            if (dateRange) {\n                                dateRange.head = null;\n                                dateRange.middle = null;\n                                dateRange.tail = null;\n                                this._groupedView._positionMobileEvent(event, group, dateRange, 1, start, end, 0);\n                            }\n\n                            rangeStart = kendo.date.addDays(rangeStart, 1);\n                        }\n\n                    }.bind(this));\n\n                } else {\n\n                    events.forEach(function(event) {\n                        var range;\n                        var start = event.start;\n                        var end = event.end;\n                        var ranges = group.slotRanges(event, true);\n                        var rangeCount = ranges.length;\n\n                        for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                            range = ranges[rangeIndex];\n\n                            this._groupedView._positionEvent(event, group, range, rangeCount, start, end, rangeIndex);\n                        }\n\n                    }.bind(this));\n\n                    if (this._canAdjustSlotHeight === true) {\n                        this._adjustSlotHeight(group);\n                    }\n\n                }\n            },\n\n            _renderGroups: function(events, resources, offset, columnLevel, parentValue) {\n                var resource = resources[0];\n\n                if (resource) {\n                    var view = resource.dataSource.view();\n\n                    view = view.filter(function(item) {\n                        var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                        return itemParentValue === null || itemParentValue === undefined || itemParentValue === parentValue;\n                    });\n\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n\n                        var tmp = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                        if (resources.length > 1) {\n                            offset = this._renderGroups(tmp, resources.slice(1), offset++, columnLevel + 1, value);\n                        } else {\n                            this._renderEvents(tmp, offset++);\n                        }\n                    }\n                }\n                return offset;\n            },\n\n            _groupCount: function() {\n                var resources = this.groupedResources;\n                var groupedView = this._groupedView;\n\n                if (resources.length) {\n                    if (this._isVerticallyGrouped()) {\n                        return groupedView._verticalGroupCount(resources.length - 1);\n                    } else {\n                        return groupedView._horizontalGroupCount(resources.length);\n                    }\n                }\n                return 1;\n            },\n\n            _columnOffsetForResource: function(index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n\n            destroy: function() {\n                if (this.table) {\n                    this.table.removeClass(\"k-scheduler-monthview\");\n                }\n\n                if (this.content) {\n                    this.content.off(NS);\n                }\n\n                if (this.element) {\n                    this.element.off(NS);\n                }\n\n                SchedulerView.fn.destroy.call(this);\n\n                if (this._isMobile() && this.options.editable) {\n                    if (this.options.editable.create !== false) {\n                        this._addUserEvents.destroy();\n                    }\n                }\n            },\n\n            events: [\"remove\", \"add\", \"edit\", \"navigate\"],\n\n            options: {\n                title: \"Month\",\n                name: \"month\",\n                eventHeight: 25,\n                moreButtonHeight: 13,\n                editable: true,\n                selectedDateFormat: \"{0:y}\",\n                selectedShortDateFormat: \"{0:y}\",\n                selectedMobileDateFormat: \"{0:MMMM}\",\n                groupHeaderTemplate: function (ref) {\n                    var text = ref.text;\n\n                    return text;\n        },\n                dayTemplate: DAY_TEMPLATE,\n                eventTemplate: EVENT_TEMPLATE,\n                eventsPerDay: 2,\n                adaptiveSlotHeight: false,\n                eventSpacing: 3\n            }\n        });\n\n\n        function shiftArray(array, idx) {\n            return array.slice(idx).concat(array.slice(0, idx));\n        }\n\n        function firstVisibleMonthDay(date, calendarInfo) {\n            var firstDay = calendarInfo.firstDay,\n                firstVisibleDay = new Date(date.getFullYear(), date.getMonth(), 0, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n\n            while (firstVisibleDay.getDay() != firstDay) {\n                kendo.date.setTime(firstVisibleDay, -1 * MS_PER_DAY);\n            }\n\n            return firstVisibleDay;\n        }\n\n        function isInDateRange(value, min, max) {\n            var msMin = min,\n                msMax = max,\n                msValue;\n\n            msValue = value;\n\n            return msValue >= msMin && msValue <= msMax;\n        }\n    })(window.kendo.jQuery);\n\n}));\n"]}