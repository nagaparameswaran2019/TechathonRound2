{"version":3,"file":"kendo.scheduler.recurrence.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","encode","htmlEncode","timezone","Class","ui","Widget","DropDownList","ButtonGroup","kendoDate","date","setTime","setDayOfWeek","adjustDST","firstDayOfMonth","getMilliseconds","DAYS_IN_LEAPYEAR","DAYS_IN_YEAR","MONTHS","WEEK_DAYS","WEEK_DAYS_IDX","SU","MO","TU","WE","TH","FR","SA","DATE_FORMATS","RULE_NAMES","RULE_NAMES_LENGTH","length","limitation","months","end","rule","monthRules","ruleValues","getMonth","changed","setMonth","setFullYear","getFullYear","monthDays","monthLength","month","days","hours","getHours","normalize","monthDay","getMonthLength","getDate","sort","numberSortPredicate","yearDays","year","yearDay","leapYear","dayInYear","weeks","day","weekStart","week","weekInYear","weekDays","weekDayRule","offsetDate","Date","getTime","offsets","start","normalizeDay","getDay","weekDayRules","ruleWeekOffset","weekDay","weekNumber","currentDay","normalizeDayIndex","result","idx","weekInMonth","normalizeOffset","push","ruleWeekValues","freq","positions","position","forEach","nextMonthFirstDay","ruleDay","offset","isInWeek","numberOfWeeks","setDate","hourRules","startTime","_startTime","startHours","setHours","minutes","setMinutes","getMinutes","minuteRules","seconds","setSeconds","getSeconds","secondRules","BaseFrequency","extend","next","options","this","_hour","limit","ruleName","firstRule","modified","interval","current","diff","startTimeHours","_startPeriod","frequency","excess","getTimezoneOffset","MS_PER_HOUR","MS_PER_MINUTE","intervalExcess","Math","floor","round","MS_PER_DAY","_date","_getNumberOfWeeksBetweenDates","_hasRuleValue","first","second","exactWeeks","HourlyFrequency","fn","DailyFrequency","WeeklyFrequency","setup","eventStartDate","MonthlyFrequency","YearlyFrequency","frequencies","hourly","daily","weekly","monthly","yearly","CLICK","CHANGE","firstWeekLength","ceil","lastDate","weeksInMonth","skipFirst","skipLast","rules","value","ruleValue","availableRules","parseArray","list","range","parseInt","isNaN","parseWeekDayList","valueLength","substring","toUpperCase","a","b","parseExceptions","exceptions","zone","dates","split","indexOf","parseUTCDate","isException","Array","isArray","dateTime","toExceptionString","concat","convert","toString","join","endPeriodByFreq","eventsByPosition","periodEvents","until","event","inPeriod","periodEventsLength","events","removeExceptionDates","exceptionDates","getZoneOffset","parseDate","apply","parseDateRule","dateRule","pair","property","tzid","valueIdx","pairs","parseRule","recur","splits","part","parts","instance","trim","exdates","toLowerCase","count","culture","calendar","firstDay","day1","day2","serializeDateRule","val","serialize","ruleString","valueString","serializeWeekDayList","recurrence","parse","expand","endTime","endDate","durationMS","startPeriod","ruleStart","ruleEnd","useEventStart","freqName","eventStartTime","eventStartMS","eventStart","currentIdx","shiftedStart","shiftedEnd","shiftedStartTime","shifterEndTime","recurrenceRule","startTimezone","endTimezone","clone","recurrenceException","set","startPeriodByFreq","_endPeriod","duration","dateOffset","dateMinusHour","dateMinusHourOffset","allDayCompensation","isAllDay","toInvariantTime","inPeriodCheckEndDate","toUtcTime","startZone","endZone","startOffsetDiff","endOffsetDiff","startTZOffsetDiff","endTZOffsetDiff","offsetTicksStart","offsetTicksEnd","toOccurrence","_endTime","slice","isMissingDSTHour","RECURRENCE_VIEW_TEMPLATE","template","ref","messages","repeatEvery","repeatOn","of","label","never","after","occurrence","on","DAY_RULE","WEEKDAY_RULE","WEEKEND_RULE","BaseRecurrenceEditor","init","element","that","call","wrapper","today","firstWeekDay","_namespace","name","spinners","mobile","repeat","recurrenceEditorTitle","mobileLabel","offsetPositions","third","fourth","last","weekdays","weekday","weekend","_initInterval","_value","_container","find","kendoNumericTextBox","decimals","format","min","change","_trigger","_weekDayButtons","names","abbreviated","namesAbbr","values","items","text","attributes","_weekDayButtonGroup","selection","select","selectedDays","map","i","Number","getAttribute","_weekDayRule","clear","_weekDay","_weekDayOffset","_weekDayView","weekDayOffset","weekDayValue","method","weekDayOffsetWidget","_initWeekDay","data","weekdayMessage","offsetMessage","weekDayInput","autoWidth","dataTextField","dataValueField","dataSource","dayName","_initWeekDays","weekDayButtonGroup","selectedWeekDayButtons","ruleDays","ruleDaysLength","selectors","_initMonthDay","monthDayInput","_monthDay","NumericTextBox","max","_initCount","input","_count","_initUntil","startInput","closest","validDateValidationMessage","Validator","prototype","dateCompareValidationMessage","dateCompare","initialValue","attr","_until","kendoDatePicker","untilEl","readonly","Boolean","enable","is","parents","setOptions","trigger","RecurrenceEditor","_initFrequency","_initContainer","destroy","_frequency","off","freqButton","_initView","container","editContainer","parent","insertAfter","append","buttonGroupElement","title","empty","html","_initMonth","_period","_end","monthInputs","monthName","_month1","_month2","endRule","namespace","click","e","_toggleEnd","currentTarget","_buttonNever","_buttonCount","_buttonUntil","toggleRule","_toggleMonthDay","_toggleYear","selector","radioButtons","_buttonMonthDay","eq","_buttonWeekDay","enableCount","enableUntil","prop","monthRule","enableMonthDay","enableWeekDay","yearRule","enableMonth1","enableMonth2","plugin","RECURRENCE_HEADER_TEMPLATE","headerTitle","RECURRENCE_REPEAT_PATTERN_TEMPLATE","repeatBy","every","RECURRENCE_END_PATTERN_TEMPLATE","endPattern","RECURRENCE_GROUP_BUTTON_TEMPLATE","item","MobileRecurrenceEditor","_optionTemplate","_pane","pane","_initRepeatButton","_initParentRepeatEnd","_defaultValue","animations","left","right","cancel","update","endTitle","repeatTitle","patterns","dayOfMonth","dayOfWeek","_destroyView","_endFields","target","_chevronButton","_repeatValue","preventDefault","_createView","navigate","_view","_endLiItem","endLabelField","endEditField","appendTo","_navigateToView","_endParentLabelField","toggle","_endParentEndButton","_endText","_initRepeatEnd","_endLabelField","toggleClass","_endButton","viewName","frequencyMessages","ns","_initRepeatView","_initEndNavigation","endMessages","_initEndView","viewType","returnViewId","view","id","stopPropagation","hasClass","one","remove","content","hide","show","ev","weekDaySelect","_options","monthSelect","monthNames","_monthSelect","repeatRuleGroupButton","weekDayView","monthDayView","currentValue","weekDayName","support","optionLabel","jQuery"],"sources":["kendo.scheduler.recurrence.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.dropdownlist', 'kendo.datepicker', 'kendo.numerictextbox', 'kendo.buttongroup'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"scheduler.recurrence\",\n        name: \"Recurrence\",\n        category: \"web\",\n        depends: [ \"dropdownlist\", \"datepicker\", \"numerictextbox\", \"buttongroup\" ],\n        hidden: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            encode = kendo.htmlEncode,\n            timezone = kendo.timezone,\n            Class = kendo.Class,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            DropDownList = ui.DropDownList,\n            ButtonGroup = ui.ButtonGroup,\n            kendoDate = kendo.date,\n            setTime = kendoDate.setTime,\n            setDayOfWeek = kendoDate.setDayOfWeek,\n            adjustDST = kendoDate.adjustDST,\n            firstDayOfMonth = kendoDate.firstDayOfMonth,\n            getMilliseconds = kendoDate.getMilliseconds,\n            DAYS_IN_LEAPYEAR = [0,31,60,91,121,152,182,213,244,274,305,335,366],\n            DAYS_IN_YEAR = [0,31,59,90,120,151,181,212,243,273,304,334,365],\n            MONTHS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n            WEEK_DAYS = {\n                0: \"SU\",\n                1: \"MO\",\n                2: \"TU\",\n                3: \"WE\",\n                4: \"TH\",\n                5: \"FR\",\n                6: \"SA\"\n            },\n            WEEK_DAYS_IDX = {\n                \"SU\": 0,\n                \"MO\": 1,\n                \"TU\": 2,\n                \"WE\": 3,\n                \"TH\": 4,\n                \"FR\": 5,\n                \"SA\": 6\n            },\n            DATE_FORMATS = [\n                \"yyyy-MM-ddTHH:mm:ss.fffzzz\",\n                \"yyyy-MM-ddTHH:mm:sszzz\",\n                \"yyyy-MM-ddTHH:mm:ss\",\n                \"yyyy-MM-ddTHH:mm\",\n                \"yyyy-MM-ddTHH\",\n                \"yyyy-MM-dd\",\n                \"yyyyMMddTHHmmssfffzzz\",\n                \"yyyyMMddTHHmmsszzz\",\n                \"yyyyMMddTHHmmss\",\n                \"yyyyMMddTHHmm\",\n                \"yyyyMMddTHH\",\n                \"yyyyMMdd\"\n            ],\n            RULE_NAMES = [\"months\", \"weeks\", \"yearDays\", \"monthDays\", \"weekDays\", \"hours\", \"minutes\", \"seconds\"],\n            RULE_NAMES_LENGTH = RULE_NAMES.length,\n            RECURRENCE_DATE_FORMAT = \"yyyyMMddTHHmmssZ\",\n            limitation = {\n                months: function(date, end, rule) {\n                    var monthRules = rule.months,\n                        months = ruleValues(monthRules, date.getMonth() + 1),\n                        changed = false;\n\n                    if (months !== null) {\n                        if (months.length) {\n                            date.setMonth(months[0] - 1, 1);\n                        } else {\n                            date.setFullYear(date.getFullYear() + 1, monthRules[0] - 1, 1);\n                        }\n\n                        changed = true;\n                    }\n\n                    return changed;\n                },\n\n                monthDays: function(date, end, rule) {\n                    var monthLength, month, days,\n                        changed = false,\n                        hours = date.getHours(),\n                        normalize = function(monthDay) {\n                            if (monthDay < 0) {\n                                monthDay = monthLength + monthDay + 1;\n                            }\n                            return monthDay;\n                        };\n\n                    while (date <= end) {\n                        month = date.getMonth();\n                        monthLength = getMonthLength(date);\n                        days = ruleValues(rule.monthDays, date.getDate(), normalize);\n\n                        if (days === null) {\n                            return changed;\n                        }\n\n                        changed = true;\n\n                        if (days.length) {\n                            date.setMonth(month, days.sort(numberSortPredicate)[0]);\n                            adjustDST(date, hours);\n\n                            if (month === date.getMonth()) {\n                                break;\n                            }\n                        } else {\n                            date.setMonth(month + 1, 1);\n                        }\n                    }\n\n                    return changed;\n                },\n\n                yearDays: function(date, end, rule) {\n                    var year, yearDays,\n                        changed = false,\n                        hours = date.getHours(),\n                        normalize = function(yearDay) {\n                            if (yearDay < 0) {\n                                yearDay = year + yearDay;\n                            }\n                            return yearDay;\n                        };\n\n                    while (date < end) {\n                        year = leapYear(date) ? 366 : 365;\n                        yearDays = ruleValues(rule.yearDays, dayInYear(date), normalize);\n\n                        if (yearDays === null) {\n                            return changed;\n                        }\n\n                        changed = true;\n                        year = date.getFullYear();\n\n                        if (yearDays.length) {\n                            date.setFullYear(year, 0, yearDays.sort(numberSortPredicate)[0]);\n                            adjustDST(date, hours);\n                            break;\n                        } else {\n                            date.setFullYear(year + 1, 0, 1);\n                        }\n                    }\n\n                    return changed;\n                },\n\n                weeks: function(date, end, rule) {\n                    var weekStart = rule.weekStart,\n                        year, weeks, day,\n                        changed = false,\n                        hours = date.getHours(),\n                        normalize = function(week) {\n                            if (week < 0) {\n                                week = 53 + week;\n                            }\n                            return week;\n                        };\n\n                    while (date < end) {\n                        weeks = ruleValues(rule.weeks, weekInYear(date, weekStart), normalize);\n\n                        if (weeks === null) {\n                            return changed;\n                        }\n\n                        changed = true;\n                        year = date.getFullYear();\n\n                        if (weeks.length) {\n                            day = (weeks.sort(numberSortPredicate)[0] * 7) - 1;\n\n                            date.setFullYear(year, 0, day);\n                            setDayOfWeek(date, weekStart, -1);\n\n                            adjustDST(date, hours);\n                            break;\n                        } else {\n                            date.setFullYear(year + 1, 0, 1);\n                        }\n                    }\n\n                    return changed;\n                },\n\n                weekDays: function(date, end, rule) {\n                    var offsetDate = new Date(date.getTime() + rule.offsets.start);\n                    var normalizeDay = offsetDate.getDay() - date.getDay();\n                    var weekDays = rule.weekDays;\n                    var weekStart = rule.weekStart;\n                    var weekDayRules = ruleWeekValues(weekDays, offsetDate, weekStart);\n                    var hours = date.getHours();\n                    var traverseRuleForNextMont = function(rule) {\n                        var nextMonthFirstDay = new Date(date.getFullYear(), date.getMonth() + 1, 1);\n                        var ruleDay = normalizeDayIndex(rule.day, weekStart);\n\n                        if (nextMonthFirstDay.getDay() <= ruleDay) {\n                            if (!weekDayRule || normalizeDayIndex(weekDayRule.day, weekStart) > ruleDay) {\n                                weekDayRule = rule;\n                            }\n                        }\n                    };\n                    var weekDayRule, day;\n\n\n                    if (weekDayRules === null) {\n                        return false;\n                    }\n\n                    weekDayRule = weekDayRules[0];\n\n                    if (!weekDayRule) {\n                        if (rule.freq === \"monthly\" && !rule.positions || rule.position > 0) {\n                            weekDays.forEach(traverseRuleForNextMont);\n                        }\n                        if (!weekDayRule) {\n                            weekDayRule = weekDays[0];\n                        }\n                        setDayOfWeek(date, weekStart);\n                    }\n\n                    day = weekDayRule.day;\n                    day -= normalizeDay;\n\n                    if (weekDayRule.offset) {\n                        while (date <= end && !isInWeek(date, weekDayRule, weekStart)) {\n                            if (weekInMonth(date, weekStart) === numberOfWeeks(date, weekStart)) {\n                                date.setMonth(date.getMonth() + 1, 1);\n                                adjustDST(date, hours);\n                            } else {\n                                date.setDate(date.getDate() + 7);\n                                adjustDST(date, hours);\n\n                                setDayOfWeek(date, weekStart, -1);\n                            }\n                        }\n                    }\n\n                    if (date.getDay() !== day) {\n                        setDayOfWeek(date, day);\n                    }\n\n                    return true;\n                },\n\n                hours: function(date, end, rule) {\n                    var hourRules = rule.hours,\n                        startTime = rule._startTime,\n                        startHours = startTime.getHours(),\n                        hours = ruleValues(hourRules, startHours),\n                        changed = false;\n\n                    if (hours !== null) {\n                        changed = true;\n\n                        date.setHours(startHours);\n                        adjustDST(date, startHours);\n\n                        if (hours.length) {\n                            hours = hours[0];\n                            date.setHours(hours);\n                        } else {\n                            hours = date.getHours();\n                            date.setDate(date.getDate() + 1);\n                            adjustDST(date, hours);\n\n                            hours = hourRules[0];\n                            date.setHours(hours);\n                            adjustDST(date, hours);\n                        }\n\n                        if (rule.minutes) {\n                            date.setMinutes(0);\n                        }\n\n                        startTime.setHours(hours, date.getMinutes());\n                    }\n\n                    return changed;\n                },\n\n                minutes: function(date, end, rule) {\n                    var minuteRules = rule.minutes,\n                        currentMinutes = date.getMinutes(),\n                        minutes = ruleValues(minuteRules, currentMinutes),\n                        hours = rule._startTime.getHours(),\n                        changed = false;\n\n                    if (minutes !== null) {\n                        changed = true;\n\n                        if (minutes.length) {\n                            minutes = minutes[0];\n                        } else {\n                            hours += 1;\n                            minutes = minuteRules[0];\n                        }\n\n                        if (rule.seconds) {\n                            date.setSeconds(0);\n                        }\n\n                        date.setHours(hours, minutes);\n\n                        hours = hours % 24;\n                        adjustDST(date, hours);\n                        rule._startTime.setHours(hours, minutes, date.getSeconds());\n                    }\n\n                    return changed;\n                },\n\n                seconds: function(date, end, rule) {\n                    var secondRules = rule.seconds,\n                        hours = rule._startTime.getHours(),\n                        seconds = ruleValues(secondRules, date.getSeconds()),\n                        minutes = date.getMinutes(),\n                        changed = false;\n\n                    if (seconds !== null) {\n                        changed = true;\n\n                        if (seconds.length) {\n                            date.setSeconds(seconds[0]);\n                        } else {\n                            minutes += 1;\n                            date.setMinutes(minutes, secondRules[0]);\n\n                            if (minutes > 59) {\n                                minutes = minutes % 60;\n                                hours = (hours + 1) % 24;\n                            }\n                        }\n\n                        rule._startTime.setHours(hours, minutes, date.getSeconds());\n                    }\n\n                    return changed;\n                }\n            },\n            BaseFrequency = Class.extend({\n                next: function(date, rule) {\n                    var startTime = rule._startTime,\n                        day = startTime.getDate(),\n                        minutes, seconds;\n\n                    if (rule.seconds) {\n                        seconds = date.getSeconds() + 1;\n\n                        date.setSeconds(seconds);\n                        startTime.setSeconds(seconds);\n                        startTime.setDate(day);\n\n                    } else if (rule.minutes) {\n                        minutes = date.getMinutes() + 1;\n\n                        date.setMinutes(minutes);\n                        startTime.setMinutes(minutes);\n                        startTime.setDate(day);\n                    } else {\n                        return false;\n                    }\n\n                    return true;\n                },\n\n                normalize: function(options) {\n                    var rule = options.rule;\n\n                    if (options.idx === 4 && rule.hours) {\n                        rule._startTime.setHours(0);\n                        this._hour(options.date, rule);\n                    }\n                },\n\n                limit: function(date, end, rule) {\n                    var interval = rule.interval,\n                        ruleName, firstRule,\n                        modified,\n                        idx, day;\n\n                    while (date <= end) {\n                        modified = firstRule = undefined$1;\n                        day = date.getDate();\n\n                        for (idx = 0; idx < RULE_NAMES_LENGTH; idx++) {\n                            ruleName = RULE_NAMES[idx];\n\n                            if (rule[ruleName]) {\n                                modified = limitation[ruleName](date, end, rule);\n                                if (firstRule !== undefined$1 && modified) {\n                                    break;\n                                } else {\n                                    firstRule = modified;\n                                }\n                            }\n\n                            if (modified) {\n                                this.normalize({ date: date, rule: rule, day: day, idx: idx });\n                            }\n                        }\n\n                        if ((interval === 1 || !this.interval(rule, date)) && idx === RULE_NAMES_LENGTH) {\n                            break;\n                        }\n                    }\n                },\n\n                interval: function(rule, current) {\n                    var start = new Date(rule._startPeriod);\n                    var date = new Date(current);\n                    var hours = current.getHours();\n                    var weekStart = rule.weekStart;\n                    var interval = rule.interval;\n                    var frequency = rule.freq;\n                    var modified = false;\n                    var excess = 0;\n                    var month = 0;\n                    var day = 1;\n                    var diff;\n\n                    var startTimeHours;\n\n                    if (frequency === \"hourly\") {\n                        diff = date.getTimezoneOffset() - start.getTimezoneOffset();\n                        startTimeHours = rule._startTime.getHours();\n\n                        date = date.getTime();\n                        if (hours !== startTimeHours) {\n                            date += (startTimeHours - hours) * kendoDate.MS_PER_HOUR;\n                        }\n                        date -= start;\n\n                        if (diff) {\n                            date -= diff * kendoDate.MS_PER_MINUTE;\n                        }\n\n                        diff = Math.floor(date / kendoDate.MS_PER_HOUR);\n                        excess = intervalExcess(diff, interval);\n\n                        if (excess !== 0) {\n                            this._hour(current, rule, excess);\n                            modified = true;\n                        }\n                    } else if (frequency === \"daily\") {\n                        kendoDate.setTime(date, -start, true);\n\n                        diff = Math.round(date / kendoDate.MS_PER_DAY);\n                        excess = intervalExcess(diff, interval);\n\n                        if (excess !== 0) {\n                            this._date(current, rule, excess);\n                            modified = true;\n                        }\n\n                    } else if (frequency === \"weekly\") {\n                        excess = this._getNumberOfWeeksBetweenDates(start, current);\n\n                        var normalizedCurrentIndex = normalizeDayIndex(current.getDay(), weekStart);\n                        var normalizedStartIndex = normalizeDayIndex(start.getDay(), weekStart);\n\n                        if (normalizedCurrentIndex < normalizedStartIndex) {\n                            excess += 1;\n                        }\n\n                        excess = intervalExcess(excess, interval);\n                        if (excess !== 0) {\n                            kendoDate.setDayOfWeek(current, rule.weekStart, -1);\n\n                            current.setDate(current.getDate() + (excess * 7));\n                            adjustDST(current, hours);\n\n                            modified = true;\n                        }\n                    } else if (frequency === \"monthly\") {\n                        diff = current.getFullYear() - start.getFullYear();\n                        diff = current.getMonth() - start.getMonth() + (diff * 12);\n\n                        excess = intervalExcess(diff, interval);\n\n                        if (excess !== 0) {\n                            day = rule._hasRuleValue ? 1 : current.getDate();\n\n                            current.setFullYear(current.getFullYear(), current.getMonth() + excess, day);\n                            adjustDST(current, hours);\n\n                            modified = true;\n                        }\n                    } else if (frequency === \"yearly\") {\n                        diff = current.getFullYear() - start.getFullYear();\n                        excess = intervalExcess(diff, interval);\n\n                        if (!rule.months) {\n                            month = current.getMonth();\n                        }\n\n                        if (!rule.yearDays && !rule.monthDays && !rule.weekDays) {\n                            day = current.getDate();\n                        }\n\n                        if (excess !== 0) {\n                            current.setFullYear(current.getFullYear() + excess, month, day);\n                            adjustDST(current, hours);\n\n                            modified = true;\n                        }\n                    }\n\n                    return modified;\n                },\n\n                _getNumberOfWeeksBetweenDates: function(first, second) {\n                     var weeks = (second - first) / 604800000;\n                     var exactWeeks = Math.floor(weeks);\n\n                    //this is happening when weeks pass DST change\n                    if (weeks - exactWeeks > 0.99) {\n                        exactWeeks = Math.round(weeks);\n                    }\n                    return exactWeeks;\n                },\n\n                _hour: function(date, rule, interval) {\n                    var startTime = rule._startTime,\n                        hours = startTime.getHours();\n\n                    if (interval) {\n                        hours += interval;\n                    }\n\n                    date.setHours(hours);\n\n                    hours = hours % 24;\n                    startTime.setHours(hours);\n                    adjustDST(date, hours);\n                },\n\n                _date: function(date, rule, interval) {\n                    var hours = date.getHours();\n\n                    date.setDate(date.getDate() + interval);\n                    if (!adjustDST(date, hours)) {\n                        this._hour(date, rule);\n                    }\n                }\n            }),\n            HourlyFrequency = BaseFrequency.extend({\n                next: function(date, rule) {\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        this._hour(date, rule, 1);\n                    }\n                },\n\n                normalize: function(options) {\n                    var rule = options.rule;\n\n                    if (options.idx === 4) {\n                        rule._startTime.setHours(0);\n                        this._hour(options.date, rule);\n                    }\n                }\n            }),\n            DailyFrequency = BaseFrequency.extend({\n                next: function(date, rule) {\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        this[rule.hours ? \"_hour\" : \"_date\"](date, rule, 1);\n                    }\n                }\n            }),\n            WeeklyFrequency = DailyFrequency.extend({\n                setup: function(rule, eventStartDate) {\n                    if (!rule.weekDays) {\n                        rule.weekDays = [{\n                            day: eventStartDate.getDay(),\n                            offset: 0\n                        }];\n                    }\n                }\n            }),\n            MonthlyFrequency = BaseFrequency.extend({\n                next: function(date, rule) {\n                    var day, hours;\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        if (rule.hours) {\n                            this._hour(date, rule, 1);\n                        } else if (rule.monthDays || rule.weekDays || rule.yearDays || rule.weeks) {\n                            this._date(date, rule, 1);\n                        } else {\n                            day = date.getDate();\n                            hours = date.getHours();\n\n                            date.setMonth(date.getMonth() + 1);\n                            adjustDST(date, hours);\n\n                            while (date.getDate() !== day) {\n                                date.setDate(day);\n                                adjustDST(date, hours);\n                            }\n\n                            this._hour(date, rule);\n                        }\n                    }\n                },\n                normalize: function(options) {\n                    var rule = options.rule,\n                        date = options.date,\n                        hours = date.getHours();\n\n                    if (options.idx === 0 && !rule.monthDays && !rule.weekDays) {\n                        date.setDate(options.day);\n                        adjustDST(date, hours);\n                    } else {\n                        BaseFrequency.fn.normalize(options);\n                    }\n                },\n                setup: function(rule, eventStartDate, date) {\n                    if (!rule.monthDays && !rule.weekDays) {\n                        date.setDate(eventStartDate.getDate());\n                    }\n                }\n            }),\n            YearlyFrequency = MonthlyFrequency.extend({\n                next: function(date, rule) {\n                    var day,\n                        hours = date.getHours();\n\n                    if (!BaseFrequency.fn.next(date, rule)) {\n                        if (rule.hours) {\n                            this._hour(date, rule, 1);\n                        } else if (rule.monthDays || rule.weekDays || rule.yearDays || rule.weeks) {\n                            this._date(date, rule, 1);\n                        } else if (rule.months) {\n                            day = date.getDate();\n\n                            date.setMonth(date.getMonth() + 1);\n                            adjustDST(date, hours);\n\n                            while (date.getDate() !== day) {\n                                date.setDate(day);\n                                adjustDST(date, hours);\n                            }\n\n                            this._hour(date, rule);\n                        } else {\n                            date.setFullYear(date.getFullYear() + 1);\n                            adjustDST(date, hours);\n\n                            this._hour(date, rule);\n                        }\n                    }\n                },\n                setup: function() {}\n            }),\n            frequencies = {\n                \"hourly\": new HourlyFrequency(),\n                \"daily\": new DailyFrequency(),\n                \"weekly\": new WeeklyFrequency(),\n                \"monthly\": new MonthlyFrequency(),\n                \"yearly\": new YearlyFrequency()\n            },\n            CLICK = \"click\",\n            CHANGE = \"change\";\n\n        function intervalExcess(diff, interval) {\n            var excess;\n            if (diff !== 0 && diff < interval) {\n                excess = interval - diff;\n            } else {\n                excess = diff % interval;\n                if (excess) {\n                    excess = interval - excess;\n                }\n            }\n\n            return excess;\n        }\n\n        function dayInYear(date) {\n            var month = date.getMonth();\n            var days = leapYear(date) ? DAYS_IN_LEAPYEAR[month] : DAYS_IN_YEAR[month];\n\n            return days + date.getDate();\n        }\n\n        function weekInYear(date, weekStart) {\n            var year, days;\n\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n            adjustDST(date, 0);\n\n            year = date.getFullYear();\n\n            if (weekStart !== undefined$1) {\n                setDayOfWeek(date, weekStart, -1);\n                date.setDate(date.getDate() + 4);\n            } else {\n                date.setDate(date.getDate() + (4 - (date.getDay() || 7)));\n            }\n\n            adjustDST(date, 0);\n            days = Math.floor((date.getTime() - new Date(year, 0, 1, -6)) / 86400000);\n\n            return 1 + Math.floor(days / 7);\n        }\n\n        function weekInMonth(date, weekStart) {\n            var firstWeekDay = firstDayOfMonth(date).getDay();\n            var firstWeekLength = 7 - (firstWeekDay + 7 - (weekStart || 7)) || 7;\n\n            if (firstWeekLength < 0) {\n                firstWeekLength += 7;\n            }\n\n            return Math.ceil((date.getDate() - firstWeekLength) / 7) + 1;\n        }\n\n        function normalizeDayIndex(weekDay, weekStart) {\n            return weekDay + (weekDay < weekStart ? 7 : 0);\n        }\n\n        function normalizeOffset(date, rule, weekStart) {\n            var offset = rule.offset;\n\n            if (!offset) {\n                return weekInMonth(date, weekStart);\n            }\n\n            var lastDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n            var weeksInMonth = weekInMonth(lastDate, weekStart);\n\n            var day = normalizeDayIndex(rule.day, weekStart);\n\n            var skipFirst = day < normalizeDayIndex(new Date(date.getFullYear(), date.getMonth(), 1).getDay(), weekStart);\n            var skipLast = day > normalizeDayIndex(lastDate.getDay(), weekStart);\n\n            if (offset < 0) {\n                offset = weeksInMonth + (offset + 1 - (skipLast ? 1 : 0));\n            } else if (skipFirst) {\n                offset += 1;\n            }\n\n            weeksInMonth -= (skipLast ? 1 : 0);\n\n            if (offset < (skipFirst ? 1 : 0) || offset > weeksInMonth) {\n                return null;\n            }\n\n            return offset;\n        }\n\n        function numberOfWeeks(date, weekStart) {\n            return weekInMonth(new Date(date.getFullYear(), date.getMonth() + 1, 0), weekStart);\n        }\n\n        function isInWeek(date, rule, weekStart) {\n            return weekInMonth(date, weekStart) === normalizeOffset(date, rule, weekStart);\n        }\n\n        function ruleWeekValues(weekDays, date, weekStart) {\n            var currentDay = normalizeDayIndex(date.getDay(), weekStart);\n            var length = weekDays.length;\n            var ruleWeekOffset;\n            var weekDay, day;\n            var weekNumber;\n            var result = [];\n            var idx = 0;\n\n            for (;idx < length; idx++) {\n                weekDay = weekDays[idx];\n\n                weekNumber = weekInMonth(date, weekStart);\n                ruleWeekOffset = normalizeOffset(date, weekDay, weekStart);\n\n                if (ruleWeekOffset === null) {\n                    continue;\n                }\n\n                if (weekNumber < ruleWeekOffset) {\n                    result.push(weekDay);\n                } else if (weekNumber === ruleWeekOffset) {\n                    day = normalizeDayIndex(weekDay.day, weekStart);\n\n                    if (currentDay < day) {\n                        result.push(weekDay);\n                    } else if (currentDay === day) {\n                        return null;\n                    }\n                }\n            }\n\n            return result;\n        }\n\n        function ruleValues(rules, value, normalize) {\n            var idx = 0,\n                length = rules.length,\n                availableRules = [],\n                ruleValue;\n\n            for (; idx < length; idx++) {\n                ruleValue = rules[idx];\n\n                if (normalize) {\n                    ruleValue = normalize(ruleValue);\n                }\n\n                if (value === ruleValue) {\n                    return null;\n                } else if (value < ruleValue) {\n                    availableRules.push(ruleValue);\n                }\n            }\n\n            return availableRules;\n        }\n\n        function parseArray(list, range) {\n            var idx = 0,\n                length = list.length,\n                value;\n\n            for (; idx < length; idx++) {\n                value = parseInt(list[idx], 10);\n                if (isNaN(value) || value < range.start || value > range.end || (value === 0 && range.start < 0)) {\n                    return null;\n                }\n\n                list[idx] = value;\n            }\n\n            return list.sort(numberSortPredicate);\n        }\n\n        function parseWeekDayList(list) {\n            var idx = 0, length = list.length,\n                value, valueLength, day;\n\n            for (; idx < length; idx++) {\n                value = list[idx];\n                valueLength = value.length;\n                day = value.substring(valueLength - 2).toUpperCase();\n\n                day = WEEK_DAYS_IDX[day];\n                if (day === undefined$1) {\n                    return null;\n                }\n\n                list[idx] = {\n                    offset: parseInt(value.substring(0, valueLength - 2), 10) || 0,\n                    day: day\n                };\n            }\n            return list;\n        }\n\n        function serializeWeekDayList(list) {\n            var idx = 0, length = list.length,\n                value, valueString, result = [];\n\n            for (; idx < length; idx++) {\n                value = list[idx];\n                if (typeof value === \"string\") {\n                    valueString = value;\n                } else {\n                    valueString = \"\" + WEEK_DAYS[value.day];\n\n                    if (value.offset) {\n                        valueString = value.offset + valueString;\n                    }\n                }\n\n                result.push(valueString);\n            }\n            return result.toString();\n        }\n\n        function getMonthLength(date) {\n            var month = date.getMonth();\n\n            if (month === 1) {\n                if (new Date(date.getFullYear(), 1, 29).getMonth() === 1) {\n                    return 29;\n                }\n                return 28;\n            }\n            return MONTHS[month];\n        }\n\n        function leapYear(year) {\n            year = year.getFullYear();\n            return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n        }\n\n        function numberSortPredicate(a, b) {\n            return a - b;\n        }\n\n        function parseExceptions(exceptions, zone) {\n            var idx = 0, length, date,\n                dates = [];\n\n            if (exceptions) {\n                exceptions = exceptions.split(exceptions.indexOf(\";\") !== -1 ? \";\" : \",\");\n                length = exceptions.length;\n\n                for (; idx < length; idx++) {\n                    date = parseUTCDate(exceptions[idx], zone);\n\n                    if (date) {\n                        dates.push(date);\n                    }\n                }\n            }\n\n            return dates;\n        }\n\n        function isException(exceptions, date, zone) {\n            var dates = Array.isArray(exceptions) ? exceptions : parseExceptions(exceptions, zone),\n                dateTime = date.getTime() - date.getMilliseconds(),\n                idx = 0, length = dates.length;\n\n            for (; idx < length; idx++) {\n                if (dates[idx].getTime() === dateTime) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n\n        function toExceptionString(dates, zone) {\n            var idx = 0;\n            var length;\n            var date;\n            var result = [].concat(dates);\n\n            for (length = result.length; idx < length; idx++) {\n                date = result[idx];\n                date = kendo.timezone.convert(date, zone || date.getTimezoneOffset(), \"Etc/UTC\");\n                result[idx] = kendo.toString(date, RECURRENCE_DATE_FORMAT);\n            }\n\n            return result.join(\",\");\n        }\n\n        function startPeriodByFreq(start, rule) {\n            var date = new Date(start);\n\n            switch (rule.freq) {\n                case \"yearly\":\n                    date.setFullYear(date.getFullYear(), 0, 1);\n                    break;\n\n                case \"monthly\":\n                    date.setFullYear(date.getFullYear(), date.getMonth(), 1);\n                    break;\n\n                case \"weekly\":\n                    setDayOfWeek(date, rule.weekStart, -1);\n                    break;\n\n                default:\n                    break;\n            }\n\n            if (rule.hours) {\n                date.setHours(0);\n            }\n\n            if (rule.minutes) {\n                date.setMinutes(0);\n            }\n\n            if (rule.seconds) {\n                date.setSeconds(0);\n            }\n\n            return date;\n        }\n\n        function endPeriodByFreq(start, rule) {\n            var date = new Date(start);\n\n            switch (rule.freq) {\n                case \"yearly\":\n                    date.setFullYear(date.getFullYear(), 11, 31);\n                    break;\n\n                case \"monthly\":\n                    date.setFullYear(date.getFullYear(), date.getMonth() + 1, 0);\n                    break;\n\n                case \"weekly\":\n                    setDayOfWeek(date, rule.weekStart, -1);\n                    date.setDate(date.getDate() + 6);\n                    break;\n\n                default:\n                    break;\n            }\n\n            if (rule.hours) {\n                date.setHours(23);\n            }\n\n            if (rule.minutes) {\n                date.setMinutes(59);\n            }\n\n            if (rule.seconds) {\n                date.setSeconds(59);\n            }\n\n            return date;\n        }\n\n        function eventsByPosition(periodEvents, start, positions, until) {\n            var periodEventsLength = periodEvents.length;\n            var events = [];\n            var position;\n            var event;\n            var inPeriod;\n\n            for (var idx = 0, length = positions.length; idx < length; idx++) {\n                position = positions[idx];\n\n                if (position < 0) {\n                    position = periodEventsLength + position;\n                } else {\n                    position -= 1; //convert to zero based index\n                }\n\n                event = periodEvents[position];\n                inPeriod = until ? event.start < until : true;\n\n                if (event && event.start >= start && inPeriod) {\n                    events.push(event);\n                }\n            }\n\n            return events;\n        }\n\n        function removeExceptionDates(periodEvents, exceptionDates, zone) {\n            var events = [];\n            var event;\n\n            for (var idx = 0; idx < periodEvents.length; idx++) {\n                event = periodEvents[idx];\n                if (!isException(exceptionDates, event.start, zone)) {\n                    events.push(event);\n                }\n            }\n\n            return events;\n        }\n\n        function expand(event, start, end, zone) {\n            var rule,\n                startTime, endTime, endDate,\n                hours, minutes, seconds,\n                durationMS, startPeriod, inPeriod,\n                ruleStart, ruleEnd,\n                useEventStart, freqName,\n                exceptionDates,\n                eventStartTime,\n                eventStartMS,\n                eventStart,\n                count, freq,\n                positions,\n                currentIdx,\n                periodEvents,\n                events = [],\n                shiftedStart,\n                shiftedEnd,\n                shiftedStartTime,\n                shifterEndTime;\n\n            rule = parseRule(event.recurrenceRule, zone, { // offsets argument\n                start: (getZoneOffset(event.start, zone) - getZoneOffset(event.start, event.startTimezone || zone)) * kendo.date.MS_PER_MINUTE,\n                end: (getZoneOffset(event.end, zone) - getZoneOffset(event.end, event.endTimezone || zone)) * kendo.date.MS_PER_MINUTE\n            });\n\n            if (!rule) {\n                return [event];\n            }\n\n            positions = rule.positions;\n            currentIdx = positions ? 0 : 1;\n\n            ruleStart = rule.start;\n            ruleEnd = rule.end;\n\n            if (ruleStart || ruleEnd) {\n                event = event.clone({\n                    start: ruleStart ? new Date(ruleStart.value[0]) : undefined$1,\n                    end: ruleEnd ? new Date(ruleEnd.value[0]) : undefined$1\n                });\n            }\n\n            eventStart = event.start;\n            eventStartMS = eventStart.getTime();\n            eventStartTime = getMilliseconds(eventStart);\n\n            exceptionDates = parseExceptions(event.recurrenceException, zone);\n\n            if (!exceptionDates[0] && rule.exdates) {\n                exceptionDates = rule.exdates.value;\n                event.set(\"recurrenceException\", toExceptionString(exceptionDates, zone));\n            }\n\n            startPeriod = start = new Date(start);\n            end = new Date(end);\n\n            freqName = rule.freq;\n            freq = frequencies[freqName];\n            count = rule.count;\n\n            if (rule.until && rule.until < end) {\n                end = new Date(rule.until);\n            }\n\n            useEventStart = freqName === \"yearly\" || freqName === \"monthly\" || freqName === \"weekly\";\n\n            if (start < eventStartMS || count || rule.interval > 1 || useEventStart ||\n                 ((freqName === \"daily\" || freqName === \"hourly\") && !rule.seconds)) {\n                        start = new Date(eventStartMS);\n            } else {\n                hours = start.getHours();\n                minutes = start.getMinutes();\n                seconds = start.getSeconds();\n\n                if (!rule.hours) {\n                    hours = eventStart.getHours();\n                }\n\n                if (!rule.minutes) {\n                    minutes = eventStart.getMinutes();\n                }\n\n                if (!rule.seconds) {\n                    seconds = eventStart.getSeconds();\n                }\n\n                start.setHours(hours, minutes, seconds, eventStart.getMilliseconds());\n            }\n\n            rule._startPeriod = new Date(start);\n\n            if (positions) {\n                start = startPeriodByFreq(start, rule);\n                end = endPeriodByFreq(end, rule);\n\n                var diff = getMilliseconds(end) - getMilliseconds(start);\n                if (diff < 0) {\n                    hours = start.getHours();\n                    end.setHours(hours, start.getMinutes(), start.getSeconds(), start.getMilliseconds());\n                    kendoDate.adjustDST(end, hours);\n                }\n\n                rule._startPeriod = new Date(start);\n                rule._endPeriod = endPeriodByFreq(start, rule);\n            }\n\n            durationMS = event.duration();\n            var allDayCompensation = event.isAllDay ? 86400000 : 0;\n            rule._startTime = startTime = kendoDate.toInvariantTime(start);\n\n            if (freq.setup) {\n                freq.setup(rule, eventStart, start);\n            }\n\n            freq.limit(start, end, rule);\n\n            while (start <= end) {\n                endDate = new Date(start);\n                setTime(endDate, durationMS);\n                var inPeriodCheckEndDate = new Date(start);\n                setTime(inPeriodCheckEndDate, durationMS + allDayCompensation);\n\n                inPeriod = start >= startPeriod || inPeriodCheckEndDate > startPeriod;\n\n                if (inPeriod && !isException(exceptionDates, start, zone) || positions) {\n                    startTime = kendoDate.toUtcTime(kendoDate.getDate(start)) + getMilliseconds(rule._startTime);\n                    endTime = startTime + durationMS;\n\n                    if (eventStartMS !== start.getTime() || eventStartTime !== getMilliseconds(rule._startTime)) {\n                        var startZone = event.startTimezone || event.endTimezone;\n                        var endZone = event.endTimezone || event.startTimezone;\n\n                        if (!event.isAllDay) {\n                            if ((zone && startZone) || (!zone && !startZone)) {\n                                var startOffsetDiff = getZoneOffset(start, zone) - getZoneOffset(event.start, zone);\n                                var endOffsetDiff = getZoneOffset(endDate, zone) - getZoneOffset(event.end, zone);\n                                var startTZOffsetDiff = getZoneOffset(start, startZone) - getZoneOffset(event.start, startZone);\n                                var endTZOffsetDiff = getZoneOffset(endDate, endZone) - getZoneOffset(event.end, endZone);\n\n                                if (startOffsetDiff !== startTZOffsetDiff) {\n                                    var offsetTicksStart = (startOffsetDiff - startTZOffsetDiff) * 60000;\n                                    shiftedStart = new Date(start.getTime() - offsetTicksStart);\n                                    shiftedStartTime = startTime - offsetTicksStart;\n                                }\n\n                                if (endOffsetDiff !== endTZOffsetDiff) {\n                                    var offsetTicksEnd = (endOffsetDiff - endTZOffsetDiff) * 60000;\n                                    shiftedEnd = new Date(endDate.getTime() - offsetTicksEnd);\n                                    shifterEndTime = endTime - offsetTicksEnd;\n                                }\n                            }\n                        }\n\n\n                        events.push(event.toOccurrence({\n                            start: shiftedStart || new Date(start),\n                            end: shiftedEnd || endDate,\n                            _startTime: shiftedStartTime || startTime,\n                            _endTime: shifterEndTime || endTime\n                        }));\n\n                        shiftedStart = shiftedEnd = shiftedStartTime = shifterEndTime = null;\n                    } else {\n                        event._startTime = startTime;\n                        event._endTime = endTime;\n                        events.push(event);\n                    }\n                }\n\n                if (positions) {\n                    freq.next(start, rule);\n                    freq.limit(start, end, rule);\n\n                    if (start > rule._endPeriod) {\n                        periodEvents = eventsByPosition(events.slice(currentIdx), eventStart, positions, rule.until);\n                        periodEvents = removeExceptionDates(periodEvents, exceptionDates, zone);\n                        events = events.slice(0, currentIdx).concat(periodEvents);\n\n                        rule._endPeriod = endPeriodByFreq(start, rule);\n\n                        currentIdx = events.length;\n                    }\n\n                    if (count && count === currentIdx) {\n                        break;\n                    }\n\n                } else {\n                    if (count && count === currentIdx) {\n                        break;\n                    }\n\n                    currentIdx += 1;\n\n                    var isMissingDSTHour = isDSTMissingHour(start);\n                    freq.next(start, rule);\n\n                    if (isMissingDSTHour && rule.freq !== \"hourly\" && kendoDate.toInvariantTime(event.start).getTime() !== kendoDate.toInvariantTime(start).getTime()) {\n                        rule._startTime = startTime = new Date(start.getTime() - 3600000);\n                    }\n\n                    freq.limit(start, end, rule);\n                }\n            }\n\n            return events;\n        }\n\n        function isDSTMissingHour(date) {\n            var dateOffset = date.getTimezoneOffset();\n            var dateMinusHour = new Date(date.getTime() - 3600000);\n            var dateMinusHourOffset = dateMinusHour.getTimezoneOffset();\n\n            return dateOffset < dateMinusHourOffset;\n        }\n\n        function getZoneOffset(date, zone) {\n            return zone ? kendo.timezone.offset(date, zone) : date.getTimezoneOffset();\n        }\n\n        function parseUTCDate(value, zone) {\n            value = kendo.parseDate(value, DATE_FORMATS); //Parse UTC to local time\n\n            if (value && zone) {\n                value = timezone.apply(value, zone);\n            }\n\n            return value;\n        }\n\n        function parseDateRule(dateRule, zone) {\n            var pairs = dateRule.split(\";\");\n            var pair;\n            var property;\n            var value;\n            var tzid;\n            var valueIdx, valueLength;\n\n            for (var idx = 0, length = pairs.length; idx < length; idx++) {\n                pair = pairs[idx].split(\":\");\n                property = pair[0];\n                value = pair[1];\n\n                if (property.indexOf(\"TZID\") !== -1) {\n                    tzid = property.substring(property.indexOf(\"TZID\")).split(\"=\")[1];\n                }\n\n                if (value) {\n                    value = value.split(\",\");\n\n                    for (valueIdx = 0, valueLength = value.length; valueIdx < valueLength; valueIdx++) {\n                        value[valueIdx] = parseUTCDate(value[valueIdx], tzid || zone);\n                    }\n                }\n            }\n\n            if (value) {\n                return {\n                    value: value,\n                    tzid: tzid\n                };\n            }\n        }\n\n        function parseRule(recur, zone, offsets) {\n            var instance = {};\n            var splits, value;\n            var idx = 0, length;\n            var ruleValue = false;\n            var rule, part, parts;\n            var property, weekStart, weekDays;\n            var predicate = function(a, b) {\n                var day1 = a.day,\n                    day2 = b.day;\n\n                if (day1 < weekStart) {\n                   day1 += 7;\n                }\n\n                if (day2 < weekStart) {\n                    day2 += 7;\n                }\n\n                return day1 - day2;\n            };\n\n            if (!recur) {\n                return null;\n            }\n\n            parts = recur.split(\"\\n\");\n\n            if (!parts[1] && (recur.indexOf(\"DTSTART\") !== -1 || recur.indexOf(\"DTEND\") !== -1 || recur.indexOf(\"EXDATE\") !== -1)) {\n                parts = recur.split(\" \");\n            }\n\n            for (idx = 0, length = parts.length; idx < length; idx++) {\n                part = kendo.trim(parts[idx]);\n\n                if (part.indexOf(\"DTSTART\") !== -1) {\n                    instance.start = parseDateRule(part, zone);\n                } else if (part.indexOf(\"DTEND\") !== -1) {\n                    instance.end = parseDateRule(part, zone);\n                } else if (part.indexOf(\"EXDATE\") !== -1) {\n                    instance.exdates = parseDateRule(part, zone);\n                } else if (part.indexOf(\"RRULE\") !== -1) {\n                    rule = part.substring(6);\n                } else if (kendo.trim(part)) {\n                    rule = part;\n                }\n            }\n\n            rule = rule.split(\";\");\n\n            for (idx = 0, length = rule.length; idx < length; idx++) {\n                property = rule[idx];\n                splits = property.split(\"=\");\n                value = kendo.trim(splits[1]).split(\",\");\n\n                switch (kendo.trim(splits[0]).toUpperCase()) {\n                    case \"FREQ\":\n                        instance.freq = value[0].toLowerCase();\n                        break;\n                    case \"UNTIL\":\n                        instance.until = parseUTCDate(value[0], zone);\n                        break;\n                    case \"COUNT\":\n                        instance.count = parseInt(value[0], 10);\n                        break;\n                    case \"INTERVAL\":\n                        instance.interval = parseInt(value[0], 10);\n                        break;\n                    case \"BYSECOND\":\n                        instance.seconds = parseArray(value, { start: 0, end: 60 });\n                        ruleValue = true;\n                        break;\n                    case \"BYMINUTE\":\n                        instance.minutes = parseArray(value, { start: 0, end: 59 });\n                        ruleValue = true;\n                        break;\n                    case \"BYHOUR\":\n                        instance.hours = parseArray(value, { start: 0, end: 23 });\n                        ruleValue = true;\n                        break;\n                    case \"BYMONTHDAY\":\n                        instance.monthDays = parseArray(value, { start: -31, end: 31 });\n                        ruleValue = true;\n                        break;\n                    case \"BYYEARDAY\":\n                        instance.yearDays = parseArray(value, { start: -366, end: 366 });\n                        ruleValue = true;\n                        break;\n                    case \"BYMONTH\":\n                        instance.months = parseArray(value, { start: 1, end: 12 });\n                        ruleValue = true;\n                        break;\n                    case \"BYDAY\":\n                        instance.weekDays = weekDays = parseWeekDayList(value);\n                        ruleValue = true;\n                        break;\n                    case \"BYWEEKNO\":\n                        instance.weeks = parseArray(value, { start: -53, end: 53 });\n                        ruleValue = true;\n                        break;\n                    case \"BYSETPOS\":\n                        instance.positions = parseArray(value, { start: -366, end: 366 });\n                        break;\n                    case \"WKST\":\n                        instance.weekStart = weekStart = WEEK_DAYS_IDX[value[0]];\n                        break;\n                }\n            }\n\n            if (instance.freq === undefined$1 || (instance.count !== undefined$1 && instance.until)) {\n                return null;\n            }\n\n            if (!instance.interval) {\n                instance.interval = 1;\n            }\n\n            if (weekStart === undefined$1) {\n                instance.weekStart = weekStart = kendo.culture().calendar.firstDay;\n            }\n\n            if (weekDays) {\n                instance.weekDays = weekDays.sort(predicate);\n            }\n\n            if (instance.positions && !ruleValue) {\n                instance.positions = null;\n            }\n\n            instance._hasRuleValue = ruleValue;\n            instance.offsets = offsets;\n\n            return instance;\n        }\n\n        function serializeDateRule(dateRule, zone) {\n            var value = dateRule.value;\n            var tzid = dateRule.tzid || \"\";\n            var length = value.length;\n            var idx = 0;\n            var val;\n\n            for (; idx < length; idx++) {\n                val = value[idx];\n                val = timezone.convert(val, tzid || zone || val.getTimezoneOffset(), \"Etc/UTC\");\n                value[idx] = kendo.toString(val, \"yyyyMMddTHHmmssZ\");\n            }\n\n            if (tzid) {\n                tzid = \";TZID=\" + tzid;\n            }\n\n            return tzid + \":\" + value.join(\",\") + \" \";\n        }\n\n        function serialize(rule, zone) {\n            var weekStart = rule.weekStart;\n            var ruleString = \"FREQ=\" + rule.freq.toUpperCase();\n            var exdates = rule.exdates || \"\";\n            var start = rule.start || \"\";\n            var end = rule.end || \"\";\n            var until = rule.until;\n\n            if (weekStart === undefined$1) {\n                weekStart = kendo.culture().calendar.firstDay;\n            }\n\n            if (rule.interval > 1) {\n                ruleString += \";INTERVAL=\" + rule.interval;\n            }\n\n            if (rule.count) {\n                ruleString += \";COUNT=\" + rule.count;\n            }\n\n            if (until) {\n                until = timezone.convert(until, zone || until.getTimezoneOffset(), \"Etc/UTC\");\n\n                ruleString += \";UNTIL=\" + kendo.toString(until, \"yyyyMMddTHHmmssZ\");\n            }\n\n            if (rule.months) {\n                ruleString += \";BYMONTH=\" + rule.months;\n            }\n\n            if (rule.weeks) {\n                ruleString += \";BYWEEKNO=\" + rule.weeks;\n            }\n\n            if (rule.yearDays) {\n                ruleString += \";BYYEARDAY=\" + rule.yearDays;\n            }\n\n            if (rule.monthDays) {\n                ruleString += \";BYMONTHDAY=\" + rule.monthDays;\n            }\n\n            if (rule.weekDays) {\n                ruleString += \";BYDAY=\" + serializeWeekDayList(rule.weekDays);\n            }\n\n            if (rule.hours) {\n                ruleString += \";BYHOUR=\" + rule.hours;\n            }\n\n            if (rule.minutes) {\n                ruleString += \";BYMINUTE=\" + rule.minutes;\n            }\n\n            if (rule.seconds) {\n                ruleString += \";BYSECOND=\" + rule.seconds;\n            }\n\n            if (rule.positions) {\n                ruleString += \";BYSETPOS=\" + rule.positions;\n            }\n\n            if (weekStart !== undefined$1) {\n                ruleString += \";WKST=\" + WEEK_DAYS[weekStart];\n            }\n\n            if (start) {\n                start = \"DTSTART\" + serializeDateRule(start, zone);\n            }\n\n            if (end) {\n                end = \"DTEND\" + serializeDateRule(end, zone);\n            }\n\n            if (exdates) {\n                exdates = \"EXDATE\" + serializeDateRule(exdates, zone);\n            }\n\n            if (start || end || exdates) {\n                ruleString = start + end + exdates + \"RRULE:\" + ruleString;\n            }\n\n            return ruleString;\n        }\n\n        kendo.recurrence = {\n            rule: {\n                parse: parseRule,\n                serialize: serialize\n            },\n            expand: expand,\n            dayInYear: dayInYear,\n            weekInYear: weekInYear,\n            weekInMonth: weekInMonth,\n            numberOfWeeks: numberOfWeeks,\n            isException: isException,\n            toExceptionString: toExceptionString\n        };\n\n        var RECURRENCE_VIEW_TEMPLATE = kendo.template(function (ref) {\n               var frequency = ref.frequency;\n               var messages = ref.messages;\n               var end = ref.end;\n\n               return (frequency !== \"never\" ?\n                '<div class=\"k-form-field\">' +\n                    \"<label id=\\\"recur_interval_label\\\" class=\\\"k-label k-form-label\\\" for=\\\"recur_interval\\\">\" + (encode(messages.repeatEvery)) + \"</label>\" +\n                    '<div class=\"k-form-field-wrap\">' +\n                        \"<input id=\\\"recur_interval\\\" class=\\\"k-recur-interval\\\" title=\\\"\" + (encode(messages.repeatEvery)) + \" \" + (encode(messages.interval)) + \"\\\" aria-labelledby=\\\"recur_interval_label\\\">\" + (encode(messages.interval)) +\n                    '</div>' +\n                '</div>' : ''\n           ) +\n           (frequency === \"weekly\" ?\n                '<div class=\"k-form-field\">' +\n                    \"<label class=\\\"k-label k-form-label\\\">\" + (encode(messages.repeatOn)) + \"</label>\" +\n                    '<div class=\"k-form-field-wrap\">' +\n                        \"<div class=\\\"k-button-group-stretched k-recur-weekday-buttons\\\" title=\\\"\" + (encode(messages.repeatOn)) + \"\\\"></div></div>\" +\n                    '</div>' +\n                '</div>' : ''\n            ) +\n            (frequency === \"monthly\" ?\n                \"<div class=\\\"k-form-field\\\"><label class=\\\"k-label k-form-label\\\">\" + (encode(messages.repeatOn)) + \"</label></div>\" +\n                    '<div class=\"k-form-field-wrap\">' +\n                        '<ul class=\"k-radio-list\">' +\n                            '<li class=\"k-radio-item\">' +\n                                \"<label class=\\\"k-radio-label\\\"><input class=\\\"k-recur-month-radio k-radio k-radio-md\\\" type=\\\"radio\\\" name=\\\"month\\\" value=\\\"monthday\\\" title=\\\"\" + (encode(messages.repeatOn)) + \"\\\" />\" + (encode(messages.date)) + \":</label>\" +\n                                \"<input class=\\\"k-recur-monthday\\\" aria-label=\\\"\" + (encode(messages.date)) + \"\\\" title=\\\"\" + (encode(messages.date)) + \"\\\" />\" +\n                            '</li>' +\n                            '<li class=\"k-radio-item\">' +\n                                \"<input class=\\\"k-recur-month-radio k-radio k-radio-md\\\" type=\\\"radio\\\" name=\\\"month\\\" value=\\\"weekday\\\" aria-label=\\\"\" + (encode(messages.repeatOn)) + \" \" + (encode(messages.day)) + \"\\\" title=\\\"\" + (encode(messages.repeatOn)) + \" \" + (encode(messages.day)) + \"\\\" />\" +\n                                \"<input class=\\\"k-recur-weekday-offset\\\" title=\\\"\" + (encode(messages.repeatOn)) + \"\\\" style=\\\"width:8em;\\\" />\" +\n                                \"<input class=\\\"k-recur-weekday\\\" title=\\\"\" + (encode(messages.day)) + \"\\\" style=\\\"width:8em;\\\" />\" +\n                            '</li>' +\n                        '</ul>' +\n                    '</div>' +\n                '</div>' : ''\n            ) +\n           (frequency === \"yearly\" ?\n                \"<div class=\\\"k-form-field\\\"><label class=\\\"k-label k-form-label\\\">\" + (encode(messages.repeatOn)) + \"</label>\" +\n                    '<div class=\"k-form-field-wrap\">' +\n                        '<ul class=\"k-radio-list\">' +\n                            '<li class=\"k-radio-item\">' +\n                                \"<input class=\\\"k-recur-year-radio k-radio k-radio-md\\\" type=\\\"radio\\\" name=\\\"year\\\" value=\\\"monthday\\\" title=\\\"\" + (encode(messages.repeatOn)) + \" \" + (encode(messages.month)) + \"\\\" />\" +\n                                \"<input class=\\\"k-recur-month\\\" aria-label=\\\"\" + (encode(messages.month)) + \"\\\" title=\\\"\" + (encode(messages.month)) + \"\\\" style=\\\"width:8em;\\\" />\" +\n                                \"<input class=\\\"k-recur-monthday\\\" aria-label=\\\"\" + (encode(messages.date)) + \"\\\" title=\\\"\" + (encode(messages.date)) + \"\\\" />\" +\n                            '</li>' +\n                            '<li class=\"k-radio-item\">' +\n                                \"<input class=\\\"k-recur-year-radio k-radio k-radio-md\\\" type=\\\"radio\\\" name=\\\"year\\\" value=\\\"weekday\\\" title=\\\"\" + (encode(messages.repeatOn)) + \" \" + (encode(messages.day)) + \"\\\" />\" +\n                                \"<input class=\\\"k-recur-weekday-offset\\\" title=\\\"\" + (encode(messages.repeatOn)) + \"\\\" style=\\\"width:8em;\\\"/><input class=\\\"k-recur-weekday\\\" title=\\\"\" + (encode(messages.day)) + \"\\\" style=\\\"width:8em;\\\"/>\" + (encode(messages.of)) + \"<input class=\\\"k-recur-month\\\" title=\\\"\" + (encode(messages.of + messages.month)) + \"\\\" style=\\\"width:8em;\\\"/>\" +\n                            '</li>' +\n                        '</ul>' +\n                    '</div>' +\n                '</div>' : ''\n           ) +\n           (frequency !== \"never\" ?\n                \"<div class=\\\"k-form-field\\\"><label class=\\\"k-label k-form-label\\\">\" + (encode(end.label)) + \"</label>\" +\n                    '<div class=\"k-form-field-wrap\">' +\n                        '<ul class=\"k-radio-list\">' +\n                            '<li class=\"k-radio-item\">' +\n                                \"<label class=\\\"k-radio-label\\\"><input class=\\\"k-recur-end-never k-radio k-radio-md\\\" type=\\\"radio\\\" name=\\\"end\\\" value=\\\"never\\\" title=\\\"\" + (encode(end.label)) + \"\\\" />\" + (encode(end.never)) + \"</label>\" +\n                            '</li>' +\n                            '<li class=\"k-radio-item\">' +\n                                \"<label class=\\\"k-radio-label\\\"><input class=\\\"k-recur-end-count k-radio k-radio-md\\\" type=\\\"radio\\\" name=\\\"end\\\" value=\\\"count\\\" title=\\\"\" + (encode(end.label)) + \"\\\" />\" + (encode(end.after)) + \"</label>\" +\n                                \"<input class=\\\"k-recur-count\\\" aria-label=\\\"\" + (encode(end.occurrence)) + \"\\\" title=\\\"\" + (encode(end.occurrence)) + \"\\\" />\" + (encode(end.occurrence)) +\n                            '</li>' +\n                            '<li class=\"k-radio-item\">' +\n                                \"<label class=\\\"k-radio-label\\\"><input class=\\\"k-recur-end-until k-radio k-radio-md\\\" type=\\\"radio\\\" name=\\\"end\\\" value=\\\"until\\\" title=\\\"\" + (encode(end.label)) + \"\\\" />\" + (encode(end.on)) + \"</label>\" +\n                                \"<input class=\\\"k-recur-until\\\" title=\\\"\" + (encode(end.on)) + \"\\\" aria-label=\\\"\" + (encode(end.on)) + \"\\\" name=\\\"recur-until\\\" />\" +\n                            '</li>' +\n                        '</ul>' +\n                    '</div>' +\n                '</div>' : ''\n           );\n        }\n        );\n\n        var DAY_RULE = [\n            { day: 0, offset: 0 },\n            { day: 1, offset: 0 },\n            { day: 2, offset: 0 },\n            { day: 3, offset: 0 },\n            { day: 4, offset: 0 },\n            { day: 5, offset: 0 },\n            { day: 6, offset: 0 }\n        ];\n\n        var WEEKDAY_RULE = [\n            { day: 1, offset: 0 },\n            { day: 2, offset: 0 },\n            { day: 3, offset: 0 },\n            { day: 4, offset: 0 },\n            { day: 5, offset: 0 }\n        ];\n\n        var WEEKEND_RULE = [\n            { day: 0, offset: 0 },\n            { day: 6, offset: 0 }\n        ];\n\n        var BaseRecurrenceEditor = Widget.extend({\n            init: function(element, options) {\n                var start;\n                var that = this;\n                var frequencies = options && options.frequencies;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.wrapper = that.element;\n\n                options = that.options;\n                options.start = start = options.start || kendoDate.today();\n\n                if (frequencies) {\n                    options.frequencies = frequencies;\n                }\n\n                if (typeof start === \"string\") {\n                    options.start = kendo.parseDate(start, \"yyyyMMddTHHmmss\");\n                }\n\n                if (options.firstWeekDay === null) {\n                    options.firstWeekDay = kendo.culture().calendar.firstDay;\n                }\n\n                that._namespace = \".\" + options.name;\n            },\n\n            options: {\n                value: \"\",\n                start: \"\",\n                timezone: \"\",\n                spinners: true,\n                firstWeekDay: null,\n                frequencies: [\n                    \"never\",\n                    \"daily\",\n                    \"weekly\",\n                    \"monthly\",\n                    \"yearly\"\n                ],\n                mobile: false,\n                messages: {\n                    repeat: \"Repeat\",\n                    recurrenceEditorTitle: \"Recurrence editor\",\n                    frequencies: {\n                        never: \"Never\",\n                        hourly: \"Hourly\",\n                        daily: \"Daily\",\n                        weekly: \"Weekly\",\n                        monthly: \"Monthly\",\n                        yearly: \"Yearly\"\n                    },\n                    hourly: {\n                        repeatEvery: \"Repeat every: \",\n                        interval: \" hour(s)\"\n                    },\n                    daily: {\n                        repeatEvery: \"Repeat every: \",\n                        interval: \" day(s)\"\n                    },\n                    weekly: {\n                        interval: \" week(s)\",\n                        repeatEvery: \"Repeat every: \",\n                        repeatOn: \"Repeat on: \"\n                    },\n                    monthly: {\n                        repeatEvery: \"Repeat every: \",\n                        repeatOn: \"Repeat on: \",\n                        interval: \" month(s)\",\n                        day: \"Day \",\n                        date: \"Date\"\n                    },\n                    yearly: {\n                        repeatEvery: \"Repeat every: \",\n                        repeatOn: \"Repeat on: \",\n                        interval: \" year(s)\",\n                        of: \" of \",\n                        month: \"month\",\n                        day: \"day\",\n                        date: \"Date\"\n                    },\n                    end: {\n                        label: \"End:\",\n                        mobileLabel: \"Ends\",\n                        never: \"Never\",\n                        after: \"After \",\n                        occurrence: \" occurrence(s)\",\n                        on: \"On \"\n                    },\n                    offsetPositions: {\n                        first: \"first\",\n                        second: \"second\",\n                        third: \"third\",\n                        fourth: \"fourth\",\n                        last: \"last\"\n                    },\n                    weekdays: {\n                        day: \"day\",\n                        weekday: \"weekday\",\n                        weekend: \"weekend day\"\n                    }\n                }\n            },\n\n            events: [\"change\"],\n\n            _initInterval: function() {\n                var that = this;\n                var rule = that._value;\n\n                that._container\n                    .find(\".k-recur-interval\")\n                    .kendoNumericTextBox({\n                        spinners: that.options.spinners,\n                        value: rule.interval || 1,\n                        decimals: 0,\n                        format: \"#\",\n                        min: 1,\n                        change: function() {\n                            rule.interval = this.value();\n                            that._trigger();\n                        }\n                    });\n            },\n\n            _weekDayButtons: function(firstDay) {\n                var that = this,\n                    names = kendo.culture().calendar.days.names,\n                    abbreviated = kendo.culture().calendar.days.namesAbbr,\n                    repeatOn = that.options.messages.weekly.repeatOn,\n                    length = names.length,\n                    idx = 0,\n                    values = [],\n                    items = [];\n\n                for (; idx < length; idx++) {\n                    values.push(idx);\n                }\n\n                names = names.slice(firstDay).concat(names.slice(0, firstDay));\n                abbreviated = abbreviated.slice(firstDay).concat(abbreviated.slice(0, firstDay));\n                values = values.slice(firstDay).concat(values.slice(0, firstDay));\n\n                for (idx = 0; idx < length; idx++) {\n                    items.push({\n                        text: abbreviated[idx],\n                        attributes: {\n                            \"data-value\": values[idx],\n                            \"aria-label\": repeatOn + \" \" + names[idx]\n                        }\n                    });\n                }\n\n                if (that._container.find(\".k-recur-weekday-buttons\").length > 0) {\n                    that._weekDayButtonGroup = new ButtonGroup(that._container.find(\".k-recur-weekday-buttons\"), {\n                        items: items,\n                        selection: \"multiple\",\n                        select: function() {\n                            var rule = that._value,\n                                selectedDays = that._weekDayButtonGroup.current();\n\n                            rule.weekDays = selectedDays.map(function(i, day) {\n                                return {\n                                    day: Number(day.getAttribute(\"data-value\")),\n                                    offset: 0\n                                };\n                            });\n\n                            if (!that.options.mobile) {\n                                that._trigger();\n                            }\n                        }\n                    });\n                }\n            },\n\n            _weekDayRule: function(clear) {\n                var that = this;\n                var weekday = (that._weekDay.element || that._weekDay).val();\n                var offset = Number((that._weekDayOffset.element || that._weekDayOffset).val());\n                var weekDays = null;\n                var positions = null;\n\n                if (!clear) {\n                    if (weekday === \"day\") {\n                        weekDays = DAY_RULE;\n                        positions = offset;\n                    } else if (weekday === \"weekday\") {\n                        weekDays = WEEKDAY_RULE;\n                        positions = offset;\n                    } else if (weekday === \"weekend\") {\n                        weekDays = WEEKEND_RULE;\n                        positions = offset;\n                    } else {\n                        weekDays = [{\n                            offset: offset,\n                            day: Number(weekday)\n                        }];\n                    }\n                }\n\n                that._value.weekDays = weekDays;\n                that._value.positions = positions;\n            },\n\n            _weekDayView: function() {\n                var that = this;\n                var weekDays = that._value.weekDays;\n                var positions = that._value.positions;\n                var weekDayOffsetWidget = that._weekDayOffset;\n                var weekDayOffset;\n                var weekDayValue;\n                var length;\n                var method;\n\n                if (weekDays) {\n                    length = weekDays.length;\n\n                    if (positions) {\n                        if (length === 7) {\n                            weekDayValue = \"day\";\n                            weekDayOffset = positions;\n                        } else if (length === 5) {\n                            weekDayValue = \"weekday\";\n                            weekDayOffset = positions;\n                        } else if (length === 2) {\n                            weekDayValue = \"weekend\";\n                            weekDayOffset = positions;\n                        }\n                    }\n\n                    if (!weekDayValue) {\n                        weekDays = weekDays[0];\n                        weekDayValue = weekDays.day;\n                        weekDayOffset = weekDays.offset || \"\";\n                    }\n\n                    method = weekDayOffsetWidget.value ? \"value\" : \"val\";\n\n                    weekDayOffsetWidget[method](weekDayOffset);\n                    that._weekDay[method](weekDayValue);\n                }\n            },\n\n            _initWeekDay: function() {\n                var that = this, data;\n\n                var weekdayMessage = that.options.messages.weekdays;\n                var offsetMessage = that.options.messages.offsetPositions;\n\n                var weekDayInput = that._container.find(\".k-recur-weekday\");\n\n                var change = function() {\n                    that._weekDayRule();\n                    that._trigger();\n                };\n\n                if (weekDayInput[0]) {\n                    that._weekDayOffset = new DropDownList(that._container.find(\".k-recur-weekday-offset\"), {\n                        autoWidth: true,\n                        change: change,\n                        dataTextField: \"text\",\n                        dataValueField: \"value\",\n                        dataSource: [\n                            { text: offsetMessage.first, value: \"1\" },\n                            { text: offsetMessage.second, value: \"2\" },\n                            { text: offsetMessage.third, value: \"3\" },\n                            { text: offsetMessage.fourth, value: \"4\" },\n                            { text: offsetMessage.last, value: \"-1\" }\n                        ]\n                    });\n\n                    data = [\n                        { text: weekdayMessage.day, value: \"day\" },\n                        { text: weekdayMessage.weekday, value: \"weekday\" },\n                        { text: weekdayMessage.weekend, value: \"weekend\" }\n                    ];\n\n                    that._weekDay = new DropDownList(weekDayInput, {\n                        autoWidth: true,\n                        value: that.options.start.getDay(),\n                        change: change,\n                        dataTextField: \"text\",\n                        dataValueField: \"value\",\n                        dataSource: data.concat($.map(kendo.culture().calendar.days.names, function(dayName, idx) {\n                            return {\n                                text: dayName,\n                                value: idx\n                            };\n                        }))\n                    });\n\n                    that._weekDayView();\n                }\n            },\n\n            _initWeekDays: function() {\n                var that = this;\n                var rule = that._value;\n                var weekDayButtonGroup = that._weekDayButtonGroup;\n\n                if (weekDayButtonGroup && rule.weekDays && rule.weekDays.length) {\n                    var ruleDays = rule.weekDays,\n                        ruleDaysLength = ruleDays.length,\n                        selectors = [],\n                        i = 0,\n                        selectedWeekDayButtons;\n\n                    for (; i < ruleDaysLength; i++) {\n                        selectors.push(\"[data-value='\" + ruleDays[i].day + \"']\");\n                    }\n\n                    selectedWeekDayButtons = weekDayButtonGroup.element.find(selectors.join(\",\"));\n                    weekDayButtonGroup.select(selectedWeekDayButtons);\n                }\n            },\n\n            _initMonthDay: function() {\n                var that = this;\n                var rule = that._value;\n                var monthDayInput = that._container.find(\".k-recur-monthday\");\n\n                if (monthDayInput[0]) {\n                    that._monthDay = new kendo.ui.NumericTextBox(monthDayInput, {\n                        spinners: that.options.spinners,\n                        min: 1,\n                        max: 31,\n                        decimals: 0,\n                        format: \"#\",\n                        value: rule.monthDays ? rule.monthDays[0] : that.options.start.getDate(),\n                        change: function() {\n                            var value = this.value();\n\n                            rule.monthDays = value ? [value] : value;\n                            that._trigger();\n                        }\n                    });\n                }\n            },\n\n            _initCount: function() {\n                var that = this,\n                    input = that._container.find(\".k-recur-count\"),\n                    rule = that._value;\n\n                that._count = input.kendoNumericTextBox({\n                    spinners: that.options.spinners,\n                    value: rule.count || 1,\n                    decimals: 0,\n                    format: \"#\",\n                    min: 1,\n                    change: function() {\n                        rule.count = this.value();\n                        that._trigger();\n                    }\n                }).data(\"kendoNumericTextBox\");\n            },\n\n            _initUntil: function() {\n                var that = this,\n                    input = that._container.find(\".k-recur-until\"),\n                    start = that.options.start,\n                    rule = that._value,\n                    until = rule.until,\n                    min = until && until < start ? until : start,\n                    startInput = that.wrapper.closest(\".k-scheduler-edit-form\").find(\"[name=start]:visible\"),\n                    validDateValidationMessage = kendo.format(kendo.ui.Validator.prototype.options.messages.date, that.options.messages.end.on),\n                    dateCompareValidationMessage = kendo.ui.Validator.prototype.options.messages.dateCompare,\n                    initialValue = new Date(start.getFullYear(), start.getMonth(), start.getDate(), 23, 59, 59);\n\n                input.attr(\"data-validDate-msg\", validDateValidationMessage);\n                input.attr(\"data-untilDateCompare-msg\", dateCompareValidationMessage);\n\n                if (startInput.length === 0) {\n                    startInput = that.wrapper.closest(\".k-scheduler-edit-form\").find(\"[name=start]\");\n                }\n\n                if (startInput.length > 0 && startInput.val()) {\n                    min = kendo.parseDate(startInput.val());\n\n                    if (initialValue < min) {\n                        initialValue = min;\n                    }\n                }\n\n                that._until = input.kendoDatePicker({\n                    min: min,\n                    value: until || initialValue,\n                    change: function() {\n                        var date = this.value();\n                        if (date) {\n                            rule.until = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59);\n                        }\n                        that._trigger();\n                    }\n                }).data(\"kendoDatePicker\");\n\n                if (startInput) {\n                    startInput.on(\"change\", function() {\n                        var untilEl = that._until.element,\n                            readonly = Boolean(untilEl.attr(\"readonly\")),\n                            enable = !(Boolean(untilEl.is(\"[disabled]\") || untilEl.parents(\"fieldset\").is(':disabled')));\n\n                        that._until.setOptions({\n                            min: startInput.val(),\n                            readonly: readonly,\n                            enable: enable\n                        });\n                    });\n                }\n            },\n\n            _trigger: function() {\n                if (!this.options.mobile) {\n                    this.trigger(\"change\");\n                }\n            }\n        });\n\n        var RecurrenceEditor = BaseRecurrenceEditor.extend({\n            init: function(element, options) {\n                var that = this;\n\n                BaseRecurrenceEditor.fn.init.call(that, element, options);\n\n                that._initFrequency();\n\n                that._initContainer();\n\n                that.value(that.options.value);\n            },\n\n            options: {\n                name: \"RecurrenceEditor\"\n            },\n\n            events: [ \"change\" ],\n\n            destroy: function() {\n                var that = this;\n\n                that._frequency.destroy();\n\n                if (this._weekDayButtonGroup) {\n                    this._weekDayButtonGroup.destroy();\n                }\n\n                that._container.find(\"input[type=radio],input[type=checkbox]\").off(CLICK + that._namespace);\n\n                kendo.destroy(that._container);\n\n                BaseRecurrenceEditor.fn.destroy.call(that);\n            },\n\n            value: function(value) {\n                var that = this;\n                var timezone = that.options.timezone;\n                var freq, freqButton;\n\n                if (value === undefined$1) {\n                    if (!that._value.freq) {\n                        return \"\";\n                    }\n\n                    return serialize(that._value, timezone);\n                }\n\n                that._value = parseRule(value, timezone) || {};\n\n                freq = that._value.freq;\n\n                if (freq) {\n                    freqButton = that._frequency.element.find(\"[data-value='\" + freq + \"']\");\n                    that._frequency.select(freqButton);\n                } else {\n                    that._frequency.select(0);\n                }\n\n                that._initView(that._frequency.current().data(\"value\"));\n            },\n\n            _initContainer: function() {\n                var element = this.element,\n                    container = $('<div class=\"k-recur-view\" />'),\n                    editContainer = element.parent(\".k-edit-field\");\n\n                if (editContainer[0]) {\n                    container.insertAfter(editContainer);\n                } else {\n                    element.append(container);\n                }\n\n                this._container = container;\n            },\n\n            _initFrequency: function() {\n                var that = this,\n                    options = that.options,\n                    frequencies = options.frequencies,\n                    messages = options.messages.frequencies,\n                    buttonGroupElement = $('<div class=\"k-button-group-stretched k-flex-1\"/>').attr({ title: options.messages.recurrenceEditorTitle }),\n                    frequency;\n\n                frequencies = $.map(frequencies, function(frequency) {\n                    return {\n                        text: messages[frequency],\n                        attributes: { \"data-value\": frequency, \"aria-label\": options.messages.repeat + messages[frequency] }\n                    };\n                });\n\n                frequency = frequencies[0];\n                if (frequency && frequency.attributes && frequency.attributes[\"data-value\"] === \"never\") {\n                    frequency.attributes[\"data-value\"] = \"\";\n                }\n\n                that.element.append(buttonGroupElement);\n                that._frequency = new ButtonGroup(buttonGroupElement, {\n                    items: frequencies,\n                    select: function() {\n                        that._value = {};\n                        that._initView(that._frequency.current().data(\"value\"));\n                        that.trigger(\"change\");\n                    }\n                });\n            },\n\n            _initView: function(frequency) {\n                var that = this;\n                var rule = that._value;\n                var options = that.options;\n\n                var data = {\n                     frequency: frequency || \"never\",\n                     firstWeekDay: options.firstWeekDay,\n                     messages: options.messages[frequency],\n                     end: options.messages.end\n                };\n\n                if (that._weekDayButtonGroup) {\n                    that._weekDayButtonGroup.destroy();\n                    that._container.find(\".k-recur-weekday-buttons\").empty();\n                    that._weekDayButtonGroup = null;\n                }\n\n                kendo.destroy(that._container);\n                that._container.html(RECURRENCE_VIEW_TEMPLATE(data));\n\n                if (!frequency) {\n                    that._value = {};\n                    return;\n                }\n\n                rule.freq = frequency;\n\n                if (frequency === \"weekly\" && !rule.weekDays) {\n                    rule.weekDays = [{\n                        day: options.start.getDay(),\n                        offset: 0\n                    }];\n                }\n\n                that._weekDayButtons(options.firstWeekDay);\n\n                that._initInterval();\n                that._initWeekDays();\n                that._initMonthDay();\n                that._initWeekDay();\n                that._initMonth();\n                that._initCount();\n                that._initUntil();\n\n                that._period();\n                that._end();\n            },\n\n            _initMonth: function() {\n                var that = this;\n                var rule = that._value;\n                var month = rule.months || [that.options.start.getMonth() + 1];\n                var monthInputs = that._container.find(\".k-recur-month\");\n                var options;\n\n                if (monthInputs[0]) {\n                    options = {\n                        autoWidth: true,\n                        change: function() {\n                            rule.months = [Number(this.value())];\n                            that.trigger(\"change\");\n                        },\n                        dataTextField: \"text\",\n                        dataValueField: \"value\",\n                        dataSource: $.map(kendo.culture().calendar.months.names, function(monthName, idx) {\n                            return {\n                                text: monthName,\n                                value: idx + 1\n                            };\n                        })\n                    };\n\n                    that._month1 = new DropDownList(monthInputs[0], options);\n                    that._month2 = new DropDownList(monthInputs[1], options);\n\n                    if (month) {\n                        month = month[0];\n                        that._month1.value(month);\n                        that._month2.value(month);\n                    }\n                }\n\n            },\n\n            _end: function() {\n                var that = this;\n                var rule = that._value;\n                var container = that._container;\n                var namespace = that._namespace;\n                var click = function(e) {\n                    that._toggleEnd(e.currentTarget.value);\n                    that.trigger(\"change\");\n                };\n                var endRule;\n\n                that._buttonNever = container.find(\".k-recur-end-never\").on(CLICK + namespace, click);\n                that._buttonCount = container.find(\".k-recur-end-count\").on(CLICK + namespace, click);\n                that._buttonUntil = container.find(\".k-recur-end-until\").on(CLICK + namespace, click);\n\n                if (rule.count) {\n                    endRule = \"count\";\n                } else if (rule.until) {\n                    endRule = \"until\";\n                }\n\n                that._toggleEnd(endRule);\n            },\n\n            _period: function() {\n                var that = this;\n                var rule = that._value;\n                var monthly = rule.freq === \"monthly\";\n\n                var toggleRule = monthly ? that._toggleMonthDay : that._toggleYear;\n\n                var selector = \".k-recur-\" + (monthly ? \"month\" : \"year\") + \"-radio\";\n                var radioButtons = that._container.find(selector);\n\n                if (!monthly && rule.freq !== \"yearly\") {\n                    return;\n                }\n\n                radioButtons.on(CLICK + that._namespace, function(e) {\n                    toggleRule.call(that, e.currentTarget.value);\n                    that.trigger(\"change\");\n                });\n\n                that._buttonMonthDay = radioButtons.eq(0);\n                that._buttonWeekDay = radioButtons.eq(1);\n\n                toggleRule.call(that, rule.weekDays ? \"weekday\" : \"monthday\");\n            },\n\n            _toggleEnd: function(endRule) {\n                var that = this;\n                var count, until;\n                var enableCount, enableUntil;\n\n                if (endRule === \"count\") {\n                    that._buttonCount.prop(\"checked\", true);\n\n                    enableCount = true;\n                    enableUntil = false;\n\n                    count = that._count.value();\n                    until = null;\n                } else if (endRule === \"until\") {\n                    that._buttonUntil.prop(\"checked\", true);\n\n                    enableCount = false;\n                    enableUntil = true;\n\n                    count = null;\n                    until = that._until.value();\n                } else {\n                    that._buttonNever.prop(\"checked\", true);\n\n                    enableCount = enableUntil = false;\n                    count = until = null;\n                }\n\n                if (that._count) {\n                    that._count.enable(enableCount);\n                }\n\n                if (that._until) {\n                    that._until.enable(enableUntil);\n                }\n\n                that._value.count = count;\n                that._value.until = until;\n            },\n\n            _toggleMonthDay: function(monthRule) {\n                var that = this;\n                var enableMonthDay = false;\n                var enableWeekDay = true;\n                var clear = false;\n                var monthDays;\n\n                if (monthRule === \"monthday\") {\n                    that._buttonMonthDay.prop(\"checked\", true);\n\n                    monthDays = [that._monthDay.value()];\n\n                    enableMonthDay = true;\n                    enableWeekDay = false;\n                    clear = true;\n                } else {\n                    that._buttonWeekDay.prop(\"checked\", true);\n                    monthDays = null;\n                }\n\n                that._weekDay.enable(enableWeekDay);\n                that._weekDayOffset.enable(enableWeekDay);\n                that._monthDay.enable(enableMonthDay);\n\n                that._value.monthDays = monthDays;\n\n                that._weekDayRule(clear);\n            },\n\n            _toggleYear: function(yearRule) {\n                var that = this;\n                var enableMonth1 = false;\n                var enableMonth2 = true;\n                var month;\n\n                if (yearRule === \"monthday\") {\n                    enableMonth1 = true;\n                    enableMonth2 = false;\n\n                    month = that._month1.value();\n                } else {\n                    month = that._month2.value();\n                }\n\n                that._month1.enable(enableMonth1);\n                that._month2.enable(enableMonth2);\n\n                that._value.months = [month];\n                that._toggleMonthDay(yearRule);\n            }\n        });\n\n        ui.plugin(RecurrenceEditor);\n\n\n        var RECURRENCE_HEADER_TEMPLATE = kendo.template(function (ref) {\n                var headerTitle = ref.headerTitle;\n\n                return '<div data-role=\"content\">' +\n                '<ul class=\"k-listgroup k-listgroup-flush\">' +\n                    '<li class=\"k-item k-listgroup-item\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + headerTitle + \"</span>\" +\n                            '<div class=\"k-recur-pattern k-listgroup-form-field-wrapper\"></div>' +\n                        '</label>' +\n                    '</li>' +\n                    '<li class=\"k-item k-listgroup-item k-recur-view\"></li>' +\n                '</ul>' +\n            '</div>';\n        }\n        );\n\n        var RECURRENCE_REPEAT_PATTERN_TEMPLATE = kendo.template(function (ref) {\n                var frequency = ref.frequency;\n                var messages = ref.messages;\n\n                return (frequency !== \"never\" ?\n                '<label class=\"k-label k-listgroup-form-row\">' +\n                    \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.repeatEvery)) + \"</span>\" +\n                    '<div class=\"k-recur-editor-wrap k-listgroup-form-field-wrapper\">' +\n                        '<input class=\"k-recur-interval\" type=\"number\" pattern=\"\\\\d*\"/>' +\n                        (messages.interval.length ? (\"<span class=\\\"k-recur-editor-text\\\">\" + (encode(messages.interval)) + \"</span>\") : '') +\n                    '</div>' +\n                '</label>' : ''\n            ) +\n            (frequency === \"weekly\" ?\n                '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                    '<li class=\"k-item k-listgroup-item k-no-click\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.repeatOn)) + \"</span>\" +\n                        '</label>' +\n                    '</li>' +\n                    \"<div class=\\\"k-button-group-stretched k-recur-weekday-buttons\\\" title=\\\"\" + (encode(messages.repeatOn)) + \"\\\">\" +\n                '</ul>' : '') +\n            (frequency === \"monthly\" ?\n                '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                    '<li class=\"k-item k-listgroup-item\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.repeatBy)) + \"</span>\" +\n                            '<div class=\"k-repeat-rule k-listgroup-form-field-wrapper\"></div>' +\n                        '</label>' +\n                    '</li>' +\n                    '<li class=\"k-monthday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.day)) + \"</span>\" +\n                            \"<div class=\\\"k-listgroup-form-field-wrapper\\\"><input class=\\\"k-recur-monthday\\\" type=\\\"number\\\" aria-label=\\\"\" + (encode(messages.date)) + \"\\\" title=\\\"\" + (encode(messages.day)) + \"\\\" pattern=\\\"\\\\d*\\\"/></div>\" +\n                        '</label>' +\n                    '</li>' +\n                    '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.every)) + \"</span>\" +\n                            \"<div class=\\\"k-listgroup-form-field-wrapper\\\"><select class=\\\"k-recur-weekday-offset\\\" title=\\\"\" + (encode(messages.every)) + \"\\\"></select></div>\" +\n                        '</label>' +\n                    '</li>' +\n                    '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.day)) + \"</span>\" +\n                            \"<div class=\\\"k-listgroup-form-field-wrapper\\\"><select class=\\\"k-recur-weekday\\\" title=\\\"\" + (encode(messages.day)) + \"\\\"></select></div>\" +\n                        '</label>' +\n                    '</li>' +\n                '</ul>' : '') +\n            (frequency === \"yearly\" ?\n                '<ul class=\"k-recur-items-wrap k-listgroup k-listgroup-flush\">' +\n                    '<li class=\"k-item k-listgroup-item\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.repeatBy)) + \"</span>\" +\n                            '<div class=\"k-repeat-rule k-listgroup-form-field-wrapper\"></div>' +\n                        '</label>' +\n                    '</li>' +\n                    '<li class=\"k-monthday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.day)) + \"</span>\" +\n                            \"<div class=\\\"k-listgroup-form-field-wrapper\\\"><input class=\\\"k-recur-monthday\\\" type=\\\"number\\\" aria-label=\\\"\" + (encode(messages.date)) + \"\\\" title=\\\"\" + (encode(messages.day)) + \"\\\" pattern=\\\"\\\\d*\\\"/></div>\" +\n                        '</label>' +\n                    '</li>' +\n                    '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.every)) + \"</span>\" +\n                            \"<div class=\\\"k-listgroup-form-field-wrapper\\\"><select class=\\\"k-recur-weekday-offset\\\" title=\\\"\" + (encode(messages.every)) + \"\\\"></select></div>\" +\n                        '</label>' +\n                    '</li>' +\n                    '<li class=\"k-weekday-view k-item k-listgroup-item\" style=\"display:none\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.day)) + \"</span>\" +\n                            \"<div class=\\\"k-listgroup-form-field-wrapper\\\"><select class=\\\"k-recur-weekday\\\" title=\\\"\" + (encode(messages.day)) + \"\\\"></select></div>\" +\n                        '</label>' +\n                    '</li>' +\n                    '<li class=\"k-item k-item k-listgroup-item\">' +\n                        '<label class=\"k-label k-listgroup-form-row\">' +\n                            \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.month)) + \"</span>\" +\n                            \"<div class=\\\"k-listgroup-form-field-wrapper\\\"><select class=\\\"k-recur-month\\\" title=\\\"\" + (encode(messages.month)) + \"\\\"></select></div>\" +\n                        '</label>' +\n                    '</li>' +\n               '</ul>' : '');\n        }\n        );\n\n        var RECURRENCE_END_PATTERN_TEMPLATE = kendo.template(function (ref) {\n            var endPattern = ref.endPattern;\n            var messages = ref.messages;\n\n            if (endPattern === \"count\") {\n                return '<label class=\"k-label k-listgroup-form-row\">' +\n                    \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.after)) + \"</span>\" +\n                    \"<div class=\\\"k-listgroup-form-field-wrapper\\\"><input class=\\\"k-recur-count\\\" aria-label=\\\"\" + (encode(messages.occurrence)) + \"\\\" type=\\\"number\\\" pattern=\\\"\\\\d*\\\" /></div>\" +\n                '</label>';\n            } else if (endPattern === \"until\") {\n                return '<label class=\"k-label k-listgroup-form-row\">' +\n                    \"<span class=\\\"k-item-title k-listgroup-form-field-label\\\">\" + (encode(messages.on)) + \"</span>\" +\n                    \"<div class=\\\"k-listgroup-form-field-wrapper\\\"><input type=\\\"date\\\" class=\\\"k-recur-until\\\" aria-label=\\\"\" + (encode(messages.on)) + \"\\\" name=\\\"recur-until\\\"/></div>\" +\n                '</label>';\n            }\n        });\n\n        var RECURRENCE_GROUP_BUTTON_TEMPLATE = kendo.template(function (ref) {\n                var dataSource = ref.dataSource;\n                var value = ref.value;\n\n                return '<select class=\"k-scheduler-select\">' +\n                dataSource.map(function (item) { return (\"<option value=\\\"\" + (item.value) + \"\\\" \" + (value === item.value ? 'selected' : '') + \">\" + (encode(item.text)) + \"</option>\"); }).join('') +\n            '</select>';\n        }\n        );\n\n        var MobileRecurrenceEditor = BaseRecurrenceEditor.extend({\n            init: function(element, options) {\n                var that = this;\n\n                BaseRecurrenceEditor.fn.init.call(that, element, options);\n\n                options = that.options;\n\n                that._optionTemplate = kendo.template(function (ref) {\n                    var value = ref.value;\n                    var text = ref.text;\n\n                    return (\"<option value=\\\"\" + (encode(value)) + \"\\\">\" + (encode(text)) + \"</option>\");\n                });\n\n                that.value(options.value);\n\n                that._pane = options.pane || that.wrapper.closest(\"[data-role=pane]\").data(\"kendoPane\");\n\n                that._initRepeatButton();\n\n                that._initParentRepeatEnd();\n\n                that._defaultValue = that._value;\n            },\n\n            options: {\n                name: \"MobileRecurrenceEditor\",\n                animations: {\n                    left: \"slide\",\n                    right: \"slide:right\"\n                },\n                mobile: true,\n                messages: {\n                    cancel: \"Cancel\",\n                    update: \"Save\",\n                    endTitle: \"Repeat ends\",\n                    repeatTitle: \"Repeat pattern\",\n                    headerTitle: \"Repeat event\",\n                    end: {\n                        patterns: {\n                            never: \"Never\",\n                            after: \"After...\",\n                            on: \"On...\"\n                        },\n                        never: \"Never\",\n                        after: \"End repeat after\",\n                        on: \"End repeat on\"\n                    },\n                    daily: {\n                        interval: \"\"\n                    },\n                    hourly: {\n                        interval: \"\"\n                    },\n                    weekly: {\n                        interval: \"\"\n                    },\n                    monthly: {\n                        interval: \"\",\n                        repeatBy: \"Repeat by: \",\n                        dayOfMonth: \"Day of the month\",\n                        dayOfWeek: \"Day of the week\",\n                        repeatEvery: \"Repeat every\",\n                        every: \"Every\",\n                        day: \"Day \"\n                    },\n                    yearly: {\n                        interval: \"\",\n                        repeatBy: \"Repeat by: \",\n                        dayOfMonth: \"Day of the month\",\n                        dayOfWeek: \"Day of the week\",\n                        repeatEvery: \"Repeat every: \",\n                        every: \"Every\",\n                        month: \"Month\",\n                        day: \"Day\"\n                    }\n                }\n            },\n\n            events: [ \"change\" ],\n\n            value: function(value) {\n                var that = this;\n                var timezone = that.options.timezone;\n\n                if (value === undefined$1) {\n                    if (!that._value.freq) {\n                        return \"\";\n                    }\n\n                    return serialize(that._value, timezone);\n                }\n\n                that._value = parseRule(value, timezone) || {};\n            },\n\n            destroy: function() {\n                this._destroyView();\n\n                kendo.destroy(this._endFields);\n\n                this.element.off(CLICK + this._namespace);\n\n                BaseRecurrenceEditor.fn.destroy.call(this);\n            },\n\n            _initInterval: function() {\n                var that = this;\n                var rule = that._value;\n\n                that._container.find(\".k-recur-interval\")\n                    .val(that._value.interval || 1)\n                    .on(CHANGE + that._namespace, function(e) {\n                        rule.interval = e.target.value;\n                        that._trigger();\n                    });\n            },\n\n            _initRepeatButton: function() {\n                var that = this;\n                var freq = that.options.messages.frequencies[this._value.freq || \"never\"];\n\n                that._chevronButton = $('<span class=\"k-icon k-i-arrow-chevron-right\"></span>');\n                that._repeatValue = $('<span class=\"\">' + freq + '</span>');\n\n                that.element.append(that._repeatValue).append(that._chevronButton);\n\n                that.element.parents(\"li.k-item\").on(CLICK + that._namespace, function(e) {\n                    e.preventDefault();\n                    that._createView(\"repeat\");\n                    that._pane.navigate(that._view, that.options.animations.left);\n                });\n            },\n\n            _endLiItem: function() {\n                var that = this;\n                return '<li class=\"k-item k-listgroup-item\"><label class=\"k-label k-listgroup-form-row\"><span class=\"k-item-title k-listgroup-form-field-label\">' + that.options.messages.end.mobileLabel + '</span></label></li>';\n            },\n\n            _initParentRepeatEnd: function() {\n                var that = this;\n\n                var endLabelField = $(that._endLiItem()).insertAfter(that.element.parents(\"li.k-item\"));\n\n                var endEditField = $('<div class=\"k-scheduler-recur-end-wrap k-listgroup-form-field-wrapper\"><span class=\"k-scheduler-recur-end\"></span></div>')\n                    .appendTo(endLabelField.find(\".k-label\"));\n\n                endLabelField.on(CLICK + that._namespace, function(e) {\n                    e.preventDefault();\n                    that._navigateToView(\"repeat\");\n                });\n\n                that._endParentLabelField = endLabelField.toggle(!!that._value.freq);\n                that._endParentEndButton = endEditField.find(\".k-scheduler-recur-end\").text(that._endText());\n            },\n\n            _initRepeatEnd: function() {\n                var that = this;\n\n                var endLabelField = $(that._endLiItem()).insertAfter(that._container);\n\n                var endEditField = $('<div class=\"k-scheduler-recur-end-wrap k-listgroup-form-field-wrapper\"><span class=\"k-scheduler-recur-end\"></span><span class=\"k-icon k-i-arrow-chevron-right\"></span></div>')\n                    .appendTo(endLabelField.find(\".k-label\"));\n\n                endLabelField.on(CLICK + that._namespace, function(e) {\n                    e.preventDefault();\n                    that._navigateToView(\"end\");\n                });\n\n                that._endLabelField = endLabelField.toggleClass(\"k-disabled\", !that._value.freq);\n                that._endButton = endEditField.find(\".k-scheduler-recur-end\").text(that._endText());\n            },\n\n            _navigateToView: function(viewName) {\n                var that = this;\n                that._createView(viewName);\n                that._pane.navigate(that._view, that.options.animations.left);\n            },\n\n            _endText: function() {\n                var rule = this._value;\n                var messages = this.options.messages.end;\n\n                var text = messages.never;\n\n                if (rule.count) {\n                    text = kendo.format(\"{0} {1}\", messages.after, rule.count);\n                } else if (rule.until) {\n                    text = kendo.format(\"{0} {1:d}\", messages.on, rule.until);\n                }\n\n                return text;\n            },\n\n            _initFrequency: function() {\n                var that = this;\n                var frequencyMessages = that.options.messages.frequencies;\n\n                var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                    dataSource: $.map(this.options.frequencies, function(frequency) {\n                        return {\n                            text: frequencyMessages[frequency],\n                            value: frequency !== \"never\" ? frequency : \"\"\n                        };\n                    }),\n                    value: that._value.freq || \"\",\n                    ns: kendo.ns\n                });\n\n                that._view.element\n                    .find(\".k-recur-pattern\")\n                    .append(html);\n\n                that._view.element.find(\".k-scheduler-select\")\n                    .on(CHANGE + that._namespace, function(e) {\n                        var value = e.target.value;\n                        that._value = { freq: value };\n                        that._defaultValue = $.extend({}, that._value);\n                        that._initRepeatView();\n                        that._endButton.text(that._endText());\n                        that._endParentEndButton.text(that._endText());\n                    });\n            },\n\n            _initEndNavigation: function() {\n                var that = this;\n                var endMessages = that.options.messages.end.patterns;\n                var rule = that._value;\n                var value = \"\";\n\n                if (rule.count) {\n                    value = \"count\";\n                } else if (rule.until) {\n                    value = \"until\";\n                }\n\n                var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                    dataSource: [\n                        { text: endMessages.never, value: \"\" },\n                        { text: endMessages.after, value: \"count\" },\n                        { text: endMessages.on, value: \"until\" }\n                    ],\n                    value: value,\n                    ns: kendo.ns\n                });\n\n                that._view.element\n                    .find(\".k-recur-pattern\")\n                    .append(html);\n\n                that._view.element.find(\".k-scheduler-select\")\n                    .on(CHANGE + that._namespace, function(e) {\n                        var value = e.target.value;\n                        var count = null;\n                        var until = null;\n\n                        that._initEndView(value);\n\n                        if (that._count.length) {\n                            count = that._count.val();\n                            until = null;\n                        } else if (that._until.length) {\n                            count = null;\n                            until = that._until.val ? kendo.parseDate(that._until.val(), \"yyyy-MM-dd\") : that._until.value();\n                        }\n\n                        rule.count = count;\n                        rule.until = until;\n                    });\n            },\n\n            _createView: function(viewType) {\n                var that = this;\n                var options = that.options;\n                var messages = options.messages;\n                var headerTitle = messages[viewType === \"repeat\" ? \"repeatTitle\" : \"endTitle\"];\n\n                var html = '<div data-role=\"view\" class=\"k-popup-edit-form k-scheduler-edit-form\" id=\"recurrence\">' +\n                           '<div data-role=\"header\" class=\"k-header\">' +\n                               '<a href=\"#\" class=\"k-header-cancel k-scheduler-cancel k-link\" title=\"' + messages.cancel + '\"' +\n                               'aria-label=\"' + messages.cancel + '\"><span class=\"k-icon k-i-arrow-chevron-left\"></span></a>' +\n                                   messages.headerTitle +\n                               '<a href=\"#\" class=\"k-header-done k-scheduler-update k-link\" title=\"' + messages.update + '\" ' +\n                               'aria-label=\"' + messages.update + '\"><span class=\"k-icon k-i-check\"></span></a>' +\n                           '</div>';\n\n                var returnViewId = that._pane.view().id;\n\n                that._view = that._pane.append(html + RECURRENCE_HEADER_TEMPLATE({ headerTitle: headerTitle }));\n\n                that._view.element.on(CLICK + that._namespace, \"a.k-scheduler-cancel, a.k-scheduler-update\", function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    if ($(this).hasClass(\"k-scheduler-update\")) {\n                        that.trigger(\"change\");\n                        that._defaultValue = $.extend({}, that._value);\n                    } else {\n                        that._value = that._defaultValue;\n                    }\n\n                    var frequency = that._value.freq;\n\n                    that._endParentEndButton.text(that._endText());\n                    that._endParentLabelField.toggle(!!frequency && frequency !== \"never\");\n                    that._endButton.text(that._endText());\n\n                    that._repeatValue.text(messages.frequencies[frequency || \"never\"]);\n\n                    that._pane.one(\"viewShow\", function() {\n                        that._destroyView();\n                    });\n\n                    that._pane.navigate(returnViewId, that.options.animations.right);\n                });\n\n                that._container = that._view.element.find(\".k-recur-view\");\n\n                if (viewType === \"repeat\") {\n                    that._initFrequency();\n                    that._initRepeatView();\n                    that._initRepeatEnd();\n                } else {\n                    that._initEndNavigation();\n                    that._initEndView();\n                }\n            },\n\n            _destroyView: function() {\n                if (this._view) {\n\n                    this._view.destroy();\n                    this._view.element.remove();\n                    this._container = null;\n                }\n\n\n                this._view = null;\n            },\n\n            _initRepeatView: function() {\n                var that = this;\n                var frequency = that._value.freq || \"never\";\n\n                var data = {\n                     frequency: frequency,\n                     firstWeekDay: that.options.firstWeekDay,\n                     messages: that.options.messages[frequency]\n                };\n\n                var html = RECURRENCE_REPEAT_PATTERN_TEMPLATE(data);\n\n                var container = that._container = that._container || this._pane.view().content.find(\"li.k-recur-view\");\n                var rule = that._value;\n\n                if (that._endLabelField) {\n                    that._endLabelField.toggleClass(\"k-disabled\", frequency === \"never\");\n                }\n\n                kendo.destroy(container);\n                container.html(html);\n\n                if (!html) {\n                    that._value = {};\n                    container.hide();\n                    return;\n                } else {\n                    container.show();\n                }\n\n                if (frequency === \"weekly\" && !rule.weekDays) {\n                     rule.weekDays = [{\n                        day: that.options.start.getDay(),\n                        offset: 0\n                     }];\n                }\n\n                that._weekDayButtons(that.options.firstWeekDay);\n\n                that._initInterval();\n                that._initMonthDay();\n                that._initWeekDays();\n                that._initWeekDay();\n                that._initMonth();\n\n                that._period();\n            },\n\n            _initMonthDay: function() {\n                var that = this;\n                var rule = that._value;\n                var monthDayInput = that._monthDay = that._container.find(\".k-recur-monthday\");\n\n                monthDayInput.attr({\n                    min: 1,\n                    max: 31\n                })\n                .val(rule.monthDays ? rule.monthDays[0] : that.options.start.getDate())\n                .on(CHANGE + that._namespace, function(e) {\n                    rule.count = e.target.value;\n                    that._trigger();\n                });\n            },\n\n            _initCount: function() {\n                var that = this,\n                    input = that._count = that._container.find(\".k-recur-count\"),\n                    rule = that._value;\n\n                input.val(rule.count || 1)\n                    .on(CHANGE + that._namespace, function(ev) {\n                        rule.count = ev.target.value;\n                        that._trigger();\n                    });\n            },\n\n            _initEndView: function(endPattern) {\n                var that = this;\n                var rule = that._value;\n\n                if (endPattern === undefined$1) {\n                    if (rule.count) {\n                        endPattern = \"count\";\n                    } else if (rule.until) {\n                        endPattern = \"until\";\n                    }\n                }\n\n                var data = {\n                     endPattern: endPattern,\n                     messages: that.options.messages.end\n                };\n\n                kendo.destroy(that._container);\n                that._container.html(RECURRENCE_END_PATTERN_TEMPLATE(data));\n\n                that._initCount();\n                that._initUntil();\n            },\n\n            _initWeekDay: function() {\n                var that = this, data;\n\n                var weekdayMessage = that.options.messages.weekdays;\n                var offsetMessage = that.options.messages.offsetPositions;\n\n                var weekDaySelect = that._container.find(\".k-recur-weekday\");\n\n                var change = function() {\n                    that._weekDayRule();\n                    that.trigger(\"change\");\n                };\n\n                if (weekDaySelect[0]) {\n                    that._weekDayOffset = that._container.find(\".k-recur-weekday-offset\")\n                                              .html(that._options([\n                                                { text: offsetMessage.first, value: \"1\" },\n                                                { text: offsetMessage.second, value: \"2\" },\n                                                { text: offsetMessage.third, value: \"3\" },\n                                                { text: offsetMessage.fourth, value: \"4\" },\n                                                { text: offsetMessage.last, value: \"-1\" }\n                                              ]))\n                                              .on(\"change\", change);\n\n                    data = [\n                        { text: weekdayMessage.day, value: \"day\" },\n                        { text: weekdayMessage.weekday, value: \"weekday\" },\n                        { text: weekdayMessage.weekend, value: \"weekend\" }\n                    ];\n\n                    data = data.concat($.map(kendo.culture().calendar.days.names, function(dayName, idx) {\n                        return {\n                            text: dayName,\n                            value: idx\n                        };\n                    }));\n\n                    that._weekDay = weekDaySelect.html(that._options(data))\n                                                 .on(\"change\", change)\n                                                 .val(that.options.start.getDay());\n\n                    that._weekDayView();\n                }\n            },\n\n            _initMonth: function() {\n                var that = this;\n                var rule = that._value;\n                var start = that.options.start;\n                var month = rule.months || [start.getMonth() + 1];\n                var monthSelect = that._container.find(\".k-recur-month\");\n                var monthNames = kendo.culture().calendar.months.names;\n\n                if (monthSelect[0]) {\n                    var data = $.map(monthNames, function(monthName, idx) {\n                        return {\n                            text: monthName,\n                            value: idx + 1\n                        };\n                    });\n\n                    monthSelect.html(that._options(data))\n                               .on(\"change\", function() {\n                                   rule.months = [Number(this.value)];\n                               });\n\n                    that._monthSelect = monthSelect;\n\n                    if (month) {\n                        monthSelect.val(month[0]);\n                    }\n                }\n\n            },\n\n            _period: function() {\n                var that = this;\n                var rule = that._value;\n                var container = that._container;\n                var messages = that.options.messages[rule.freq];\n                var repeatRuleGroupButton = container.find(\".k-repeat-rule\");\n                var weekDayView = container.find(\".k-weekday-view\");\n                var monthDayView = container.find(\".k-monthday-view\");\n\n                if (repeatRuleGroupButton[0]) {\n                    var currentValue = rule.weekDays ? \"weekday\" : \"monthday\";\n\n                    var html = RECURRENCE_GROUP_BUTTON_TEMPLATE({\n                        value: currentValue,\n                        dataSource: [\n                            { text: messages.dayOfMonth, value: \"monthday\" },\n                            { text: messages.dayOfWeek, value: \"weekday\" }\n                        ],\n                        ns: kendo.ns\n                    });\n\n                    var init = function(val) {\n                        var weekDayName = that._weekDay.val();\n                        var weekDayOffset = that._weekDayOffset.val();\n                        var monthDay = that._monthDay.val();\n                        var month = that._monthSelect ? that._monthSelect.val() : null;\n\n                        if (val === \"monthday\") {\n                            rule.weekDays = null;\n                            rule.monthDays = monthDay ? [monthDay] : monthDay;\n                            rule.months = month ? [Number(month)] : month;\n\n                            weekDayView.hide();\n                            monthDayView.show();\n                        } else {\n                            rule.monthDays = null;\n                            rule.months = month ? [Number(month)] : month;\n\n                            rule.weekDays = [{\n                                offset: Number(weekDayOffset),\n                                day: Number(weekDayName)\n                            }];\n\n                            weekDayView.show();\n                            monthDayView.hide();\n                        }\n                    };\n\n                    repeatRuleGroupButton\n                        .append(html);\n\n                    repeatRuleGroupButton.find(\".k-scheduler-select\")\n                        .on(CHANGE + that._namespace, function(e) {\n                            init(e.target.value);\n                        });\n\n                    init(currentValue);\n                }\n            },\n\n            _initUntil: function() {\n                var that = this;\n                var input = that._container.find(\".k-recur-until\");\n                var start = that.options.start;\n                var rule = that._value;\n                var until = rule.until;\n                var min = until && until < start ? until : start;\n                var validDateValidationMessage = kendo.format(kendo.ui.Validator.prototype.options.messages.date, that.options.messages.end.on);\n                var dateCompareValidationMessage = kendo.ui.Validator.prototype.options.messages.dateCompare;\n\n                input.attr(\"data-validDate-msg\", validDateValidationMessage);\n                input.attr(\"data-untilDateCompare-msg\", dateCompareValidationMessage);\n\n                if (kendo.support.input.date) {\n                    that._until = input.attr(\"min\", kendo.toString(min, \"yyyy-MM-dd\"))\n                                       .val(kendo.toString(until || start, \"yyyy-MM-dd\"))\n                                       .on(\"change\", function() {\n                                            var date = kendo.parseDate(this.value, \"yyyy-MM-dd\");\n                                            if (date) {\n                                                rule.until = date;\n                                            }\n                                            that._trigger();\n                                       });\n                } else {\n                    that._until = input.kendoDatePicker({\n                        min: min,\n                        value: until || start,\n                        change: function() {\n                            var date = this.value();\n                            if (date) {\n                                rule.until = date;\n                            }\n                            that._trigger();\n                        }\n                    }).data(\"kendoDatePicker\");\n                }\n            },\n\n            _options: function(data, optionLabel) {\n                var idx = 0;\n                var html = \"\";\n                var length = data.length;\n                var template = this._optionTemplate;\n\n                if (optionLabel) {\n                    html += template({ value: \"\", text: optionLabel });\n                }\n\n                for (; idx < length; idx++) {\n                    html += template(data[idx]);\n                }\n\n                return html;\n            }\n        });\n\n        ui.plugin(MobileRecurrenceEditor);\n\n    })(window.kendo.jQuery);\n\n}));\n"]}