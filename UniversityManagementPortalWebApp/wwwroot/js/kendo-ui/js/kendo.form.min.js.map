{"version":3,"file":"kendo.form.min.js","names":["factory","define","amd","$","kendo","ui","NS","Widget","extend","encode","VALIDATE","VALIDATEFIELD","CHANGE","SUBMIT","CLEAR","EQUAL_SET","GROUP","ARIA_DESCRIBEDBY","DATA_STOP","DATA_ROLE","DOT","formStyles","formOrientation","Form","window","jQuery","htmlEncode","form","horizontal","vertical","field","fieldsContainer","fieldWrap","fieldError","fieldHint","fieldset","layout","legend","label","emptyLabel","optional","buttonsContainer","buttonsEnd","submit","clear","invalid","hidden","init","element","options","that","this","fn","call","deepExtend","formData","_wrapper","_setFields","_setModel","_renderContainers","_renderButtons","_editable","_renderBoolLabels","_renderFieldsHints","_setEvents","events","name","orientation","validatable","validateOnBlur","validationSummary","errorTemplate","buttonsTemplate","messages","grid","items","formatLabel","focusFirst","_noLabelfieldTemplate","ref","styles","colSpan","_fieldTemplate","id","encoded","text","_boolLabelTemplate","_groupTemplate","_buttonsTemplate","_errorTemplate","message","_hintTemplate","width","height","wrapper","addClass","css","layoutWrapper","_setupLayoutContainer","_flattenFields","fields","concat","item","shift","result","push","apply","_defaultLabel","fieldName","customFormat","length","isFunction","split","join","trim","_formatLabel","isPlainObject","_defaultFields","formDataFields","Object","keys","itemFields","defaultFormDataFields","i","fieldInfo","fieldValue","type","editor","attributes","defaultFields","_fields","parseDate","toString","Editable","editors","_isHidden","optionalText","isHidden","_isAntiForgeryToken","data","ObservableObject","_model","MyModel","Model","validatorOptions","_addEditableMvvmAttributes","editable","kendoEditable","model","clearContainer","skipFocus","target","getKendoEditable","validator","_removeEditableMvvmAttributes","attr","_getItemTemplate","antiForgeryTokenName","_renderField","fieldTemplate","isHorizontal","fieldType","isBoolField","template","_toggleFieldErrorState","state","closest","toggleClass","fieldElement","find","after","fieldWidgetInstance","nextLabelElement","hint","_associateHintContainer","widgetInstance","next","_errorsByName","removeAttribute","insertAfter","input","hintId","nextFocusable","getWidgetFocusableElement","toggleAttribute","_toggleHint","_renderGroup","child","renderedGroup","append","container","targetContainer","appendTarget","layoutContainer","layoutClassNames","appendTo","cols","gutter","bind","_validateField","_validate","on","_submit","_clear","_changeHandler","_change","ev","toJSON","valid","error","trigger","preventDefault","errors","value","jsonModel","validate","reset","unbind","isHiddenInput","is","val","hasClass","Upload","clearAllFiles","set","removeClass","_validateProxy","setOptions","newOptions","destroy","removeAttr","empty","off","plugin"],"sources":["kendo.form.js"],"mappings":"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","sourcesContent":["(function (factory) {\n  typeof define === 'function' && define.amd ? define(['kendo.editable'], factory) :\n  factory();\n})((function () {\n  var __meta__ = {\n          id: \"form\",\n          name: \"Form\",\n          category: \"web\",\n          description: \"The Form widget.\",\n          depends: [ \"editable\" ],\n          features: [{\n              id: \"form-dropdowns\",\n              name: \"DropDowns\",\n              description: \"Support for DropDown editors\",\n              depends: [ \"autocomplete\", \"combobox\", \"multiselect\", \"dropdowntree\", \"multicolumncombobox\" ]\n          }, {\n              id: \"form-datepickers\",\n              name: \"DatePickers\",\n              description: \"Support for DatePicker editors\",\n              depends: [ \"dateinput\", \"datepicker\", \"datetimepicker\", \"timepicker\" ]\n          }, {\n              id: \"form-inputs\",\n              name: \"Inputs\",\n              description: \"Support for Input editors\",\n              depends: [ \"numerictextbox\", \"maskedtextbox\", \"switch\", \"rating\", \"slider\", \"colorpicker\", \"radiogroup\", \"checkboxgroup\", \"textbox\", \"textarea\", \"checkbox\" ]\n          }, {\n              id: \"form-editor\",\n              name: \"Editor\",\n              description: \"Support for Editor editor\",\n              depends: [ \"editor\" ]\n          }]\n      };\n\n      (function($, undefined$1) {\n          var kendo = window.kendo,\n              ui = kendo.ui,\n              NS = \".kendoForm\",\n              Widget = ui.Widget,\n              extend = $.extend,\n              encode = kendo.htmlEncode,\n              VALIDATE = \"validate\",\n              VALIDATEFIELD = \"validateField\",\n              VALIDATEINPUT = \"validateInput\",\n              CHANGE = \"change\",\n              CLICK = \"click\" + NS,\n              SUBMIT = \"submit\",\n              CLEAR = \"clear\",\n              MAX_WIDTH = \"max-width\",\n              SET = \"set\",\n              EQUAL_SET = \"equalSet\",\n              GROUP = \"group\",\n              ARIA_DESCRIBEDBY = \"aria-describedby\",\n              DATA_STOP = \"data-stop\",\n              DATA_ROLE = \"data-role\",\n              EDITABLE = \"editable\",\n              FORM = \"form\",\n              DOT = \".\",\n              DATA_ROLE_RADIO_GROUP = \"[data-role='radiogroup']\",\n              DATA_ROLE_CHECKBOX_GROUP = \"[data-role='checkboxgroup']\";\n\n          var formStyles = {\n              form: \"k-widget k-form\",\n              horizontal: \"k-form-horizontal\",\n              vertical: \"\",\n              field: \"k-form-field\",\n              fieldsContainer: \"k-form-fields-container\",\n              fieldWrap: \"k-form-field-wrap\",\n              fieldError: \"k-form-field-error\",\n              fieldHint: \"k-form-hint\",\n              fieldset: \"k-form-fieldset\",\n              layout: \"k-form-layout\",\n              legend: \"k-form-legend\",\n              label: \"k-label k-form-label\",\n              emptyLabel: \"k-form-label k-label-empty\",\n              optional: \"k-label-optional\",\n              buttonsContainer: \"k-form-buttons\",\n              buttonsEnd: \"k-buttons-end\",\n              submit: \"k-form-submit\",\n              clear: \"k-form-clear\",\n              invalid: \"k-invalid\",\n              hidden: \"k-hidden\"\n          };\n\n          var formOrientation = {\n              horizontal: \"horizontal\",\n              vertical: \"vertical\"\n          };\n\n          var Form = Widget.extend({\n              init: function(element, options) {\n                  var that = this;\n\n                  Widget.fn.init.call(that, element, options);\n\n                  that.options = kendo.deepExtend({}, that.options, options);\n\n                  if (options && options.formData) {\n                      that.options.formData = options.formData;\n                  }\n\n                  that._wrapper();\n\n                  that._setFields();\n\n                  that._setModel();\n\n                  that._renderContainers();\n\n                  that._renderButtons();\n\n                  that._editable();\n\n                  that._renderBoolLabels();\n\n                  that._renderFieldsHints();\n\n                  that._setEvents();\n              },\n\n              events: [\n                  VALIDATEFIELD,\n                  VALIDATE,\n                  CHANGE,\n                  SUBMIT,\n                  CLEAR\n              ],\n\n              options: {\n                  name: \"Form\",\n                  orientation: formOrientation.vertical,\n                  validatable: {\n                      validateOnBlur: true,\n                      validationSummary: false,\n                      errorTemplate: null\n                  },\n                  buttonsTemplate: null,\n                  messages: {\n                      submit: \"Submit\",\n                      clear: \"Clear\",\n                      optional: \"(Optional)\"\n                  },\n                  layout: \"\",\n                  grid: {},\n                  formData: {},\n                  items: [],\n                  formatLabel: null,\n                  focusFirst: false\n              },\n\n              _noLabelfieldTemplate: function (ref){\n                                        var styles = ref.styles;\n                                        var colSpan = ref.colSpan;\n                                        var hidden = ref.hidden;\n                                        var field = ref.field;\n\n                                        return \"<div class='\" + (encode(styles.field)) + \" \" + (colSpan ? (\"k-colspan-\" + (encode(colSpan))) : '') + \" \" + (hidden ? encode(styles.hidden) : '') + \"'>\" +\n                                          \"<span class='\" + (encode(styles.emptyLabel)) + \"'></span>\" +\n                                          \"<div class='k-form-field-wrap' data-container-for='\" + (encode(field)) + \"'></div>\" +\n                                      \"</div>\";\n          },\n\n              _fieldTemplate: function (ref) {\n                                var styles = ref.styles;\n                                var colSpan = ref.colSpan;\n                                var hidden = ref.hidden;\n                                var field = ref.field;\n                                var label = ref.label;\n                                var id = ref.id;\n                                var optional = ref.optional;\n\n                                return \"<div class='\" + (encode(styles.field)) + \" \" + (colSpan ? (\"k-colspan-\" + (encode(colSpan))) : '') + \" \" + (hidden ? (\"\" + (encode(styles.hidden))) : '') + \"'>\" +\n                                  ((label && !hidden) ?\n                                  \"<label class='\" + (encode(styles.label)) + \"' for='\" + (encode(id)) + \"' id='\" + (encode(id)) + \"-form-label'>\" +\n                                      ((typeof label.encoded != 'undefined' && label.encoded === false) ?\n                                      label.text || label\n                                      : encode(label.text || label)) +\n                                      (label.optional ? (\"<span class='\" + (encode(styles.optional)) + \"'>\" + (encode(optional)) + \"</span>\") : '') +\n                                  \"</label>\"\n                                  : '' ) +\n                                  \"<div class='k-form-field-wrap' data-container-for='\" + (encode(field)) + \"'></div>\" +\n                              \"</div>\";\n          },\n\n              _boolLabelTemplate: function (ref) {\n                                var styles = ref.styles;\n                                var colSpan = ref.colSpan;\n                                var hidden = ref.hidden;\n                                var field = ref.field;\n                                var label = ref.label;\n                                var id = ref.id;\n                                var optional = ref.optional;\n\n                                return \"<label class='k-checkbox-label' for='\" + (encode(id)) + \"' id='\" + (encode(id)) + \"-form-label'>\" +\n                                  ((typeof label.encoded != 'undefined' && label.encoded === false) ?\n                                  label.text || label\n                                  : encode(label.text || label)) +\n                                  (label.optional ? (\"<span class='\" + (encode(styles.optional)) + \"'>\" + (encode(optional)) + \"</span>\") : '') +\n                              \"</label>\";\n          },\n\n              _groupTemplate: function (ref) {\n                                var styles = ref.styles;\n                                var colSpan = ref.colSpan;\n                                var label = ref.label;\n\n                                return \"<fieldset class='\" + (encode(styles.fieldset)) + \" \" + (colSpan ? (\"k-colspan-\" + (encode(colSpan))) : '') + \"'>\" +\n                                  \"<legend class='\" + (encode(styles.legend)) + \"'>\" + (encode(label.text || label)) + \"</legend>\" +\n                              \"</fieldset>\";\n          },\n\n              _buttonsTemplate: function (ref) {\n                                var styles = ref.styles;\n                                var messages = ref.messages;\n\n                                return \"<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary \" + (encode(styles.submit)) + \"' type='submit'><span class='k-button-text'>\" + (encode(messages.submit)) + \"</span></button>\" +\n                              \"<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base \" + (encode(styles.clear)) + \"'><span class='k-button-text'>\" + (encode(messages.clear)) + \"</span></button>\";\n          },\n\n              _errorTemplate: function (ref) {\n                var field = ref.field;\n                var message = ref.message;\n\n                return (\"<span class='k-form-error' id='\" + field + \"-form-error'><div>\" + message + \"</div></span>\");\n          },\n\n              _hintTemplate: function (ref) {\n                var id = ref.id;\n                var message = ref.message;\n\n                return (\"<div class='k-form-hint' id='\" + id + \"-form-hint'><span>\" + message + \"</span></div>\");\n          },\n\n              _wrapper: function() {\n                  var that = this,\n                      options = that.options,\n                      formStyles = Form.styles,\n                      width = options.width,\n                      height = options.height;\n\n                  that.wrapper = that.element\n                      .addClass(formStyles.form)\n                      .addClass(formStyles[options.orientation]);\n\n                  if (height) {\n                      that.wrapper.height(height);\n                  }\n\n                  if (width) {\n                      that.wrapper.css(MAX_WIDTH, width);\n                  }\n\n                  that.layoutWrapper = that._setupLayoutContainer(that.wrapper, {\n                      grid: options.grid,\n                      layout: options.layout\n                  });\n              },\n\n              _flattenFields: function(fields) {\n                  var items = [].concat(fields),\n                      item = items.shift(),\n                      result = [],\n                      push = [].push;\n\n                  while (item) {\n                      if (item.items) {\n                          push.apply(items, item.items);\n                      } else {\n                          push.call(result, item);\n                      }\n\n                      item = items.shift();\n                  }\n\n                  return result;\n              },\n\n              _defaultLabel: function(fieldName) {\n                  var that = this,\n                      customFormat = that.options.formatLabel;\n\n                  if (!fieldName.length) {\n                      return;\n                  }\n\n                  if (kendo.isFunction(customFormat)) {\n                      return customFormat(fieldName);\n                  }\n\n                  return fieldName.split(/(.*[a-z])(?=[A-Z])/).join(\" \").trim() + \":\";\n              },\n\n              _formatLabel: function(field, label) {\n                  var that = this,\n                      text = $.isPlainObject(label) ? label.text : label;\n\n                  if (text !== undefined$1) {\n                      return label;\n                  }\n\n                  return that._defaultLabel(field);\n              },\n\n              _defaultFields: function() {\n                  var that = this,\n                      options = that.options,\n                      formDataFields = Object.keys(options.formData || {}),\n                      itemFields = options.items || {},\n                      defaultFormDataFields = [],\n                      field;\n\n                  if (itemFields.length) {\n                      return itemFields;\n                  }\n\n                  for (var i = 0; i < formDataFields.length; i += 1) {\n                      field = formDataFields[i];\n\n                      defaultFormDataFields.push({\n                          field: field,\n                          id: field\n                      });\n                  }\n\n                  return defaultFormDataFields;\n              },\n\n              _setFields: function() {\n                  var that = this,\n                      defaultFields = that._flattenFields(that._defaultFields()),\n                      formData = that.options.formData || {},\n                      fieldInfo, fieldValue, type, editor, attributes;\n\n                  that._fields = [];\n\n                  for (var field in defaultFields) {\n                      fieldInfo = defaultFields[field];\n                      fieldValue = formData[fieldInfo.field];\n\n                      type = typeof fieldInfo.editor === \"string\" ? fieldInfo.editor :\n                          kendo.type(fieldValue ? kendo.parseDate(fieldValue.toString()) || fieldValue : fieldValue);\n\n                      editor = kendo.isFunction(fieldInfo.editor) ? fieldInfo.editor :\n                           ui.Editable.fn.options.editors[type] ? \"\" : fieldInfo.editor;\n\n                      if (!that._isHidden(fieldInfo.editor)) {\n                          if (fieldInfo.label) {\n                              attributes = {\n                                  \"aria-labelledby\": fieldInfo.id || fieldInfo.field + \"-form-label\"\n                              };\n                          } else if (!fieldInfo.attributes || !fieldInfo.attributes[\"aria-label\"]) {\n                              attributes = {\n                                  \"aria-label\": fieldInfo.name || fieldInfo.field\n                              };\n                          }\n                      }\n\n                      fieldInfo = extend(true, {\n                          label: fieldInfo.label || fieldInfo.name || fieldInfo.field,\n                          optionalText: that.options.messages.optional\n                      }, fieldInfo, {\n                          id: fieldInfo.id || fieldInfo.field,\n                          name: fieldInfo.name || fieldInfo.field,\n                          type: type,\n                          editor: editor,\n                          attributes: attributes,\n                          isHidden: that._isHidden(fieldInfo.editor) || that._isAntiForgeryToken(fieldInfo.name || fieldInfo.field)\n                      });\n\n                      that._fields[field] = fieldInfo;\n                  }\n              },\n\n              _setModel: function() {\n                  var that = this,\n                      options = that.options,\n                      formData = options.formData || {};\n\n                  if (options.formData instanceof kendo.data.ObservableObject) {\n                      that._model = formData;\n                      return;\n                  }\n\n                  var MyModel = kendo.data.Model.define({ fields: that._fields });\n\n                  that._model = new MyModel(formData);\n              },\n\n              _editable: function() {\n                  var that = this,\n                      options = that.options,\n                      validatorOptions = that.options.validatable;\n\n                  that._addEditableMvvmAttributes();\n\n                  that.editable = that.wrapper.kendoEditable({\n                      model: that._model,\n                      fields: that._fields || [],\n                      validateOnBlur: validatorOptions.validateOnBlur,\n                      validationSummary: validatorOptions.validationSummary,\n                      errorTemplate: validatorOptions.errorTemplate || that._errorTemplate,\n                      clearContainer: false,\n                      skipFocus: !options.focusFirst,\n                      target: that\n                  }).getKendoEditable();\n\n                  that.validator = that.editable.validatable;\n\n                  that._removeEditableMvvmAttributes();\n              },\n\n              _addEditableMvvmAttributes: function() {\n                  // required for two mvvm bindable widgets on one element\n                  this.wrapper.attr(DATA_ROLE, EDITABLE);\n              },\n\n              _removeEditableMvvmAttributes: function() {\n                  // required for two mvvm bindable widgets on one element\n                  this.wrapper\n                      .attr(DATA_STOP, true)\n                      .attr(DATA_ROLE, FORM);\n              },\n\n              _getItemTemplate: function(type) {\n                  var that = this,\n                      template;\n\n                  if (type === GROUP) {\n                      template = that._groupTemplate;\n                  } else {\n                      template = that._fieldTemplate;\n                  }\n\n                  return template;\n              },\n\n              _isHidden: function(editor) {\n                  return typeof editor === \"string\" && editor === \"hidden\";\n              },\n\n              _isAntiForgeryToken: function(field) {\n                  return field === ui.Editable.antiForgeryTokenName;\n\n              },\n\n              _renderField: function(item) {\n                  var that = this,\n                      formStyles = Form.styles,\n                      isHorizontal = that.options.orientation === formOrientation.horizontal,\n                      fieldType = that._model.fields && that._model.fields[item.field] && that._model.fields[item.field].type,\n                      isBoolField = fieldType && fieldType === \"boolean\",\n                      fieldTemplate, renderedField;\n\n                  if (isBoolField && isHorizontal) {\n                      fieldTemplate = that._noLabelfieldTemplate;\n                  } else {\n                      fieldTemplate = that._fieldTemplate;\n                  }\n\n                  renderedField = (kendo.template(fieldTemplate)({\n                      styles: formStyles,\n                      id: item.id || item.field || \"\",\n                      field: item.field || \"\",\n                      label: isBoolField ? null : that._formatLabel(item.field, item.label),\n                      colSpan: item.colSpan || \"\",\n                      optional: that.options.messages.optional,\n                      hidden: that._isHidden(item.editor) || that._isAntiForgeryToken(item.field)\n                  }));\n\n                  return renderedField;\n              },\n\n              _toggleFieldErrorState: function(element, state) {\n                  var field = element.closest(DOT + formStyles.field);\n\n                  if (field.length) {\n                      field.toggleClass(formStyles.fieldError, state);\n                  }\n              },\n\n              _renderBoolLabels: function() {\n                  var that = this,\n                      formStyles = Form.styles,\n                      fields = that._fields,\n                      field, fieldElement;\n\n                  for (var i = 0; i < fields.length; i += 1) {\n                      field = fields[i];\n                      fieldElement = that.wrapper.find(\"[name='\" + field.name + \"']:not([type='hidden'])\");\n\n                      if (!fieldElement || !field.label || field.isHidden || field.type !== \"boolean\") {\n                          continue;\n                      }\n\n                      fieldElement.after(kendo.template(that._boolLabelTemplate)({\n                          styles: formStyles,\n                          id: field.id || field.field || \"\",\n                          optional: that.options.messages.optional,\n                          label: that._formatLabel(field.field, field.label)\n                      }));\n                  }\n              },\n\n              _renderFieldsHints: function() {\n                  var that = this,\n                      fields = that._fields,\n                      field, fieldWidgetInstance, fieldElement, nextLabelElement, hint;\n\n                  for (var i = 0; i < fields.length; i += 1) {\n                      field = fields[i];\n                      fieldElement = that.wrapper.find(\"[name='\" + field.name + \"']\");\n\n                      if (!fieldElement || !field.hint || field.isHidden) {\n                          continue;\n                      }\n\n                      hint = $(kendo.template(that._hintTemplate)({ message: field.hint || \"\", id: field.id }));\n\n                      that._associateHintContainer(fieldElement, hint.attr(\"id\"));\n\n                      fieldWidgetInstance = kendo.widgetInstance(fieldElement);\n\n                      if (fieldWidgetInstance) {\n                          nextLabelElement = fieldWidgetInstance.element.next(\"label[for='\" + fieldWidgetInstance.element.attr(\"id\") + \"']\");\n                          fieldElement = nextLabelElement.length ? nextLabelElement : fieldWidgetInstance.wrapper;\n                      }\n\n                      if (that.validator._errorsByName(field.name).length) {\n                          hint.toggleClass(formStyles.hidden);\n                          kendo.removeAttribute(fieldElement, ARIA_DESCRIBEDBY, hint.attr(\"id\"));\n                      }\n\n                      hint.insertAfter(fieldElement);\n                  }\n              },\n\n              _associateHintContainer: function(input, hintId) {\n                  var nextFocusable = kendo.getWidgetFocusableElement(input);\n\n                  if (!nextFocusable || !hintId) {\n                      return;\n                  }\n\n                  kendo.toggleAttribute(nextFocusable, ARIA_DESCRIBEDBY, hintId);\n              },\n\n              _toggleHint: function(element, state) {\n                  var that = this,\n                      field = element.closest(DOT + formStyles.field),\n                      hint;\n\n                  if (field.length) {\n                      hint = field.find(DOT + formStyles.fieldHint);\n\n                      if (hint.length) {\n                          hint.toggleClass(formStyles.hidden, state);\n                          that._associateHintContainer(element, hint.attr(\"id\"));\n                      }\n                  }\n              },\n\n              _renderGroup: function(item) {\n                  var that = this,\n                      type = item.type,\n                      child, renderedGroup, fieldsContainer;\n\n                  fieldsContainer = renderedGroup = $(kendo.template(that._getItemTemplate(type))({\n                      styles: formStyles,\n                      label: item.label || \"\",\n                      colSpan: item.colSpan\n                  }));\n\n                  fieldsContainer = that._setupLayoutContainer(renderedGroup, {\n                      grid: item.grid,\n                      layout: item.layout\n                  }) || renderedGroup;\n\n                  for (var i = 0; i < item.items.length; i += 1) {\n                      child = item.items[i];\n                      fieldsContainer.append(that._renderField(child));\n                  }\n\n                  return renderedGroup;\n              },\n\n              _renderContainers: function() {\n                  var that = this,\n                      defaultFields = that._defaultFields(),\n                      columnsLayout = that.options.layout === \"grid\",\n                      targetContainer = columnsLayout ? that.layoutWrapper : that.wrapper,\n                      item, type, container;\n\n                  for (var i = 0; i < defaultFields.length; i += 1) {\n                      item = defaultFields[i];\n                      type = item.type;\n\n                      if (type === GROUP) {\n                          container = that._renderGroup(item);\n                      } else {\n                          container = that._renderField(item);\n                      }\n\n                      targetContainer.append(container);\n                  }\n              },\n\n              _renderButtons: function() {\n                  var that = this,\n                      wrapper = that.wrapper,\n                      options = that.options,\n                      messages = options.messages,\n                      formStyles = Form.styles,\n                      isHorizontal = options.orientation === formOrientation.horizontal,\n                      buttonsContainer = wrapper.find(DOT + formStyles.buttonsContainer),\n                      buttonsTemplate;\n\n                  if (!buttonsContainer.length) {\n                      buttonsContainer = $(\"<div />\")\n                          .addClass(formStyles.buttonsContainer)\n                          .addClass(isHorizontal ? formStyles.buttonsEnd : \"\");\n                  }\n\n                  buttonsTemplate = options.buttonsTemplate !== null ? options.buttonsTemplate : that._buttonsTemplate;\n\n                  buttonsContainer.append(kendo.template(buttonsTemplate)({\n                      styles: formStyles,\n                      messages: messages\n                  }));\n\n                  that.element.append(buttonsContainer);\n              },\n\n              _setupLayoutContainer: function(appendTarget, options) {\n                  var layout = options.layout,\n                      grid = options.grid,\n                      layoutClassNames = [],\n                      layoutContainer;\n\n                  if (typeof layout === \"string\" && layout !== \"\") {\n                      layoutContainer = $(\"<div></div>\")\n                          .appendTo(appendTarget)\n                          .addClass(formStyles.layout);\n\n                      layoutClassNames.push(\"k-d-\" + layout);\n                  }\n\n                  if (layout === \"grid\" && typeof grid === \"object\") {\n                      if (typeof grid.cols === \"number\") {\n                          layoutClassNames.push(\"k-grid-cols-\" + grid.cols);\n                      } else if (typeof grid.cols === \"string\") {\n                          layoutContainer.css(\"grid-template-columns\", grid.cols);\n                      }\n\n                      if (typeof grid.gutter === \"number\" || typeof grid.gutter === \"string\") {\n                          layoutContainer.css(\"grid-gap\", grid.gutter);\n                      }\n                  }\n\n                  if (layoutContainer) {\n                      layoutContainer.addClass(layoutClassNames.join(\" \"));\n                  }\n\n                  return layoutContainer;\n              },\n\n              _setEvents: function() {\n                  var that = this,\n                      validator = that.validator;\n\n                  validator\n                      .bind(VALIDATEINPUT, that._validateField.bind(that))\n                      .bind(VALIDATE, that._validate.bind(that));\n\n                  that.wrapper\n                      .on(SUBMIT + NS, that._submit.bind(that))\n                      .on(CLEAR + NS, that._clear.bind(that))\n                      .on(CLICK + NS, DOT + formStyles.clear, that._clear.bind(that));\n\n                  if (!that._changeHandler) {\n                      that._changeHandler = that._change.bind(that);\n                  }\n\n                  that._model.bind(CHANGE, that._changeHandler);\n              },\n\n              _validateField: function(ev) {\n                  var that = this,\n                      data = {\n                          model: that._model.toJSON(),\n                          valid: ev.valid,\n                          field: ev.field,\n                          error: ev.error,\n                          input: ev.input\n                      };\n\n                  that._toggleFieldErrorState(data.input, !data.valid);\n\n                  that._toggleHint(data.input, !data.valid);\n\n                  if (that.trigger(VALIDATEFIELD, data)) {\n                      ev.preventDefault();\n                  }\n              },\n\n              _validate: function(ev) {\n                  var that = this,\n                      data = {\n                          model: that._model.toJSON(),\n                          valid: ev.valid,\n                          errors: ev.errors\n                      };\n\n                  that.trigger(VALIDATE, data);\n              },\n\n              _change: function(ev) {\n                  var that = this,\n                      field = ev.field,\n                      data = {\n                          field: field,\n                          value: that._model[field]\n                      };\n\n                  that.trigger(CHANGE, data);\n              },\n\n              _submit: function(ev) {\n                  var that = this,\n                      jsonModel = that._model.toJSON();\n\n                  if (that.trigger(SUBMIT, { model: jsonModel })) {\n                      ev.preventDefault();\n                  }\n              },\n\n              _clear: function(ev) {\n                  var that = this;\n\n                  ev.preventDefault();\n\n                  that.clear();\n\n                  that.trigger(CLEAR);\n              },\n\n              validate: function() {\n                  var that = this,\n                      validator = that.validator;\n\n                  if (!validator) {\n                      return;\n                  }\n\n                  return validator.validate();\n              },\n\n              clear: function() {\n                  var that = this,\n                      fields = that._fields,\n                      model = that._model,\n                      editable = that.editable,\n                      validateOnBlur = that.validator.options.validateOnBlur;\n\n                  that.validator.reset();\n\n                  if (validateOnBlur) {\n                      model\n                          .unbind(SET)\n                          .unbind(EQUAL_SET);\n                  }\n\n                  for (var i = 0; i < fields.length; i += 1) {\n                      var field = fields[i].field;\n                      var element = that.wrapper.find(\"[name='\" + field + \"']\");\n                      var widgetInstance = kendo.widgetInstance(element);\n                      var isHiddenInput = element.is(\"input[type=hidden]\");\n\n                      if (!element.is(DATA_ROLE_CHECKBOX_GROUP) && !element.is(DATA_ROLE_RADIO_GROUP) && !isHiddenInput) {\n                          element.val(\"\");\n                      }\n\n                      if (!widgetInstance && element.hasClass(\"k-hidden\")) {\n                          widgetInstance = kendo.widgetInstance(element.closest(\".k-signature\"));\n                      }\n\n                      if (widgetInstance) {\n                          if (widgetInstance instanceof kendo.ui.Upload) {\n                              widgetInstance.clearAllFiles();\n                          } else {\n                              widgetInstance.value(null);\n                          }\n                      }\n\n                      that._toggleHint(element, false);\n\n                      if (typeof model[field] === \"boolean\") {\n                          element.val(\"false\");\n                          model.set(field, false);\n                      } else if (!isHiddenInput) {\n                          model.set(field, null);\n                      }\n                  }\n\n                  that.wrapper.find(DOT + formStyles.fieldError)\n                      .removeClass(formStyles.fieldError);\n\n                  if (validateOnBlur) {\n                      model\n                          .bind(SET, editable._validateProxy)\n                          .bind(EQUAL_SET, editable._validateProxy);\n                  }\n              },\n\n              setOptions: function(newOptions) {\n                  var that = this;\n\n                  that.destroy();\n\n                  that.wrapper\n                      .removeClass(formStyles.horizontal)\n                      .removeAttr(DATA_STOP)\n                      .empty();\n\n                  that.init(that.element, newOptions);\n              },\n\n              destroy: function() {\n                  var that = this;\n\n                  that.wrapper.off(NS);\n\n                  if (that._model) {\n                      that._model.unbind(CHANGE, that._changeHandler);\n                      that._changeHandler = null;\n                  }\n\n                  Widget.fn.destroy.call(that.editable);\n\n                  Widget.fn.destroy.call(that);\n\n                  if (that.editable) {\n                      that.editable.destroy();\n                      that.editable = null;\n                  }\n              }\n          });\n\n          ui.plugin(Form);\n\n          extend(true, Form, { styles: formStyles });\n\n    })(window.kendo.jQuery);\n\n}));\n"]}