{"version":3,"file":"kendo.chiplist.min.js","names":["factory","define","amd","$","kendo","ui","Widget","keys","isPlainObject","isEmptyObject","NS","DOT","SELECT","REMOVE","html","chipListStyles","ChipList","window","jQuery","widget","item","selected","disabled","enabledItemSelector","extend","init","element","options","that","this","fn","call","renderChipList","_selectable","selectable","_applyAriaAttributes","_bindEvents","_items","name","items","fillMode","rounded","size","itemSize","events","destroy","_keydownProxy","unbind","_selectProxy","_removeProxy","off","find","each","_getChipFromElement","attr","role","_updateCssClasses","styles","removeClass","index","className","indexOf","addClass","getValidCssClass","_getInitializeChipOptions","itemOptions","attributes","tabindex","removable","remove","select","getKendoChip","chipOptions","selectedItems","chipEl","firstNavigatableItem","i","length","append","_createChip","_getFirstNavigatableItem","_applyTabIndex","filter","ind","ch","chip","_isItem","is","itemElement","el","kendoChip","_keydown","bind","_select","_remove","on","ev","sender","_triggerSelect","preventDefault","trigger","originalEvent","selectedChipElement","_removeItem","wrapper","_focusNavigatableItem","target","closest","key","keyCode","LEFT","RIGHT","nextCandidate","_getNavigatableItem","focus","first","_getLastNavigatableItem","last","current","prevAll","nextAll","children","state","enable","isNaN","eq","itemById","id","add","before","method","targetElement","setOptions","empty","plugin"],"sources":["kendo.chiplist.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.chip', 'kendo.html.chiplist'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"chiplist\",\n        name: \"ChipList\",\n        category: \"web\",\n        docsCategory: \"navigation\",\n        description: \"The ChipList component.\",\n        depends: [\"core\", \"chip\", \"html.chiplist\"]\n    };\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            keys = kendo.keys,\n            isPlainObject = $.isPlainObject,\n            isEmptyObject = $.isEmptyObject,\n\n            NS = \".kendoChipList\",\n            PREFIX = \"k-chip-list-\",\n            DOT = \".\",\n\n            SELECT = \"select\",\n            REMOVE = \"remove\";\n        var html = kendo.html;\n\n        var chipListStyles = {\n            widget: \"k-chip-list\",\n            item: \"k-chip\",\n            selected: \"k-selected\",\n            disabled: \"k-disabled\",\n            enabledItemSelector: \"k-chip:not(.k-disabled)\"\n        };\n\n        var ChipList = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                options = options || {};\n                Widget.fn.init.call(that, element, options);\n\n                html.renderChipList(element, $.extend({}, options));\n\n                that._selectable = that.options.selectable;\n                that._applyAriaAttributes();\n                that._bindEvents();\n                that._items();\n            },\n\n            options: {\n                name: \"ChipList\",\n                selectable: \"none\",\n                items: [],\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                size: \"medium\",\n                itemSize: \"medium\"\n            },\n\n            events: [\n                SELECT,\n                REMOVE\n            ],\n\n            destroy: function() {\n                var that = this;\n\n                if (that._keydownProxy) {\n                    that.unbind(that._keydownProxy);\n                    that._keydownProxy = null;\n                }\n\n                if (that._selectProxy) {\n                    that.unbind(that._selectProxy);\n                    that._selectProxy = null;\n                }\n\n                if (that._removeProxy) {\n                    that.unbind(that._removeProxy);\n                    that._removeProxy = null;\n                }\n\n                that.element.off(NS);\n                that.element.find(\"[data-role='chip']\").each(function() {\n                    that._getChipFromElement(this).destroy();\n                });\n\n                Widget.fn.destroy.call(this);\n            },\n\n            _applyAriaAttributes: function() {\n                var that = this;\n                if (that._selectable !== \"none\") {\n                    that.element.attr({\n                        \"aria-multiselectable\": that._selectable === \"multiple\",\n                        role: \"listbox\",\n                        \"aria-label\": that.element.attr(\"id\") + \" listbox\",\n                        \"aria-orientation\": \"horizontal\"\n                    });\n                }\n            },\n\n            _updateCssClasses: function() {\n                var that = this,\n                    options = that.options,\n                    styles = chipListStyles;\n\n                // Remove all class names\n                that.element.removeClass(function(index, className) {\n                    if (className.indexOf('k-') === 0) {\n                        that.element.removeClass(className);\n                    }\n                });\n\n                that.element.addClass(styles.widget);\n                that.element.addClass(kendo.getValidCssClass(PREFIX, \"size\", options.size));\n            },\n\n            _getInitializeChipOptions: function(itemOptions) {\n                var that = this,\n                    options = that.options;\n\n                var attributes = $.extend(itemOptions.attributes || {}, {\n                    tabindex: \"-1\"\n                });\n\n                if (options.selectable !== \"none\") {\n                    attributes.role = \"option\";\n                    attributes[\"aria-selected\"] = itemOptions.selected;\n                }\n\n                if (itemOptions.removable) {\n                    attributes[\"aria-keyshortcuts\"] = \"Enter Delete\";\n                }\n\n                return $.extend({\n                    fillMode: options.fillMode,\n                    size: options.itemSize,\n                    rounded: options.rounded,\n                    selectable: options.selectable !== \"none\",\n                    removable: options.removable,\n                    remove: that._removeProxy,\n                    select: that._selectProxy,\n                }, itemOptions, { attributes: attributes });\n            },\n\n            _getChipFromElement: function(element) {\n                return $(element).getKendoChip() || $(element).find(\"[data-role='chip']\").getKendoChip();\n            },\n\n            _items: function() {\n                var that = this,\n                    options = that.options,\n                    items = options.items,\n                    chipOptions,\n                    selectedItems,\n                    chipEl,\n                    firstNavigatableItem,\n                    item;\n\n                for (var i = 0; i < items.length; i++) {\n                    chipOptions = that._getInitializeChipOptions(items[i]);\n                    chipEl = $(\"<span></span>\");\n                    that.element.append(chipEl);\n                    item = that._createChip(chipEl, chipOptions);\n                }\n\n                firstNavigatableItem = that._getFirstNavigatableItem();\n                if (firstNavigatableItem) {\n                    that._applyTabIndex(that.items().index(firstNavigatableItem));\n                }\n\n                if (that._selectable === \"single\") {\n                    selectedItems = that.items().filter(DOT + chipListStyles.selected);\n                    selectedItems.each(function(ind, ch) {\n                        if (ind !== selectedItems.length - 1) {\n                            var chip = that._getChipFromElement(ch);\n                            if (chip) {\n                                chip.select(false);\n                            }\n                        }\n                    });\n                }\n            },\n\n            _isItem: function(item) {\n                var that = this;\n\n                item = $(item);\n\n                return item.is(DOT + chipListStyles.item) && !!that.element.find(item).length;\n            },\n\n            _applyTabIndex: function(index) {\n                var that = this;\n                var itemElement = that.item(+index ? +index : 0);\n\n                that.items().each(function(ind, el) {\n                    $(el).attr(\"tabindex\", \"-1\");\n                });\n\n                itemElement.attr(\"tabindex\", \"0\");\n            },\n\n            _createChip: function(element, chipOptions) {\n                return element.kendoChip(chipOptions);\n            },\n\n            _bindEvents: function() {\n                var that = this;\n                that._keydownProxy = that._keydown.bind(that);\n                that._selectProxy = that._select.bind(that);\n                that._removeProxy = that._remove.bind(that);\n\n                that.element.on(\"keydown\" + NS, DOT + chipListStyles.item, that._keydownProxy);\n            },\n\n            _select: function(ev) {\n                var that = this,\n                    chip = ev.sender;\n\n                if (that._selectable == \"none\") {\n                    ev.preventDefault();\n                    return;\n                }\n\n                that._triggerSelect(chip, ev);\n            },\n\n            _triggerSelect: function(item, ev) {\n                var that = this,\n                    selectedItems;\n\n                if (that.element.is(DOT + chipListStyles.disabled)) {\n                    return;\n                }\n\n                if (that.trigger(SELECT, { originalEvent: ev, item: item })) {\n                    return;\n                }\n\n                if (that._selectable === \"single\") {\n                    selectedItems = that.select();\n                    if (selectedItems.length > 0) {\n                        selectedItems.each(function(ind, selectedChipElement) {\n                            var chip = that._getChipFromElement(selectedChipElement);\n                            if (chip && chip !== item) {\n                                chip.select(false);\n                            }\n                        });\n                    }\n                }\n            },\n\n            _remove: function(ev) {\n                var that = this,\n                    chip = ev.sender;\n\n                if (that.trigger(REMOVE, { originalEvent: ev, item: ev.sender })) {\n                    return;\n                }\n\n                that._removeItem(chip);\n            },\n\n            _removeItem: function(chip) {\n                var that = this;\n                if (chip) {\n                    var el = chip.wrapper;\n                    chip.destroy();\n                    el.remove();\n                    that._focusNavigatableItem();\n                }\n            },\n\n            _keydown: function(ev) {\n                // change the tabindex to the next/prev chip\n                // and remove it from the others\n                var that = this,\n                    target = $(ev.target).closest(DOT + chipListStyles.item),\n                    key = ev.keyCode;\n\n                if (key === keys.LEFT || key === keys.RIGHT) {\n                    that._focusNavigatableItem(key, target);\n                }\n                // add support for Home and End keys?\n            },\n\n            _focusNavigatableItem: function(key, target) {\n                var that = this;\n                var nextCandidate = that._getNavigatableItem(key, target);\n                if (nextCandidate) {\n                    that._applyTabIndex(that.items().index(nextCandidate));\n                    nextCandidate.focus();\n                }\n            },\n\n            _getFirstNavigatableItem: function() {\n                var that = this;\n                return that.items().filter(DOT + chipListStyles.enabledItemSelector).first();\n            },\n\n            _getLastNavigatableItem: function() {\n                var that = this;\n                return that.items().filter(DOT + chipListStyles.enabledItemSelector).last();\n            },\n\n            _getNavigatableItem: function(key, target) {\n                var that = this;\n                var current;\n\n                if (target) {\n                    current = target;\n                } else {\n                    current = that._getFirstNavigatableItem();\n                }\n\n                if (key === keys.LEFT && target) {\n                    current = target.prevAll(DOT + chipListStyles.enabledItemSelector).first();\n                }\n\n                if (key === keys.RIGHT && target) {\n                    current = target.nextAll(DOT + chipListStyles.enabledItemSelector).first();\n                }\n\n                return current.length ? current : null;\n            },\n\n            items: function() {\n                var that = this;\n                return that.element.children();\n            },\n\n            select: function(item, state) {\n                var that = this,\n                    chip,\n                    selectedItems = that.items().filter(DOT + chipListStyles.selected);\n\n                if (!item) {\n                    return selectedItems;\n                }\n\n                state = state !== false;\n\n                chip = that._getChipFromElement(item);\n                if (chip) {\n                    if (that._selectable === \"single\") {\n                        selectedItems = that.select();\n                        if (selectedItems.length > 0) {\n                            selectedItems.each(function(ind, selectedChipElement) {\n                                var chip = that._getChipFromElement(selectedChipElement);\n                                if (chip && chip !== item) {\n                                    chip.select(false);\n                                }\n                            });\n                        }\n                    }\n\n                    chip.select(state);\n                }\n            },\n\n            enable: function(item, state) {\n                var chip = this._getChipFromElement(item);\n                state = state !== false;\n\n                if (chip) {\n                    chip.enable(state);\n                }\n            },\n\n            item: function(index) {\n                var that = this;\n\n                if (isNaN(index)) {\n                    return null;\n                }\n\n                return that.items().eq(index);\n            },\n\n            itemById: function(id) {\n                var that = this;\n\n                return that.element.find(\"#\" + id);\n            },\n\n            add: function(item, before) {\n                // add validation to get element, options object and a Chip widget\n                var that = this,\n                    method = \"append\",\n                    chip,\n                    chipEl,\n                    targetElement = that.element;\n\n                if (before && that._isItem(before)) {\n                    method = \"before\";\n                    targetElement = $(before);\n                }\n\n                chip = that._getChipFromElement(item);\n                if (chip) {\n                    targetElement[method](chip.wrapper);\n                } else if (item && isPlainObject(item) && !isEmptyObject(item)) {\n                    chipEl = $(\"<span></span>\");\n                    targetElement[method](chipEl);\n                    that._createChip(chipEl, that._getInitializeChipOptions(item));\n                }\n            },\n\n            remove: function(item) {\n                var that = this;\n\n                if (item && that._isItem(item)) {\n                    kendo.destroy(item);\n                    item.remove();\n                    that._focusNavigatableItem();\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                Widget.fn.setOptions.call(this, options);\n                that._updateCssClasses();\n\n                if (options.items) {\n                    that.element.empty();\n                    that._items();\n                }\n            }\n        });\n\n        ui.plugin(ChipList);\n    })(window.kendo.jQuery);\n\n}));\n"]}