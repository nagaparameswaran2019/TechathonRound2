{"version":3,"file":"kendo.dataviz.stock.min.js","names":["factory","define","amd","window","kendo","dataviz","elementStyles","deepExtend","toTime","datavizConstants","constants","Chart","drawing","FadeOutAnimation","Animation","extend","setup","this","_initialOpacity","parseFloat","element","opacity","step","pos","String","interpolateValue","abort","fn","call","display","cancel","createDiv","className","style","div","document","createElement","cssText","NavigatorHint","Class","init","container","chartService","options","padding","chartPadding","top","paddingTop","left","paddingLeft","createElements","appendChild","tooltip","scroll","innerHTML","show","from","to","bbox","ref","middle","toDate","scrollWidth","width","minPos","center","x","scale","max","min","offset","text","intl","format","template","getTemplate","clearHideTimeout","_visible","visibility","offsetWidth","y1","tooltipStyle","marginTop","borderTopWidth","height","_hideTimeout","clearTimeout","_hideAnimation","hide","this$1$1","setTimeout","play","hideDelay","destroy","removeChild","setDefaultOptions","NAVIGATOR_PANE","NAVIGATOR_AXIS","Navigator","chart","obj","navigator","select","parseDate","defined","hint","visible","chartObserver","InstanceObserver","DRAG","DRAG_END","ZOOM","ZOOM_END","addObserver","value","clean","selection","removeObserver","redraw","_redrawSelf","initSelection","axis","mainAxis","ref$1","roundedRange","ref$2","mousewheel","axisClone","ClonedObject","prototype","categoriesCount","box","Selection","valueOrDefault","zoom","selectStart","selectEnd","setRange","_createPlotArea","namedCategoryAxes","filterAxes","silent","plotArea","_plotArea","last","panes","redrawSlaves","slavePanes","slice","srcSeries","series","categoryAxis","clearSeriesPointsCache","_drag","e","duration","coords","_eventCoordinates","originalEvent","navigatorAxis","naviRange","inNavigator","pane","containsPoint","range","axisRanges","name","limitValue","liveDrag","set","showHint","_dragEnd","filter","readSelection","ref_selection_options","allAxes","idx","length","requiresHandlers","args","type","axisOptions","DateCategoryAxis","baseUnit","categories","addDuration","baseUnitStep","trigger","_zoom","ref_options","delta","fromIx","categoryIndex","toIx","preventDefault","Math","abs","scaleRange","_mousewheelZoomRate","_zoomEnd","backgroundBox","_selectStart","_select","_selectEnd","themeOptions","__navi","naviOptions","concat","paneOptions","push","attachAxes","attachSeries","categoryAxes","valueAxes","valueAxis","justifyAxis","filterSeriesByType","EQUALLY_SPACED_SERIES","base","roundToBaseUnit","justified","_collapse","majorTicks","labels","autoBind","autoBindElements","autoBaseUnitSteps","minutes","hours","days","weeks","months","years","user","maxDateGroups","title","position","plotBands","_overlap","mirror","majorGridLines","navigatorSeries","seriesColors","defaults","seriesDefaults","color","categoryField","dateField","visibleInLegend","StockChart","applyDefaults","elementSize","DEFAULT_WIDTH","theme","stockDefaults","axisDefaults","floor","_setElementClass","addClass","setOptions","destroyNavigator","noTransitionsRedraw","transitions","_fullRedraw","_resize","_redraw","_dirty","partialRedraw","seriesCount","grep","s","dirty","_seriesCount","_trackSharedTooltip","paneByPoint","_unsetActivePoint","bindCategories","copyNavigatorCategories","definitions","axisIx","_stopChartHandlers","_toggleDragZoomEvents","_dragZoomEnabled","touchAction","narrowRange","markers","line","legend","$","ChartInstanceObserver","ui","KendoStockChart","CHANGE","StockInstanceObserver","handlerMap","navigatorFilter","navigatorCreated","category","toString","persistSeriesVisibility","_createChart","_initNavigatorOptions","_instance","observer","sender","rtl","_isRtl","navigatorOptions","support","isTouch","touch","isFirefox","browser","mozilla","dataSource","_initDataSource","userOptions","hasServerFiltering","serverFiltering","hasSelect","dummyAxis","buildFilter","_onNavigatorCreated","_navigator","_initNavigatorDataSource","dsOptions","_navigatorDataChangedHandler","_onNavigatorDataChanged","bind","_navigatorDataSource","data","DataSource","create","fetch","_bindNavigatorSeries","seriesIx","currentSeries","seriesLength","_isBindable","currentAxis","naviCategories","instance","axesLength","view","_sourceSeries","_bindCategoryAxis","_model","_dataBound","_bindCategories","_onDataChanged","_removeNavigatorDataSource","_onNavigatorFilter","names","inArray","navigatorDataSource","unbind","field","operator","plugin","jQuery"],"sources":["kendo.dataviz.stock.js"],"mappings":"CAAA,SAAWA,GACW,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,2BAA4BD,GACjFA,IAFJ,EAGG,YAQC,WAGAG,OAAOC,MAAMC,QAAUF,OAAOC,MAAMC,SAAW,GAC/C,IAAIA,EAAUD,MAAMC,QAChBC,EAAgBD,EAAQC,cACxBC,EAAaF,EAAQE,WACrBC,EAASH,EAAQG,OACjBC,EAAmBJ,EAAQK,UAC3BC,EAAQN,EAAQM,MAChBC,EAAUR,MAAMQ,QAEhBC,EAAmBD,EAAQE,UAAUC,OAAO,CAC5CC,MAAO,WACHC,KAAKC,gBAAkBC,WAAWb,EAAcW,KAAKG,QAAS,WAAWC,UAG7EC,KAAM,SAASC,GACXjB,EAAcW,KAAKG,QAAS,CACxBC,QAASG,OAAOnB,EAAQoB,iBAAiBR,KAAKC,gBAAiB,EAAGK,OAI1EG,MAAO,WACHd,EAAQE,UAAUa,GAAGD,MAAME,KAAKX,MAChCX,EAAcW,KAAKG,QAAS,CACxBS,QAAS,OACTR,QAASG,OAAOP,KAAKC,oBAI7BY,OAAQ,WACJlB,EAAQE,UAAUa,GAAGD,MAAME,KAAKX,MAChCX,EAAcW,KAAKG,QAAS,CACxBC,QAASG,OAAOP,KAAKC,sBAKjC,SAASa,EAAUC,EAAWC,GAC1B,IAAIC,EAAMC,SAASC,cAAc,OAMjC,OALAF,EAAIF,UAAYA,EACZC,IACAC,EAAID,MAAMI,QAAUJ,GAGjBC,EAGX,IAAII,EAAgBjC,EAAQkC,MAAMxB,OAAO,CACrCyB,KAAM,SAASC,EAAWC,EAAcC,GAEpC1B,KAAK0B,QAAUpC,EAAW,GAAIU,KAAK0B,QAASA,GAC5C1B,KAAKwB,UAAYA,EACjBxB,KAAKyB,aAAeA,EAEpB,IAAIE,EAAUtC,EAAcmC,EAAW,CAAE,cAAe,eACxDxB,KAAK4B,aAAe,CAChBC,IAAKF,EAAQG,WACbC,KAAMJ,EAAQK,aAGlBhC,KAAKiC,iBACLT,EAAUU,YAAYlC,KAAKG,UAG/B8B,eAAgB,WACZ,IAAI9B,EAAUH,KAAKG,QAAUW,EAAU,mBAAoB,2DACvDqB,EAAUnC,KAAKmC,QAAUrB,EAAU,6BACnCsB,EAASpC,KAAKoC,OAAStB,EAAU,YAErCqB,EAAQE,UAAY,SAEpBlC,EAAQ+B,YAAYC,GACpBhC,EAAQ+B,YAAYE,IAGxBE,KAAM,SAASC,EAAMC,EAAIC,GACrB,IAAIC,EAAM1C,KACNG,EAAUuC,EAAIvC,QACduB,EAAUgB,EAAIhB,QACdU,EAASM,EAAIN,OACbD,EAAUO,EAAIP,QACdQ,EAASvD,EAAQwD,OAAOrD,EAAOgD,GAAQhD,EAAOiD,EAAKD,GAAQ,GAC3DM,EAA6B,GAAfJ,EAAKK,QACnBC,EAASN,EAAKO,SAASC,EAAIJ,EAI3BK,GAHST,EAAKO,SAASC,EACHF,IACZrB,EAAQyB,IAAMzB,EAAQ0B,KAE9BC,EAASV,EAASjB,EAAQ0B,IAC1BE,EAAOtD,KAAKyB,aAAa8B,KAAKC,OAAO9B,EAAQ8B,OAAQjB,EAAMC,GAC3DiB,EAAWrE,EAAQsE,YAAYhC,GAEnC1B,KAAK2D,mBAEA3D,KAAK4D,WACNvE,EAAcc,EAAS,CACnB0D,WAAY,SACZjD,QAAS,UAEbZ,KAAK4D,UAAW,GAGhBH,IACAH,EAAOG,EAAS,CACZlB,KAAMA,EACNC,GAAIA,KAIZL,EAAQE,UAAYiB,EACpBjE,EAAc8C,EAAS,CACnBJ,KAAMU,EAAKO,SAASC,EAAId,EAAQ2B,YAAc,EAC9CjC,IAAKY,EAAKsB,KAGd,IAAIC,EAAe3E,EAAc8C,EAAS,CAAE,YAAa,iBAAkB,WAE3E9C,EAAc+C,EAAQ,CAClBU,MAAOD,EACPd,KAAMgB,EAASM,EAASH,EACxBrB,IAAKY,EAAKsB,GAAKC,EAAaC,UAAYD,EAAaE,eAAiBF,EAAaG,OAAS,IAGhG9E,EAAcc,EAAS,CACnB0D,WAAY,aAIpBF,iBAAkB,WACV3D,KAAKoE,cACLC,aAAarE,KAAKoE,cAGlBpE,KAAKsE,gBACLtE,KAAKsE,eAAezD,UAI5B0D,KAAM,WACF,IAAIC,EAAWxE,KAEfA,KAAK2D,mBAEL3D,KAAKoE,aAAeK,YAAW,WAC3BD,EAASZ,UAAW,EACpBY,EAASF,eAAiB,IAAI1E,EAAiB4E,EAASrE,SACxDqE,EAASF,eAAevE,QACxByE,EAASF,eAAeI,SACzB1E,KAAK0B,QAAQiD,YAGpBC,QAAS,WACL5E,KAAK2D,mBACD3D,KAAKwB,WACLxB,KAAKwB,UAAUqD,YAAY7E,KAAKG,gBAE7BH,KAAKwB,iBACLxB,KAAKyB,oBACLzB,KAAKG,eACLH,KAAKmC,eACLnC,KAAKoC,UAIpBhD,EAAQ0F,kBAAkBzD,EAAe,CACrCmC,OAAQ,gBACRmB,UAAW,MAGf,IAAII,EAAiB,aACjBC,EAAiBD,EAEjBtF,EAAY,CACfuF,eAAgBA,EAChBD,eAAgBA,GAKbE,EAAY7F,EAAQkC,MAAMxB,OAAO,CACjCyB,KAAM,SAAS2D,GAEXlF,KAAKkF,MAAQA,EACb,IAWIC,EAXAzD,EAAU1B,KAAK0B,QAAUpC,EAAW,GAAIU,KAAK0B,QAASwD,EAAMxD,QAAQ0D,WACpEC,EAAS3D,EAAQ2D,OACjBA,IACAA,EAAO9C,KAAOvC,KAAKsF,UAAUD,EAAO9C,MACpC8C,EAAO7C,GAAKxC,KAAKsF,UAAUD,EAAO7C,KAGjCpD,EAAQmG,QAAQ7D,EAAQ8D,KAAKC,WAC9B/D,EAAQ8D,KAAKC,QAAU/D,EAAQ+D,SAInCzF,KAAK0F,cAAgB,IAAItG,EAAQuG,iBAAiB3F,OAAQmF,EAAM,IAAQ3F,EAAiBoG,MAAQ,QAAST,EAAI3F,EAAiBqG,UAAY,WAAYV,EAAI3F,EAAiBsG,MAAQ,QAASX,EAAI3F,EAAiBuG,UAAY,WAAYZ,IAC1OD,EAAMc,YAAYhG,KAAK0F,gBAG3BJ,UAAW,SAASW,GAChB,OAAO7G,EAAQkG,UAAUtF,KAAKkF,MAAMzD,aAAa8B,KAAM0C,IAG3DC,MAAO,WACClG,KAAKmG,YACLnG,KAAKmG,UAAUvB,UACf5E,KAAKmG,UAAY,MAGjBnG,KAAKwF,OACLxF,KAAKwF,KAAKZ,UACV5E,KAAKwF,KAAO,OAIpBZ,QAAS,WACD5E,KAAKkF,QACLlF,KAAKkF,MAAMkB,eAAepG,KAAK0F,sBACxB1F,KAAKkF,OAGhBlF,KAAKkG,SAGTG,OAAQ,WACJrG,KAAKsG,cACLtG,KAAKuG,iBAGTA,cAAe,WACX,IAgbOpB,EA/aHD,EADMlF,KACMkF,MACZxD,EAFM1B,KAEQ0B,QACd8E,EAAOxG,KAAKyG,WACZC,EAAQF,EAAKG,eACbvD,EAAMsD,EAAMtD,IACZD,EAAMuD,EAAMvD,IACZyD,EAAQlF,EAAQ2D,OAChB9C,EAAOqE,EAAMrE,KACbC,EAAKoE,EAAMpE,GACXqE,EAAaD,EAAMC,WACnBC,GAqaG3B,EAraeqB,EAsa1BO,EAAaC,UAAY7B,EAClB,IAAI4B,GArawB,IAA3BP,EAAKS,oBAITjH,KAAKkG,QAGLY,EAAUI,IAAMV,EAAKU,IAErBlH,KAAKmG,UAAY,IAAI/G,EAAQ+H,UAAUjC,EAAO4B,EAAW,CACrD1D,IAAKA,EACLD,IAAKA,EACLZ,KAAMA,GAAQa,EACdZ,GAAIA,GAAMW,EACV0D,WAAYzH,EAAQgI,eAAeP,EAAY,CAAEQ,KAAM,SACvD5B,QAAS/D,EAAQ+D,SAClB,IAAIrG,EAAQuG,iBAAiB3F,KAAM,CAClCsH,YAAa,eACbjC,OAAQ,UACRkC,UAAW,gBAGX7F,EAAQ8D,KAAKC,UACbzF,KAAKwF,KAAO,IAAInE,EAAc6D,EAAM/E,QAAS+E,EAAMzD,aAAc,CAC7D2B,IAAKA,EACLD,IAAKA,EACLM,SAAUrE,EAAQsE,YAAYhC,EAAQ8D,MACtChC,OAAQ9B,EAAQ8D,KAAKhC,YAKjCgE,SAAU,WACN,IAGI9E,EAHW1C,KAAKkF,MAAMuC,iBAAgB,GACtBC,kBAAgC,WAErCf,eACXvD,EAAMV,EAAIU,IACVD,EAAMT,EAAIS,IAEVkC,EAASrF,KAAK0B,QAAQ2D,QAAU,GAChC9C,EAAO8C,EAAO9C,MAAQa,EACtBb,EAAOa,IACPb,EAAOa,GAGX,IAAIZ,EAAK6C,EAAO7C,IAAMW,EAClBX,EAAKW,IACLX,EAAKW,GAGTnD,KAAK0B,QAAQ2D,OAAS/F,EAAW,GAAI+F,EAAQ,CACzC9C,KAAMA,EACNC,GAAIA,IAGRxC,KAAK2H,cAGTrB,YAAa,SAASsB,GAClB,IAAIC,EAAW7H,KAAKkF,MAAM4C,UAEtBD,GACAA,EAASxB,OAAOjH,EAAQ2I,KAAKF,EAASG,OAAQJ,IAItDK,aAAc,WACV,IAAI/C,EAAQlF,KAAKkF,MACb2C,EAAW3C,EAAM4C,UACjBI,EAAaL,EAASG,MAAMG,MAAM,GAAI,GAG1CN,EAASO,UAAYlD,EAAMxD,QAAQ2G,OACnCR,EAASnG,QAAQ4G,aAAepD,EAAMxD,QAAQ4G,aAC9CT,EAASU,yBAETV,EAASxB,OAAO6B,IAGpBM,MAAO,SAASC,GACZ,IAUIC,EATAxD,EADMlF,KACMkF,MACZiB,EAFMnG,KAEUmG,UAChBwC,EAASzD,EAAM0D,kBAAkBH,EAAEI,eACnCC,EAAgB9I,KAAKyG,WACrBsC,EAAYD,EAAcnC,eAC1BqC,EAAcF,EAAcG,KAAK/B,IAAIgC,cAAcP,GACnDnC,EAAOtB,EAAM4C,UAAUQ,aACvBa,EAAQV,EAAEW,WAAW5C,EAAK9E,QAAQ2H,MAClChE,EAASrF,KAAK0B,QAAQ2D,OAG1B,GAAK8D,IAASH,GAAgB7C,EAA9B,CAKIuC,EADArD,EAAO9C,MAAQ8C,EAAO7C,GACXjD,EAAO8F,EAAO7C,IAAMjD,EAAO8F,EAAO9C,MAElChD,EAAO4G,EAAUzE,QAAQc,IAAMjD,EAAO4G,EAAUzE,QAAQa,MAGvE,IAAIA,EAAOnD,EAAQwD,OAAOxD,EAAQkK,WAC9B/J,EAAO4J,EAAM/F,KACb2F,EAAU3F,IAAK7D,EAAOwJ,EAAU5F,KAAOuF,IAGvClG,EAAKpD,EAAQwD,OAAOxD,EAAQkK,WAC5B/J,EAAOgD,GAAQmG,EACfnJ,EAAOwJ,EAAU3F,KAAOsF,EAAUK,EAAU5F,MAGhDnD,KAAK0B,QAAQ2D,OAAS,CAAE9C,KAAMA,EAAMC,GAAIA,GAEpCxC,KAAK0B,QAAQ6H,WACbvJ,KAAK2H,aACL3H,KAAKiI,gBAGT9B,EAAUqD,IAAIjH,EAAMC,GAEpBxC,KAAKyJ,SAASlH,EAAMC,KAGxBkH,SAAU,WACN1J,KAAK2H,aACL3H,KAAK2J,SACL3J,KAAKiI,eAEDjI,KAAKwF,MACLxF,KAAKwF,KAAKjB,QAIlBqF,cAAe,WACX,IACIC,EADM7J,KACsBmG,UAAUzE,QACtCa,EAAOsH,EAAsBtH,KAC7BC,EAAKqH,EAAsBrH,GAC3B6C,EAJMrF,KAIO0B,QAAQ2D,OAEzBA,EAAO9C,KAAOA,EACd8C,EAAO7C,GAAKA,GAGhBmF,WAAY,WACR,IACItC,EADMrF,KACO0B,QAAQ2D,YAAuB,IAAXA,IAAqBA,EAAS,IAMnE,IALA,IACIyE,EAHM9J,KAEMkF,MACIxD,QAAQ4G,aACxB/F,EAAO8C,EAAO9C,KACdC,EAAK6C,EAAO7C,GAEPuH,EAAM,EAAGA,EAAMD,EAAQE,OAAQD,IAAO,CAC3C,IAAIvD,EAAOsD,EAAQC,GACfvD,EAAKyC,OAASlE,IACdyB,EAAKpD,IAAMb,EACXiE,EAAKrD,IAAMX,KAKvBmH,OAAQ,WACJ,IACIzE,EADMlF,KACMkF,MACZG,EAFMrF,KAEO0B,QAAQ2D,OAEzB,GAAKH,EAAM+E,iBAAiB,CAAE,oBAA9B,CAIA,IAAIxD,EAAWzG,KAAKyG,WAChByD,EAAO,CACP3H,KAAM8C,EAAO9C,KACbC,GAAI6C,EAAO7C,IAGf,GAA8B,aAA1BiE,EAAS/E,QAAQyI,KAAqB,CACtC,IAAIC,EAAc,IAAIhL,EAAQiL,iBAAiB/K,EAAW,CACtDgL,SAAU,OACXpF,EAAMxD,QAAQ4G,aAAa,GAAI,CAC9BiC,WAAY,CAAElF,EAAO9C,KAAM8C,EAAO7C,MAClC0C,EAAMzD,cAAcC,QAExBwI,EAAK3H,KAAOnD,EAAQoL,YAAYJ,EAAYhH,KAAMgH,EAAYK,aAAcL,EAAYE,UACxFJ,EAAK1H,GAAKpD,EAAQoL,YAAYJ,EAAYjH,IAAKiH,EAAYK,aAAcL,EAAYE,UAGzFtK,KAAKkF,MAAMwF,QAAQ,kBAAmBR,KAG1CS,MAAO,SAASlC,GACZ,IAAI/F,EAAM1C,KACNwG,EAAO9D,EAAIwC,MAAM4C,UAAUQ,aAC3BnC,EAAYzD,EAAIyD,UAChByE,EAAclI,EAAIhB,QAClB2D,EAASuF,EAAYvF,OACrBkE,EAAWqB,EAAYrB,SACvB9C,EAAWzG,KAAKyG,WAChBoE,EAAQpC,EAAEoC,MAEd,GAAK1E,EAAL,CAIA,IAAI2E,EAASrE,EAASsE,cAAc5E,EAAUzE,QAAQa,MAClDyI,EAAOvE,EAASsE,cAAc5E,EAAUzE,QAAQc,IAChDmG,EAAS3I,KAAKkF,MAAM0D,kBAAkBH,EAAEI,eAE5CJ,EAAEI,cAAcoC,iBAEZC,KAAKC,IAAIN,GAAS,IAClBA,GAvRY,GA0RZG,EAAOF,EAAS,GAChB3E,EAAUkB,KAAKwD,EAAOlC,GACtB3I,KAAK4J,kBAELpD,EAAK9E,QAAQ0B,IAAMiC,EAAO9C,KAC1B8C,EAAO9C,KAAOiE,EAAK4E,YAAY3C,EAAEoC,MAAQ7K,KAAKkF,MAAMmG,sBAAuB1C,GAAQvF,KAGnFmG,IACAvJ,KAAK2H,aACL3H,KAAKiI,gBAGT9B,EAAUqD,IAAInE,EAAO9C,KAAM8C,EAAO7C,IAElCxC,KAAKyJ,SAASzJ,KAAK0B,QAAQ2D,OAAO9C,KAAMvC,KAAK0B,QAAQ2D,OAAO7C,MAGhE8I,SAAU,SAAS7C,GACfzI,KAAK0J,SAASjB,IAGlBgB,SAAU,SAASlH,EAAMC,GACrB,IAAIqF,EAAW7H,KAAKkF,MAAM4C,UAEtB9H,KAAKwF,MACLxF,KAAKwF,KAAKlD,KAAKC,EAAMC,EAAIqF,EAAS0D,kBAI1CC,aAAc,SAAS/C,GACnB,OAAOzI,KAAKkF,MAAMsG,aAAa/C,IAGnCgD,QAAS,SAAShD,GAGd,OAFAzI,KAAKyJ,SAAShB,EAAElG,KAAMkG,EAAEjG,IAEjBxC,KAAKkF,MAAMuG,QAAQhD,IAG9BiD,WAAY,SAASjD,GAUjB,OATIzI,KAAKwF,MACLxF,KAAKwF,KAAKjB,OAGdvE,KAAK4J,gBACL5J,KAAK2H,aACL3H,KAAK2J,SACL3J,KAAKiI,eAEEjI,KAAKkF,MAAMwG,WAAWjD,IAGjChC,SAAU,WACN,IAAIoB,EAAW7H,KAAKkF,MAAM4C,UAE1B,GAAID,EACA,OAAOA,EAASH,kBAAgC,YAIxDrC,OAAQ,SAAS9C,EAAMC,GACnB,IAAI6C,EAASrF,KAAK0B,QAAQ2D,OAa1B,OAXI9C,GAAQC,IACR6C,EAAO9C,KAAOvC,KAAKsF,UAAU/C,GAC7B8C,EAAO7C,GAAKxC,KAAKsF,UAAU9C,GAE3BxC,KAAK2H,aACL3H,KAAK2J,SACL3J,KAAKiI,eAELjI,KAAKmG,UAAUqD,IAAIjH,EAAMC,IAGtB,CACHD,KAAM8C,EAAO9C,KACbC,GAAI6C,EAAO7C,OA6HvB,SAASuE,KAxHT9B,EAAUlF,MAAQ,SAAS2B,EAASiK,GAIhC,QAHgB,IAAZjK,IAAsBA,EAAU,SACf,IAAjBiK,IAA2BA,EAAe,KAE1CjK,EAAQkK,OAAZ,CAGAlK,EAAQkK,QAAS,EAEjB,IAAIC,EAAcvM,EAAW,GAAIqM,EAAavG,UAAW1D,EAAQ0D,WAC7D4C,EAAQtG,EAAQsG,MAAQ,GAAG8D,OAAOpK,EAAQsG,OAC1C+D,EAAczM,EAAW,GAAIuM,EAAY5C,KAAM,CAAEI,KAAMtE,IAEtD8G,EAAYpG,UACbsG,EAAYtG,SAAU,EACtBsG,EAAY5H,OAAS,IAGzB6D,EAAMgE,KAAKD,GAEX9G,EAAUgH,WAAWvK,EAASmK,GAC9B5G,EAAUiH,aAAaxK,EAASmK,EAAaF,KAGjD1G,EAAUgH,WAAa,SAASvK,EAASmK,GACrC,IAAIxD,EAASwD,EAAYxD,QAAU,GAC/B8D,EAAezK,EAAQ4G,aAAe,GAAGwD,OAAOpK,EAAQ4G,cACxD8D,EAAY1K,EAAQ2K,UAAY,GAAGP,OAAOpK,EAAQ2K,WAGlDC,EAA6C,IADvBlN,EAAQmN,mBAAmBlE,EAAQ7I,EAAiBgN,uBACxCxC,OAElCyC,EAAOnN,EAAW,CAClB6K,KAAM,OACNlB,KAAMlE,EACN2H,iBAAkBJ,EAClBK,UAAWL,EACXM,WAAW,EACXC,WAAY,CAAEpH,SAAS,GACvBtD,QAAS,CAAEsD,SAAS,GACpBqH,OAAQ,CAAEzM,KAAM,GAChB0M,SAAUlB,EAAYmB,iBACtBC,kBAAmB,CACfC,QAAS,CAAE,GACXC,MAAO,CAAE,EAAG,GACZC,KAAM,CAAE,EAAG,GACXC,MAAO,GACPC,OAAQ,CAAE,GACVC,MAAO,CAAE,MAGbC,EAAO3B,EAAYvD,aAEvB6D,EAAaH,KACT1M,EAAW,GAAImN,EAAM,CACjBgB,cAAe,KAChBD,EAAM,CACLnE,KAAMrE,EACN0I,MAAO,KACPpD,SAAU,MACVG,aAAc,OACdqC,OAAQ,CAAErH,SAAS,GACnBoH,WAAY,CAAEpH,SAAS,KACvBnG,EAAW,GAAImN,EAAMe,EAAM,CAC3BnE,KAAMrE,oBACNyI,cAAe,GACfhD,aAAc,OACdqC,OAAQ,CAAEa,SAAU,IACpBC,UAAW,GACXX,kBAAmB,CACfC,QAAS,IAEbW,UAAU,IACVvO,EAAW,GAAImN,EAAMe,EAAM,CAC3BnE,KAAMrE,mBACNyI,cAAe,IACfZ,WAAY,CACR/J,MAAO,IAEX8K,UAAW,GACXF,MAAO,KACPZ,OAAQ,CAAErH,SAAS,EAAOqI,QAAQ,GAClCD,UAAU,KAIlBzB,EAAUJ,KAAK1M,EAAW,CACtB+J,KAAMrE,EACNiE,KAAMlE,EACNgJ,eAAgB,CACZtI,SAAS,GAEbA,SAAS,GACVoG,EAAYQ,aAGnBpH,EAAUiH,aAAe,SAASxK,EAASmK,EAAaF,GAMpD,IALA,IAAItD,EAAS3G,EAAQ2G,OAAS3G,EAAQ2G,QAAU,GAC5C2F,EAAkB,GAAGlC,OAAOD,EAAYxD,QAAU,IAClD4F,EAAetC,EAAasC,aAC5BC,EAAWrC,EAAYsC,eAElBpE,EAAM,EAAGA,EAAMiE,EAAgBhE,OAAQD,IAC5C1B,EAAO2D,KACH1M,EAAW,CACP8O,MAAOH,EAAalE,EAAMkE,EAAajE,QACvCqE,cAAexC,EAAYyC,UAC3BC,iBAAiB,EACjBpM,QAAS,CACLsD,SAAS,IAEdyI,EAAUF,EAAgBjE,GAAM,CAC/BvD,KAAMxB,EACNsD,aAActD,EACd+H,SAAUlB,EAAYmB,qBAYtC,IAEIwB,EAAa9O,EAAMI,OAAO,CAC1B2O,cAAe,SAAS/M,EAASiK,GAC7B,IAAI7I,EAAQ1D,EAAQsP,YAAY1O,KAAKG,SAAS2C,OAAStD,EAAiBmP,cACpEC,EAAQjD,EAERkD,EAAgB,CAChBV,eAAgB,CACZE,cAAe3M,EAAQ4M,WAE3BQ,aAAc,CACVxG,aAAc,CACVe,KAAM,UACN0E,eAAgB,CACZtI,SAAS,GAEbqH,OAAQ,CACJzM,KAAM,GAEVwM,WAAY,CACRpH,SAAS,GAEbgI,cAAevC,KAAK6D,MAAMjM,EAvBpB,OA4Bd8L,IACAA,EAAQtP,EAAW,GAAIsP,EAAOC,IAGlC5J,EAAUlF,MAAM2B,EAASkN,GAEzBlP,EAAMgB,GAAG+N,cAAc9N,KAAKX,KAAM0B,EAASkN,IAG/CI,iBAAkB,SAAS7O,GACvBf,EAAQ6P,SAAS9O,EAAS,yBAG9B+O,WAAY,SAASxN,GACjB1B,KAAKmP,mBACLzP,EAAMgB,GAAGwO,WAAWvO,KAAKX,KAAM0B,IAGnC0N,oBAAqB,WACjB,IAAIC,EAAcrP,KAAK0B,QAAQ2N,YAE/BrP,KAAK0B,QAAQ2N,aAAc,EAC3BrP,KAAKsP,cACLtP,KAAK0B,QAAQ2N,YAAcA,GAG/BE,QAAS,WACLvP,KAAKoP,uBAGTI,QAAS,WACL,IAAIpK,EAAYpF,KAAKoF,WAEhBpF,KAAKyP,UAAYrK,GAAaA,EAAU1D,QAAQgO,cACjDtK,EAAU6C,eAEVjI,KAAKsP,eAIbG,OAAQ,WACJ,IAAI/N,EAAU1B,KAAK0B,QACf2G,EAAS,GAAGyD,OAAOpK,EAAQ2G,OAAQ3G,EAAQ0D,UAAUiD,QACrDsH,EAAcvQ,EAAQwQ,KAAKvH,GAAQ,SAASwH,GAAK,OAAOA,GAAKA,EAAEpK,WAAYuE,OAC3E8F,EAAQ9P,KAAK+P,eAAiBJ,EAGlC,OAFA3P,KAAK+P,aAAeJ,EAEbG,GAGXR,YAAa,WACT,IAAIlK,EAAYpF,KAAKoF,UAEhBA,IACDA,EAAYpF,KAAKoF,UAAY,IAAIH,EAAUjF,MAC3CA,KAAK0K,QAAQ,mBAAoB,CAAEtF,UAAWA,KAGlDA,EAAUc,QACVd,EAAUoC,WAEV9H,EAAMgB,GAAG8O,QAAQ7O,KAAKX,MAEtBoF,EAAUmB,iBAGdyJ,oBAAqB,SAASrH,GAC1B,IACIM,EADWjJ,KAAK8H,UACAmI,YAAYtH,GAE5BM,GAAQA,EAAKvH,QAAQ2H,OAAStE,EAC9B/E,KAAKkQ,oBAELxQ,EAAMgB,GAAGsP,oBAAoBrP,KAAKX,KAAM2I,IAIhDwH,eAAgB,WACZzQ,EAAMgB,GAAGyP,eAAexP,KAAKX,MAC7BA,KAAKoQ,2BAGTA,wBAAyB,WAIrB,IAHA,IACI7F,EADA8F,EAAc,GAAGvE,OAAO9L,KAAK0B,QAAQ4G,cAGhCgI,EAAS,EAAGA,EAASD,EAAYrG,OAAQsG,IAAU,CACxD,IAAI9J,EAAO6J,EAAYC,GACnB9J,EAAK6C,OAASrE,EACduF,EAAa/D,EAAK+D,WACXA,GAAc/D,EAAKyC,OAASlE,IACnCyB,EAAK+D,WAAaA,KAK9B4E,iBAAkB,WACVnP,KAAKoF,YACLpF,KAAKoF,UAAUR,UACf5E,KAAKoF,UAAY,OAIzBR,QAAS,WACL5E,KAAKmP,mBACLzP,EAAMgB,GAAGkE,QAAQjE,KAAKX,OAG1BuQ,mBAAoB,SAAS9H,GACzB,IAAIE,EAAS3I,KAAK4I,kBAAkBH,GAChCQ,EAAOjJ,KAAK8H,UAAUmI,YAAYtH,GAEtC,OAAOjJ,EAAMgB,GAAG6P,mBAAmB5P,KAAKX,KAAMyI,IAAOQ,GAAQA,EAAKvH,QAAQ2H,OAAStE,GAGvFyL,sBAAuB,WACdxQ,KAAKyQ,mBACNzQ,KAAKG,QAAQa,MAAM0P,YAAc,OAEjC1Q,KAAKyQ,kBAAmB,MAKpCrR,EAAQ0F,kBAAkB0J,EAAY,CAClCF,UAAW,OACXQ,aAAc,CACVxG,aAAc,CACV6B,KAAM,OACNG,SAAU,MACVqC,WAAW,GAEfN,UAAW,CACPsE,aAAa,EACb7D,OAAQ,CACJtJ,OAAQ,OAIpB4B,UAAW,CACPC,OAAQ,GACR8I,eAAgB,CACZyC,QAAS,CACLnL,SAAS,GAEbtD,QAAS,CACLsD,SAAS,GAEboL,KAAM,CACF/N,MAAO,IAGf0C,KAAM,GACNC,SAAS,GAEbtD,QAAS,CACLsD,SAAS,GAEbqL,OAAQ,CACJrL,SAAS,KAIjBtG,MAAMG,WAAWH,MAAMC,QAAS,CAC5BK,UAAWA,EACXwF,UAAWA,EACX5D,cAAeA,EACfmN,WAAYA,IAh2BhB,GAq2BA,SAAUuC,GAEN,IAAI5R,EAAQD,OAAOC,MACfC,EAAUD,EAAMC,QAChB4R,EAAwB5R,EAAQ4R,sBAChCtR,EAAQN,EAAQ6R,GAAGvR,MACnBwR,EAAkB9R,EAAQoP,WAC1B/O,EAAYL,EAAQK,UACpBuF,EAAiBvF,EAAUuF,eAC3BD,EAAiBtF,EAAUsF,eAC3BzF,EAAaH,EAAMG,WACnBiG,EAAUnG,EAAQmG,QAElB4L,EAAS,SAETC,EAAwBJ,EAAsBlR,OAAO,CACrDuR,WAAY,CACRC,gBAAiB,qBACjBC,iBAAkB,yBAItB/C,EAAa9O,EAAMI,OAAO,CAE1B4B,QAAS,CACL2H,KAAM,aACNiF,UAAW,OACXQ,aAAc,CACVxG,aAAc,CACV6B,KAAM,OACNG,SAAU,MACVqC,WAAW,GAEfN,UAAW,CACPsE,aAAa,EACb7D,OAAQ,CACJtJ,OAAQ,OAIpB4B,UAAW,CACPC,OAAQ,GACR8I,eAAgB,CACZyC,QAAS,CACLnL,SAAS,GAEbtD,QAAS,CACLsD,SAAS,EACThC,SAAU,SAAUf,GAChB,IAAI8O,EAAW9O,EAAI8O,SAEnB,OAAOrS,EAAMsS,SAASD,EAAU,OAGxCX,KAAM,CACF/N,MAAO,IAGf0C,KAAM,GACNC,SAAS,GAEbtD,QAAS,CACLsD,SAAS,GAEbqL,OAAQ,CACJrL,SAAS,GAEbiM,yBAAyB,GAG7BC,aAAc,SAASjQ,EAASiK,GAC5B3L,KAAK4R,sBAAsBlQ,GAC3B1B,KAAK6R,UAAY,IAAIX,EAAgBlR,KAAKG,QAAQ,GAAIuB,EAASiK,EAAc,CACzEmG,SAAU,IAAIV,EAAsBpR,MACpC+R,OAAQ/R,KACRgS,IAAKhS,KAAKiS,YAIlBL,sBAAuB,SAASlQ,GAC5B,IAAIwQ,EAAmBxQ,EAAQ0D,WAAa,GACxC+M,EAAUhT,EAAMgT,QAChBC,EAAUD,EAAQE,MAClBC,EAAYH,EAAQI,QAAQC,QAEhClT,EAAW4S,EAAkB,CACzBlF,kBAAmBkF,EAAiBO,WACpC/C,cAAewC,EAAiBO,WAChClJ,UAAW6I,IAAYE,KAI/BI,gBAAiB,SAASC,GACtB,IAAIjR,EAAUiR,GAAe,GACzBF,EAAa/Q,EAAQ+Q,WACrBG,EAAqBH,GAAcA,EAAWI,gBAC9CpM,EAAW,GAAGqF,OAAOpK,EAAQ4G,cAAc,GAE3CjD,GADc3D,EAAQ0D,WAAa,IACdC,OACrByN,EAAYzN,GAAUA,EAAO9C,MAAQ8C,EAAO7C,GAEhD,GAAIoQ,GAAsBE,EAAW,CACjC,IAAInJ,EAAS,GAAGmC,OAAO2G,EAAW9I,QAAU,IAExCpH,EAAOpD,EAAMmG,UAAUD,EAAO9C,MAC9BC,EAAKrD,EAAMmG,UAAUD,EAAO7C,IAC5BuQ,EAAY,IAAI3T,EAAQiL,iBAAiB/K,EAAW,CACpDgL,SAAU,OACX7D,EAAU,CACT8D,WAAY,CAAChI,EAAMC,KACnBrD,GAEJsT,EAAW9I,OAASqJ,EAAYD,EAAU5J,QAAQ/F,IAAKZ,GAAIsJ,OAAOnC,GAGtEjK,EAAMgB,GAAGgS,gBAAgB/R,KAAKX,KAAM2S,IAGxCM,oBAAqB,SAASxK,GAC1BzI,KAAK6R,UAAYpJ,EAAEsJ,OACnB/R,KAAK0B,QAAU+G,EAAEsJ,OAAOrQ,QACxB1B,KAAKkT,WAAalT,KAAKoF,UAAYqD,EAAErD,UACrCpF,KAAKmT,4BAGTA,yBAA0B,WACtB,IAAIjB,EAAmBlS,KAAK0B,QAAQ0D,UAChC2H,EAAWmF,EAAiBnF,SAC5BqG,EAAYlB,EAAiBO,WAE7BW,IACApT,KAAKqT,6BAA+BrT,KAAKqT,8BAAgCrT,KAAKsT,wBAAwBC,KAAKvT,MAC3GA,KAAKwT,qBAAuBrU,EAAMsU,KAAKC,WAClCC,OAAOP,GACPG,KAAKpC,EAAQnR,KAAKqT,8BAElB9N,EAAQwH,KACVA,EAAW/M,KAAK0B,QAAQqL,UAGvBA,GACA/M,KAAKwT,qBAAqBI,UAKtCC,qBAAsB,SAASxL,EAAQoL,GACnC,IAAIK,EAAUC,EACVC,EAAe3L,EAAO2B,OAE1B,IAAK8J,EAAW,EAAGA,EAAWE,EAAcF,KACxCC,EAAgB1L,EAAOyL,IAELtN,MAAQxB,GAAkBhF,KAAKiU,YAAYF,KACzDA,EAAcN,KAAOA,IAKjCH,wBAAyB,WACrB,IAGIhD,EAGA4D,EACAC,EAPAjP,EAAQlF,KACRoU,EAAWlP,EAAM2M,UACjB1F,EAAejH,EAAMxD,QAAQ4G,aAE7B+L,EAAalI,EAAanC,OAC1ByJ,EAAOvO,EAAMsO,qBAAqBc,OAStC,IALAtU,KAAK6T,qBAAqB3O,EAAMxD,QAAQ2G,OAAQoL,GAC5CvO,EAAMqP,eACNvU,KAAK6T,qBAAqB3O,EAAMqP,cAAed,GAG9CnD,EAAS,EAAGA,EAAS+D,EAAY/D,KAClC4D,EAAc/H,EAAamE,IAEXrH,MAAQlE,IAChBmP,EAAY7K,MAAQrE,GACpBE,EAAMsP,kBAAkBN,EAAaT,EAAMnD,GAC3C6D,EAAiBD,EAAY3J,YAE7B2J,EAAY3J,WAAa4J,GAKrC,GAAIC,EAASK,OAAQ,CACjB,IAAIrP,EAAYpF,KAAKoF,UACrBA,EAAUiB,SACVjB,EAAUoC,aAELtC,EAAMxD,QAAQ+Q,YAAevN,EAAMxD,QAAQ+Q,YAAcvN,EAAMwP,aAChEtP,EAAU6C,iBAKtB0M,gBAAiB,WACbjV,EAAMgB,GAAGiU,gBAAgBhU,KAAKX,MAC1BA,KAAK6R,WACL7R,KAAK6R,UAAUzB,2BAIvBwE,eAAgB,WACZlV,EAAMgB,GAAGkU,eAAejU,KAAKX,MAE7BA,KAAK0U,YAAa,GAGtBxF,WAAY,SAASxN,GACjB1B,KAAK6U,6BACL7U,KAAK4R,sBAAsBlQ,GAC3B1B,KAAK6R,UAAU1C,mBACfzP,EAAMgB,GAAGwO,WAAWvO,KAAKX,KAAM0B,IAGnCoT,mBAAoB,SAASrM,GACzBzI,KAAKyS,WAAW9I,OAAOqJ,EAAYvK,EAAElG,KAAMkG,EAAEjG,MAGjDyH,iBAAkB,SAAS8K,GACvB,GAAI3V,EAAQ4V,QAAQ,kBAAmBD,GAAQ,CAC3C,IAAItC,EAAazS,KAAKyS,WAEtB,OADyBA,GAAcA,EAAW/Q,QAAQmR,iBAC7B7S,KAAK0B,QAAQ0D,UAAUqN,WAGxD,OAAO/S,EAAMgB,GAAGuJ,iBAAiBtJ,KAAKX,KAAM+U,IAGhDF,2BAA4B,WACxB,IAAII,EAAsBjV,KAAKwT,qBAC3ByB,IACAA,EAAoBC,OAAO/D,EAAQnR,KAAKqT,qCACjCrT,KAAKwT,uBAIpB5O,QAAS,WACLlF,EAAMgB,GAAGkE,QAAQjE,KAAKX,MACtBA,KAAK6U,gCAMb,SAAS7B,EAAYzQ,EAAMC,GACvB,MAAO,CAAC,CACJ2S,MAAO,OAAQC,SAAU,MAAOnP,MAAO1D,GACxC,CACC4S,MAAO,OAAQC,SAAU,KAAMnP,MAAOzD,IAN9CpD,EAAQ6R,GAAGoE,OAAO7G,GAtPtB,CAgQGtP,OAAOC,MAAMmW","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.dataviz.chart'], factory) :\n    factory();\n})((function () {\n    /***********************************************************************\n     * WARNING: this file is auto-generated.  If you change it directly,\n     * your modifications will eventually be lost.  The source code is in\n     * `kendo-charts` repository, you should make your changes there and\n     * run `src-modules/sync.sh` in this repository.\n     */\n\n    (function() {\n    /* eslint-disable space-before-blocks, space-before-function-paren */\n\n    window.kendo.dataviz = window.kendo.dataviz || {};\n    var dataviz = kendo.dataviz;\n    var elementStyles = dataviz.elementStyles;\n    var deepExtend = dataviz.deepExtend;\n    var toTime = dataviz.toTime;\n    var datavizConstants = dataviz.constants;\n    var Chart = dataviz.Chart;\n    var drawing = kendo.drawing;\n\n    var FadeOutAnimation = drawing.Animation.extend({\n        setup: function() {\n            this._initialOpacity = parseFloat(elementStyles(this.element, 'opacity').opacity);\n        },\n\n        step: function(pos) {\n            elementStyles(this.element, {\n                opacity: String(dataviz.interpolateValue(this._initialOpacity, 0, pos))\n            });\n        },\n\n        abort: function() {\n            drawing.Animation.fn.abort.call(this);\n            elementStyles(this.element, {\n                display: 'none',\n                opacity: String(this._initialOpacity)\n            });\n        },\n\n        cancel: function() {\n            drawing.Animation.fn.abort.call(this);\n            elementStyles(this.element, {\n                opacity: String(this._initialOpacity)\n            });\n        }\n    });\n\n    function createDiv(className, style) {\n        var div = document.createElement(\"div\");\n        div.className = className;\n        if (style) {\n            div.style.cssText = style;\n        }\n\n        return div;\n    }\n\n    var NavigatorHint = dataviz.Class.extend({\n        init: function(container, chartService, options) {\n\n            this.options = deepExtend({}, this.options, options);\n            this.container = container;\n            this.chartService = chartService;\n\n            var padding = elementStyles(container, [ \"paddingLeft\", \"paddingTop\" ]);\n            this.chartPadding = {\n                top: padding.paddingTop,\n                left: padding.paddingLeft\n            };\n\n            this.createElements();\n            container.appendChild(this.element);\n        },\n\n        createElements: function() {\n            var element = this.element = createDiv('k-navigator-hint', 'display: none; position: absolute; top: 1px; left: 1px;');\n            var tooltip = this.tooltip = createDiv('k-tooltip k-chart-tooltip');\n            var scroll = this.scroll = createDiv('k-scroll');\n\n            tooltip.innerHTML = '&nbsp;';\n\n            element.appendChild(tooltip);\n            element.appendChild(scroll);\n        },\n\n        show: function(from, to, bbox) {\n            var ref = this;\n            var element = ref.element;\n            var options = ref.options;\n            var scroll = ref.scroll;\n            var tooltip = ref.tooltip;\n            var middle = dataviz.toDate(toTime(from) + toTime(to - from) / 2);\n            var scrollWidth = bbox.width() * 0.4;\n            var minPos = bbox.center().x - scrollWidth;\n            var maxPos = bbox.center().x;\n            var posRange = maxPos - minPos;\n            var range = options.max - options.min;\n            var scale = posRange / range;\n            var offset = middle - options.min;\n            var text = this.chartService.intl.format(options.format, from, to);\n            var template = dataviz.getTemplate(options);\n\n            this.clearHideTimeout();\n\n            if (!this._visible) {\n                elementStyles(element, {\n                    visibility: 'hidden',\n                    display: 'block'\n                });\n                this._visible = true;\n            }\n\n            if (template) {\n                text = template({\n                    from: from,\n                    to: to\n                });\n            }\n\n            tooltip.innerHTML = text;\n            elementStyles(tooltip, {\n                left: bbox.center().x - tooltip.offsetWidth / 2,\n                top: bbox.y1\n            });\n\n            var tooltipStyle = elementStyles(tooltip, [ 'marginTop', 'borderTopWidth', 'height' ]);\n\n            elementStyles(scroll, {\n                width: scrollWidth,\n                left: minPos + offset * scale,\n                top: bbox.y1 + tooltipStyle.marginTop + tooltipStyle.borderTopWidth + tooltipStyle.height / 2\n            });\n\n            elementStyles(element, {\n                visibility: 'visible'\n            });\n        },\n\n        clearHideTimeout: function() {\n            if (this._hideTimeout) {\n                clearTimeout(this._hideTimeout);\n            }\n\n            if (this._hideAnimation) {\n                this._hideAnimation.cancel();\n            }\n        },\n\n        hide: function() {\n            var this$1$1 = this;\n\n            this.clearHideTimeout();\n\n            this._hideTimeout = setTimeout(function () {\n                this$1$1._visible = false;\n                this$1$1._hideAnimation = new FadeOutAnimation(this$1$1.element);\n                this$1$1._hideAnimation.setup();\n                this$1$1._hideAnimation.play();\n            }, this.options.hideDelay);\n        },\n\n        destroy: function() {\n            this.clearHideTimeout();\n            if (this.container) {\n                this.container.removeChild(this.element);\n            }\n            delete this.container;\n            delete this.chartService;\n            delete this.element;\n            delete this.tooltip;\n            delete this.scroll;\n        }\n    });\n\n    dataviz.setDefaultOptions(NavigatorHint, {\n        format: \"{0:d} - {1:d}\",\n        hideDelay: 500\n    });\n\n    var NAVIGATOR_PANE = \"_navigator\";\n    var NAVIGATOR_AXIS = NAVIGATOR_PANE;\n\n    var constants = {\n    \tNAVIGATOR_AXIS: NAVIGATOR_AXIS,\n    \tNAVIGATOR_PANE: NAVIGATOR_PANE\n    };\n\n    var ZOOM_ACCELERATION = 3;\n\n    var Navigator = dataviz.Class.extend({\n        init: function(chart) {\n\n            this.chart = chart;\n            var options = this.options = deepExtend({}, this.options, chart.options.navigator);\n            var select = options.select;\n            if (select) {\n                select.from = this.parseDate(select.from);\n                select.to = this.parseDate(select.to);\n            }\n\n            if (!dataviz.defined(options.hint.visible)) {\n                options.hint.visible = options.visible;\n            }\n\n            var obj;\n            this.chartObserver = new dataviz.InstanceObserver(this, ( obj = {}, obj[datavizConstants.DRAG] = '_drag', obj[datavizConstants.DRAG_END] = '_dragEnd', obj[datavizConstants.ZOOM] = '_zoom', obj[datavizConstants.ZOOM_END] = '_zoomEnd', obj ));\n            chart.addObserver(this.chartObserver);\n        },\n\n        parseDate: function(value) {\n            return dataviz.parseDate(this.chart.chartService.intl, value);\n        },\n\n        clean: function() {\n            if (this.selection) {\n                this.selection.destroy();\n                this.selection = null;\n            }\n\n            if (this.hint) {\n                this.hint.destroy();\n                this.hint = null;\n            }\n        },\n\n        destroy: function() {\n            if (this.chart) {\n                this.chart.removeObserver(this.chartObserver);\n                delete this.chart;\n            }\n\n            this.clean();\n        },\n\n        redraw: function() {\n            this._redrawSelf();\n            this.initSelection();\n        },\n\n        initSelection: function() {\n            var ref = this;\n            var chart = ref.chart;\n            var options = ref.options;\n            var axis = this.mainAxis();\n            var ref$1 = axis.roundedRange();\n            var min = ref$1.min;\n            var max = ref$1.max;\n            var ref$2 = options.select;\n            var from = ref$2.from;\n            var to = ref$2.to;\n            var mousewheel = ref$2.mousewheel;\n            var axisClone = clone(axis);\n\n            if (axis.categoriesCount() === 0) {\n                return;\n            }\n\n            this.clean();\n\n            // \"Freeze\" the selection axis position until the next redraw\n            axisClone.box = axis.box;\n\n            this.selection = new dataviz.Selection(chart, axisClone, {\n                min: min,\n                max: max,\n                from: from || min,\n                to: to || max,\n                mousewheel: dataviz.valueOrDefault(mousewheel, { zoom: \"left\" }),\n                visible: options.visible\n            }, new dataviz.InstanceObserver(this, {\n                selectStart: '_selectStart',\n                select: '_select',\n                selectEnd: '_selectEnd'\n            }));\n\n            if (options.hint.visible) {\n                this.hint = new NavigatorHint(chart.element, chart.chartService, {\n                    min: min,\n                    max: max,\n                    template: dataviz.getTemplate(options.hint),\n                    format: options.hint.format\n                });\n            }\n        },\n\n        setRange: function() {\n            var plotArea = this.chart._createPlotArea(true);\n            var axis = plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n\n            var ref = axis.roundedRange();\n            var min = ref.min;\n            var max = ref.max;\n\n            var select = this.options.select || {};\n            var from = select.from || min;\n            if (from < min) {\n                from = min;\n            }\n\n            var to = select.to || max;\n            if (to > max) {\n                to = max;\n            }\n\n            this.options.select = deepExtend({}, select, {\n                from: from,\n                to: to\n            });\n\n            this.filterAxes();\n        },\n\n        _redrawSelf: function(silent) {\n            var plotArea = this.chart._plotArea;\n\n            if (plotArea) {\n                plotArea.redraw(dataviz.last(plotArea.panes), silent);\n            }\n        },\n\n        redrawSlaves: function() {\n            var chart = this.chart;\n            var plotArea = chart._plotArea;\n            var slavePanes = plotArea.panes.slice(0, -1);\n\n            // Update the original series and categoryAxis before partial refresh.\n            plotArea.srcSeries = chart.options.series;\n            plotArea.options.categoryAxis = chart.options.categoryAxis;\n            plotArea.clearSeriesPointsCache();\n\n            plotArea.redraw(slavePanes);\n        },\n\n        _drag: function(e) {\n            var ref = this;\n            var chart = ref.chart;\n            var selection = ref.selection;\n            var coords = chart._eventCoordinates(e.originalEvent);\n            var navigatorAxis = this.mainAxis();\n            var naviRange = navigatorAxis.roundedRange();\n            var inNavigator = navigatorAxis.pane.box.containsPoint(coords);\n            var axis = chart._plotArea.categoryAxis;\n            var range = e.axisRanges[axis.options.name];\n            var select = this.options.select;\n            var duration;\n\n            if (!range || inNavigator || !selection) {\n                return;\n            }\n\n            if (select.from && select.to) {\n                duration = toTime(select.to) - toTime(select.from);\n            } else {\n                duration = toTime(selection.options.to) - toTime(selection.options.from);\n            }\n\n            var from = dataviz.toDate(dataviz.limitValue(\n                toTime(range.min),\n                naviRange.min, toTime(naviRange.max) - duration\n            ));\n\n            var to = dataviz.toDate(dataviz.limitValue(\n                toTime(from) + duration,\n                toTime(naviRange.min) + duration, naviRange.max\n            ));\n\n            this.options.select = { from: from, to: to };\n\n            if (this.options.liveDrag) {\n                this.filterAxes();\n                this.redrawSlaves();\n            }\n\n            selection.set(from, to);\n\n            this.showHint(from, to);\n        },\n\n        _dragEnd: function() {\n            this.filterAxes();\n            this.filter();\n            this.redrawSlaves();\n\n            if (this.hint) {\n                this.hint.hide();\n            }\n        },\n\n        readSelection: function() {\n            var ref = this;\n            var ref_selection_options = ref.selection.options;\n            var from = ref_selection_options.from;\n            var to = ref_selection_options.to;\n            var select = ref.options.select;\n\n            select.from = from;\n            select.to = to;\n        },\n\n        filterAxes: function() {\n            var ref = this;\n            var select = ref.options.select; if (select === void 0) { select = { }; }\n            var chart = ref.chart;\n            var allAxes = chart.options.categoryAxis;\n            var from = select.from;\n            var to = select.to;\n\n            for (var idx = 0; idx < allAxes.length; idx++) {\n                var axis = allAxes[idx];\n                if (axis.pane !== NAVIGATOR_PANE) {\n                    axis.min = from;\n                    axis.max = to;\n                }\n            }\n        },\n\n        filter: function() {\n            var ref = this;\n            var chart = ref.chart;\n            var select = ref.options.select;\n\n            if (!chart.requiresHandlers([ \"navigatorFilter\" ])) {\n                return;\n            }\n\n            var mainAxis = this.mainAxis();\n            var args = {\n                from: select.from,\n                to: select.to\n            };\n\n            if (mainAxis.options.type !== 'category') {\n                var axisOptions = new dataviz.DateCategoryAxis(deepExtend({\n                    baseUnit: \"fit\"\n                }, chart.options.categoryAxis[0], {\n                    categories: [ select.from, select.to ]\n                }), chart.chartService).options;\n\n                args.from = dataviz.addDuration(axisOptions.min, -axisOptions.baseUnitStep, axisOptions.baseUnit);\n                args.to = dataviz.addDuration(axisOptions.max, axisOptions.baseUnitStep, axisOptions.baseUnit);\n            }\n\n            this.chart.trigger(\"navigatorFilter\", args);\n        },\n\n        _zoom: function(e) {\n            var ref = this;\n            var axis = ref.chart._plotArea.categoryAxis;\n            var selection = ref.selection;\n            var ref_options = ref.options;\n            var select = ref_options.select;\n            var liveDrag = ref_options.liveDrag;\n            var mainAxis = this.mainAxis();\n            var delta = e.delta;\n\n            if (!selection) {\n                return;\n            }\n\n            var fromIx = mainAxis.categoryIndex(selection.options.from);\n            var toIx = mainAxis.categoryIndex(selection.options.to);\n            var coords = this.chart._eventCoordinates(e.originalEvent);\n\n            e.originalEvent.preventDefault();\n\n            if (Math.abs(delta) > 1) {\n                delta *= ZOOM_ACCELERATION;\n            }\n\n            if (toIx - fromIx > 1) {\n                selection.zoom(delta, coords);\n                this.readSelection();\n            } else {\n                axis.options.min = select.from;\n                select.from = axis.scaleRange(-e.delta * this.chart._mousewheelZoomRate(), coords).min;\n            }\n\n            if (liveDrag) {\n                this.filterAxes();\n                this.redrawSlaves();\n            }\n\n            selection.set(select.from, select.to);\n\n            this.showHint(this.options.select.from, this.options.select.to);\n        },\n\n        _zoomEnd: function(e) {\n            this._dragEnd(e);\n        },\n\n        showHint: function(from, to) {\n            var plotArea = this.chart._plotArea;\n\n            if (this.hint) {\n                this.hint.show(from, to, plotArea.backgroundBox());\n            }\n        },\n\n        _selectStart: function(e) {\n            return this.chart._selectStart(e);\n        },\n\n        _select: function(e) {\n            this.showHint(e.from, e.to);\n\n            return this.chart._select(e);\n        },\n\n        _selectEnd: function(e) {\n            if (this.hint) {\n                this.hint.hide();\n            }\n\n            this.readSelection();\n            this.filterAxes();\n            this.filter();\n            this.redrawSlaves();\n\n            return this.chart._selectEnd(e);\n        },\n\n        mainAxis: function() {\n            var plotArea = this.chart._plotArea;\n\n            if (plotArea) {\n                return plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n            }\n        },\n\n        select: function(from, to) {\n            var select = this.options.select;\n\n            if (from && to) {\n                select.from = this.parseDate(from);\n                select.to = this.parseDate(to);\n\n                this.filterAxes();\n                this.filter();\n                this.redrawSlaves();\n\n                this.selection.set(from, to);\n            }\n\n            return {\n                from: select.from,\n                to: select.to\n            };\n        }\n    });\n\n    Navigator.setup = function(options, themeOptions) {\n        if (options === void 0) { options = {}; }\n        if (themeOptions === void 0) { themeOptions = {}; }\n\n        if (options.__navi) {\n            return;\n        }\n        options.__navi = true;\n\n        var naviOptions = deepExtend({}, themeOptions.navigator, options.navigator);\n        var panes = options.panes = [].concat(options.panes);\n        var paneOptions = deepExtend({}, naviOptions.pane, { name: NAVIGATOR_PANE });\n\n        if (!naviOptions.visible) {\n            paneOptions.visible = false;\n            paneOptions.height = 0.1;\n        }\n\n        panes.push(paneOptions);\n\n        Navigator.attachAxes(options, naviOptions);\n        Navigator.attachSeries(options, naviOptions, themeOptions);\n    };\n\n    Navigator.attachAxes = function(options, naviOptions) {\n        var series = naviOptions.series || [];\n        var categoryAxes = options.categoryAxis = [].concat(options.categoryAxis);\n        var valueAxes = options.valueAxis = [].concat(options.valueAxis);\n\n        var equallySpacedSeries = dataviz.filterSeriesByType(series, datavizConstants.EQUALLY_SPACED_SERIES);\n        var justifyAxis = equallySpacedSeries.length === 0;\n\n        var base = deepExtend({\n            type: \"date\",\n            pane: NAVIGATOR_PANE,\n            roundToBaseUnit: !justifyAxis,\n            justified: justifyAxis,\n            _collapse: false,\n            majorTicks: { visible: true },\n            tooltip: { visible: false },\n            labels: { step: 1 },\n            autoBind: naviOptions.autoBindElements,\n            autoBaseUnitSteps: {\n                minutes: [ 1 ],\n                hours: [ 1, 2 ],\n                days: [ 1, 2 ],\n                weeks: [],\n                months: [ 1 ],\n                years: [ 1 ]\n            }\n        });\n        var user = naviOptions.categoryAxis;\n\n        categoryAxes.push(\n            deepExtend({}, base, {\n                maxDateGroups: 200\n            }, user, {\n                name: NAVIGATOR_AXIS,\n                title: null,\n                baseUnit: \"fit\",\n                baseUnitStep: \"auto\",\n                labels: { visible: false },\n                majorTicks: { visible: false }\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_labels\",\n                maxDateGroups: 20,\n                baseUnitStep: \"auto\",\n                labels: { position: \"\" },\n                plotBands: [],\n                autoBaseUnitSteps: {\n                    minutes: []\n                },\n                _overlap: true\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_ticks\",\n                maxDateGroups: 200,\n                majorTicks: {\n                    width: 0.5\n                },\n                plotBands: [],\n                title: null,\n                labels: { visible: false, mirror: true },\n                _overlap: true\n            })\n        );\n\n        valueAxes.push(deepExtend({\n            name: NAVIGATOR_AXIS,\n            pane: NAVIGATOR_PANE,\n            majorGridLines: {\n                visible: false\n            },\n            visible: false\n        }, naviOptions.valueAxis));\n    };\n\n    Navigator.attachSeries = function(options, naviOptions, themeOptions) {\n        var series = options.series = options.series || [];\n        var navigatorSeries = [].concat(naviOptions.series || []);\n        var seriesColors = themeOptions.seriesColors;\n        var defaults = naviOptions.seriesDefaults;\n\n        for (var idx = 0; idx < navigatorSeries.length; idx++) {\n            series.push(\n                deepExtend({\n                    color: seriesColors[idx % seriesColors.length],\n                    categoryField: naviOptions.dateField,\n                    visibleInLegend: false,\n                    tooltip: {\n                        visible: false\n                    }\n                }, defaults, navigatorSeries[idx], {\n                    axis: NAVIGATOR_AXIS,\n                    categoryAxis: NAVIGATOR_AXIS,\n                    autoBind: naviOptions.autoBindElements\n                })\n            );\n        }\n    };\n\n    function ClonedObject() { }\n    function clone(obj) {\n        ClonedObject.prototype = obj;\n        return new ClonedObject();\n    }\n\n    var AUTO_CATEGORY_WIDTH = 28;\n\n    var StockChart = Chart.extend({\n        applyDefaults: function(options, themeOptions) {\n            var width = dataviz.elementSize(this.element).width || datavizConstants.DEFAULT_WIDTH;\n            var theme = themeOptions;\n\n            var stockDefaults = {\n                seriesDefaults: {\n                    categoryField: options.dateField\n                },\n                axisDefaults: {\n                    categoryAxis: {\n                        name: \"default\",\n                        majorGridLines: {\n                            visible: false\n                        },\n                        labels: {\n                            step: 2\n                        },\n                        majorTicks: {\n                            visible: false\n                        },\n                        maxDateGroups: Math.floor(width / AUTO_CATEGORY_WIDTH)\n                    }\n                }\n            };\n\n            if (theme) {\n                theme = deepExtend({}, theme, stockDefaults);\n            }\n\n            Navigator.setup(options, theme);\n\n            Chart.fn.applyDefaults.call(this, options, theme);\n        },\n\n        _setElementClass: function(element) {\n            dataviz.addClass(element, 'k-chart k-stockchart');\n        },\n\n        setOptions: function(options) {\n            this.destroyNavigator();\n            Chart.fn.setOptions.call(this, options);\n        },\n\n        noTransitionsRedraw: function() {\n            var transitions = this.options.transitions;\n\n            this.options.transitions = false;\n            this._fullRedraw();\n            this.options.transitions = transitions;\n        },\n\n        _resize: function() {\n            this.noTransitionsRedraw();\n        },\n\n        _redraw: function() {\n            var navigator = this.navigator;\n\n            if (!this._dirty() && navigator && navigator.options.partialRedraw) {\n                navigator.redrawSlaves();\n            } else {\n                this._fullRedraw();\n            }\n        },\n\n        _dirty: function() {\n            var options = this.options;\n            var series = [].concat(options.series, options.navigator.series);\n            var seriesCount = dataviz.grep(series, function(s) { return s && s.visible; }).length;\n            var dirty = this._seriesCount !== seriesCount;\n            this._seriesCount = seriesCount;\n\n            return dirty;\n        },\n\n        _fullRedraw: function() {\n            var navigator = this.navigator;\n\n            if (!navigator) {\n                navigator = this.navigator = new Navigator(this);\n                this.trigger(\"navigatorCreated\", { navigator: navigator });\n            }\n\n            navigator.clean();\n            navigator.setRange();\n\n            Chart.fn._redraw.call(this);\n\n            navigator.initSelection();\n        },\n\n        _trackSharedTooltip: function(coords) {\n            var plotArea = this._plotArea;\n            var pane = plotArea.paneByPoint(coords);\n\n            if (pane && pane.options.name === NAVIGATOR_PANE) {\n                this._unsetActivePoint();\n            } else {\n                Chart.fn._trackSharedTooltip.call(this, coords);\n            }\n        },\n\n        bindCategories: function() {\n            Chart.fn.bindCategories.call(this);\n            this.copyNavigatorCategories();\n        },\n\n        copyNavigatorCategories: function() {\n            var definitions = [].concat(this.options.categoryAxis);\n            var categories;\n\n            for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                var axis = definitions[axisIx];\n                if (axis.name === NAVIGATOR_AXIS) {\n                    categories = axis.categories;\n                } else if (categories && axis.pane === NAVIGATOR_PANE) {\n                    axis.categories = categories;\n                }\n            }\n        },\n\n        destroyNavigator: function() {\n            if (this.navigator) {\n                this.navigator.destroy();\n                this.navigator = null;\n            }\n        },\n\n        destroy: function() {\n            this.destroyNavigator();\n            Chart.fn.destroy.call(this);\n        },\n\n        _stopChartHandlers: function(e) {\n            var coords = this._eventCoordinates(e);\n            var pane = this._plotArea.paneByPoint(coords);\n\n            return Chart.fn._stopChartHandlers.call(this, e) || (pane && pane.options.name === NAVIGATOR_PANE);\n        },\n\n        _toggleDragZoomEvents: function() {\n            if (!this._dragZoomEnabled) {\n                this.element.style.touchAction = \"none\";\n\n                this._dragZoomEnabled = true;\n            }\n        }\n    });\n\n    dataviz.setDefaultOptions(StockChart, {\n        dateField: \"date\",\n        axisDefaults: {\n            categoryAxis: {\n                type: \"date\",\n                baseUnit: \"fit\",\n                justified: true\n            },\n            valueAxis: {\n                narrowRange: true,\n                labels: {\n                    format: \"C\"\n                }\n            }\n        },\n        navigator: {\n            select: {},\n            seriesDefaults: {\n                markers: {\n                    visible: false\n                },\n                tooltip: {\n                    visible: true\n                },\n                line: {\n                    width: 2\n                }\n            },\n            hint: {},\n            visible: true\n        },\n        tooltip: {\n            visible: true\n        },\n        legend: {\n            visible: false\n        }\n    });\n\n    kendo.deepExtend(kendo.dataviz, {\n        constants: constants,\n        Navigator: Navigator,\n        NavigatorHint: NavigatorHint,\n        StockChart: StockChart\n    });\n\n    })();\n\n    (function($) {\n\n        var kendo = window.kendo;\n        var dataviz = kendo.dataviz;\n        var ChartInstanceObserver = dataviz.ChartInstanceObserver;\n        var Chart = dataviz.ui.Chart;\n        var KendoStockChart = dataviz.StockChart;\n        var constants = dataviz.constants;\n        var NAVIGATOR_AXIS = constants.NAVIGATOR_AXIS;\n        var NAVIGATOR_PANE = constants.NAVIGATOR_PANE;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n\n        var CHANGE = \"change\";\n\n        var StockInstanceObserver = ChartInstanceObserver.extend({\n            handlerMap: {\n                navigatorFilter: '_onNavigatorFilter',\n                navigatorCreated: '_onNavigatorCreated'\n            }\n        });\n\n        var StockChart = Chart.extend({\n\n            options: {\n                name: \"StockChart\",\n                dateField: \"date\",\n                axisDefaults: {\n                    categoryAxis: {\n                        type: \"date\",\n                        baseUnit: \"fit\",\n                        justified: true\n                    },\n                    valueAxis: {\n                        narrowRange: true,\n                        labels: {\n                            format: \"C\"\n                        }\n                    }\n                },\n                navigator: {\n                    select: {},\n                    seriesDefaults: {\n                        markers: {\n                            visible: false\n                        },\n                        tooltip: {\n                            visible: true,\n                            template: function (ref) {\n                                var category = ref.category;\n\n                                return kendo.toString(category, 'd');\n        }\n                        },\n                        line: {\n                            width: 2\n                        }\n                    },\n                    hint: {},\n                    visible: true\n                },\n                tooltip: {\n                    visible: true\n                },\n                legend: {\n                    visible: false\n                },\n                persistSeriesVisibility: true\n            },\n\n            _createChart: function(options, themeOptions) {\n                this._initNavigatorOptions(options);\n                this._instance = new KendoStockChart(this.element[0], options, themeOptions, {\n                    observer: new StockInstanceObserver(this),\n                    sender: this,\n                    rtl: this._isRtl()\n                });\n            },\n\n            _initNavigatorOptions: function(options) {\n                var navigatorOptions = options.navigator || {};\n                var support = kendo.support;\n                var isTouch = support.touch;\n                var isFirefox = support.browser.mozilla;\n\n                deepExtend(navigatorOptions, {\n                    autoBindElements: !navigatorOptions.dataSource,\n                    partialRedraw: navigatorOptions.dataSource,\n                    liveDrag: !isTouch && !isFirefox\n                });\n            },\n\n            _initDataSource: function(userOptions) {\n                var options = userOptions || {},\n                    dataSource = options.dataSource,\n                    hasServerFiltering = dataSource && dataSource.serverFiltering,\n                    mainAxis = [].concat(options.categoryAxis)[0],\n                    naviOptions = options.navigator || {},\n                    select = naviOptions.select,\n                    hasSelect = select && select.from && select.to;\n\n                if (hasServerFiltering && hasSelect) {\n                    var filter = [].concat(dataSource.filter || []);\n\n                    var from = kendo.parseDate(select.from);\n                    var to = kendo.parseDate(select.to);\n                    var dummyAxis = new dataviz.DateCategoryAxis(deepExtend({\n                        baseUnit: \"fit\"\n                    }, mainAxis, {\n                        categories: [from, to]\n                    }), kendo);\n\n                    dataSource.filter = buildFilter(dummyAxis.range().min, to).concat(filter);\n                }\n\n                Chart.fn._initDataSource.call(this, userOptions);\n            },\n\n            _onNavigatorCreated: function(e) {\n                this._instance = e.sender;\n                this.options = e.sender.options;\n                this._navigator = this.navigator = e.navigator;\n                this._initNavigatorDataSource();\n            },\n\n            _initNavigatorDataSource: function() {\n                var navigatorOptions = this.options.navigator;\n                var autoBind = navigatorOptions.autoBind;\n                var dsOptions = navigatorOptions.dataSource;\n\n                if (dsOptions) {\n                    this._navigatorDataChangedHandler = this._navigatorDataChangedHandler || this._onNavigatorDataChanged.bind(this);\n                    this._navigatorDataSource = kendo.data.DataSource\n                        .create(dsOptions)\n                        .bind(CHANGE, this._navigatorDataChangedHandler);\n\n                    if (!defined(autoBind)) {\n                       autoBind = this.options.autoBind;\n                    }\n\n                    if (autoBind) {\n                        this._navigatorDataSource.fetch();\n                    }\n                }\n            },\n\n            _bindNavigatorSeries: function(series, data) {\n                var seriesIx, currentSeries,\n                    seriesLength = series.length;\n\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n\n                    if (currentSeries.axis == NAVIGATOR_AXIS && this._isBindable(currentSeries)) {\n                        currentSeries.data = data;\n                    }\n                }\n            },\n\n            _onNavigatorDataChanged: function() {\n                var chart = this,\n                    instance = chart._instance,\n                    categoryAxes = chart.options.categoryAxis,\n                    axisIx,\n                    axesLength = categoryAxes.length,\n                    data = chart._navigatorDataSource.view(),\n                    currentAxis,\n                    naviCategories;\n\n                this._bindNavigatorSeries(chart.options.series, data);\n                if (chart._sourceSeries) {\n                    this._bindNavigatorSeries(chart._sourceSeries, data);\n                }\n\n                for (axisIx = 0; axisIx < axesLength; axisIx++) {\n                    currentAxis = categoryAxes[axisIx];\n\n                    if (currentAxis.pane == NAVIGATOR_PANE) {\n                        if (currentAxis.name == NAVIGATOR_AXIS) {\n                            chart._bindCategoryAxis(currentAxis, data, axisIx);\n                            naviCategories = currentAxis.categories;\n                        } else {\n                            currentAxis.categories = naviCategories;\n                        }\n                    }\n                }\n\n                if (instance._model) {\n                    var navigator = this.navigator;\n                    navigator.redraw();\n                    navigator.setRange();\n\n                    if (!chart.options.dataSource || (chart.options.dataSource && chart._dataBound)) {\n                        navigator.redrawSlaves();\n                    }\n                }\n            },\n\n            _bindCategories: function() {\n                Chart.fn._bindCategories.call(this);\n                if (this._instance) {\n                    this._instance.copyNavigatorCategories();\n                }\n            },\n\n            _onDataChanged: function() {\n                Chart.fn._onDataChanged.call(this);\n\n                this._dataBound = true;\n            },\n\n            setOptions: function(options) {\n                this._removeNavigatorDataSource();\n                this._initNavigatorOptions(options);\n                this._instance.destroyNavigator();\n                Chart.fn.setOptions.call(this, options);\n            },\n\n            _onNavigatorFilter: function(e) {\n                this.dataSource.filter(buildFilter(e.from, e.to));\n            },\n\n            requiresHandlers: function(names) {\n                if (dataviz.inArray('navigatorFilter', names)) {\n                    var dataSource = this.dataSource;\n                    var hasServerFiltering = dataSource && dataSource.options.serverFiltering;\n                    return hasServerFiltering && this.options.navigator.dataSource;\n                }\n\n                return Chart.fn.requiresHandlers.call(this, names);\n            },\n\n            _removeNavigatorDataSource: function() {\n                var navigatorDataSource = this._navigatorDataSource;\n                if (navigatorDataSource) {\n                    navigatorDataSource.unbind(CHANGE, this._navigatorDataChangedHandler);\n                    delete this._navigatorDataSource;\n                }\n            },\n\n            destroy: function() {\n                Chart.fn.destroy.call(this);\n                this._removeNavigatorDataSource();\n            }\n        });\n\n        dataviz.ui.plugin(StockChart);\n\n        function buildFilter(from, to) {\n            return [{\n                field: \"Date\", operator: \"gte\", value: from\n            }, {\n                field: \"Date\", operator: \"lt\", value: to\n            }];\n        }\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"dataviz.stockchart\",\n        name: \"StockChart\",\n        category: \"dataviz\",\n        description: \"StockChart widget and associated financial series.\",\n        depends: [ \"dataviz.chart\" ]\n    };\n\n}));\n"]}